"use strict";function init(){function e(){return!!(navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia)}if(video=document.querySelector("#webVidHost"),video.width=window.innerWidth/5,video.height=window.innerHeight/5,video.autoplay=!0,video.style.display="none",window.URL=window.URL||window.webkitURL,navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,!e())return console.log("getUserMedia() is not supported in your browser"),void 0;navigator.getUserMedia({video:!0,audio:!1},function(e){video.src=window.URL.createObjectURL(e)},function(e){console.log("Failed to get a stream due to",e)}),renderer=new THREE.WebGLRenderer,renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3),camera.position.z=400,scene=new THREE.Scene,scene.fog=new THREE.Fog(0,1,1e3),object=new THREE.Object3D,scene.add(object);var t=new THREE.CubeGeometry(400,400,400);videoTexture=new THREE.Texture(video),videoTexture.minFilter=THREE.LinearFilter,videoTexture.magFilter=THREE.LinearFilter;var i=new THREE.MeshBasicMaterial({map:videoTexture,overdraw:!0,side:THREE.DoubleSide}),r=new THREE.Mesh(t,i);object.add(r),scene.add(new THREE.AmbientLight(14540253)),light=new THREE.DirectionalLight(16777215),light.position.set(1,1,1),scene.add(light),composer=new THREE.EffectComposer(renderer),composer.addPass(new THREE.RenderPass(scene,camera));var n=new THREE.ShaderPass(THREE.DotScreenShader);n.uniforms.scale.value=5,n.uniforms.tSize.value=new THREE.Vector2(150,150),composer.addPass(n);var n=new THREE.ShaderPass(THREE.RGBShiftShader);n.uniforms.amount.value=.05,n.renderToScreen=!0,composer.addPass(n),window.addEventListener("resize",onWindowResize,!1)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){requestAnimationFrame(animate),Date.now(),object.rotation.y+=.01,video.readyState===video.HAVE_ENOUGH_DATA&&(videoTexture.needsUpdate=!0),composer.render()}var camera,scene,renderer,composer,object,light,video,videoTexture;init(),animate(),THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")},THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(.5,.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","float s = sin( angle ), c = cos( angle );","vec2 tex = vUv * tSize - center;","vec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","return ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","vec4 color = texture2D( tDiffuse, vUv );","float average = ( color.r + color.g + color.b ) / 3.0;","gl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")},THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var i=window.innerWidth||1,r=window.innerHeight||1,n={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};t=new THREE.WebGLRenderTarget(i,r,n)}this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},THREE.EffectComposer.prototype={swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var t,i,r=!1,n=this.passes.length;for(i=0;n>i;i++)if(t=this.passes[i],t.enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){var o=this.renderer.context;o.stencilFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),o.stencilFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}t instanceof THREE.MaskPass?r=!0:t instanceof THREE.ClearMaskPass&&(r=!1)}},reset:function(e){void 0===e&&(e=this.renderTarget1.clone(),e.width=window.innerWidth,e.height=window.innerHeight),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){var i=this.renderTarget1.clone();i.width=e,i.height=t,this.reset(i)}},THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),THREE.EffectComposer.scene=new THREE.Scene,THREE.EffectComposer.scene.add(THREE.EffectComposer.quad),THREE.MaskPass=function(e,t){this.scene=e,this.camera=t,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(e,t,i){var r=e.context;r.colorMask(!1,!1,!1,!1),r.depthMask(!1);var n,o;this.inverse?(n=0,o=1):(n=1,o=0),r.enable(r.STENCIL_TEST),r.stencilOp(r.REPLACE,r.REPLACE,r.REPLACE),r.stencilFunc(r.ALWAYS,n,4294967295),r.clearStencil(o),e.render(this.scene,this.camera,i,this.clear),e.render(this.scene,this.camera,t,this.clear),r.colorMask(!0,!0,!0,!0),r.depthMask(!0),r.stencilFunc(r.EQUAL,1,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(e){var t=e.context;t.disable(t.STENCIL_TEST)}},THREE.RGBShiftShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:.005},angle:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, vUv + offset);","vec4 cga = texture2D(tDiffuse, vUv);","vec4 cb = texture2D(tDiffuse, vUv - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","}"].join("\n")},THREE.RenderPass=function(e,t,i,r,n){this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=r,this.clearAlpha=void 0!==n?n:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(e,t,i){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.render(this.scene,this.camera,i,this.clear),this.clearColor&&e.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}},THREE.ShaderPass=function(e,t){this.textureID=void 0!==t?t:"tDiffuse",this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1},THREE.ShaderPass.prototype={render:function(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i),THREE.EffectComposer.quad.material=this.material,this.renderToScreen?e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,t,this.clear)}};var THREE=THREE||{REVISION:"55"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var e=e+"",t=this.lastIndexOf(e);return(t>-1&&t)===this.length-e.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;t.length>i&&!window.requestAnimationFrame;++i)window.requestAnimationFrame=window[t[i]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[i]+"CancelAnimationFrame"]||window[t[i]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var i=Date.now(),r=Math.max(0,16-(i-e)),n=window.setTimeout(function(){t(i+r)},r);return e=i+r,n}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSV:function(e,t,i){var r,n,o;return 0===i?this.r=this.g=this.b=0:(r=Math.floor(6*e),n=6*e-r,e=i*(1-t),o=i*(1-t*n),t=i*(1-t*(1-n)),0===r?(this.r=i,this.g=t,this.b=e):1===r?(this.r=o,this.g=i,this.b=e):2===r?(this.r=e,this.g=i,this.b=t):3===r?(this.r=e,this.g=o,this.b=i):4===r?(this.r=t,this.g=e,this.b=i):5===r&&(this.r=i,this.g=e,this.b=o)),this},setStyle:function(e){return/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)?(e=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e),this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this):/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)?(e=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e),this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(e)?(e=/^\#([0-9a-f]{6})$/i.exec(e),this.setHex(parseInt(e[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)?(e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e),this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this):/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},getHSV:function(e){var t=this.r,i=this.g,r=this.b,n=Math.max(Math.max(t,i),r),o=Math.min(Math.min(t,i),r);if(o===n)o=t=0;else{var a=n-o,o=a/n,t=(t===n?(i-r)/a:i===n?2+(r-t)/a:4+(t-i)/a)/6;0>t&&(t+=1),t>1&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=o,e.v=n,e},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var i=Math.cos(e.x/2),r=Math.cos(e.y/2),n=Math.cos(e.z/2),o=Math.sin(e.x/2),a=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n-o*a*s):"YXZ"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n+o*a*s):"ZXY"===t?(this.x=o*r*n-i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n-o*a*s):"ZYX"===t?(this.x=o*r*n-i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n+o*a*s):"YZX"===t?(this.x=o*r*n+i*a*s,this.y=i*a*n+o*r*s,this.z=i*r*s-o*a*n,this.w=i*r*n-o*a*s):"XZY"===t&&(this.x=o*r*n-i*a*s,this.y=i*a*n-o*r*s,this.z=i*r*s+o*a*n,this.w=i*r*n+o*a*s),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(i),this},setFromRotationMatrix:function(e){var t=e.elements,i=t[0],e=t[4],r=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],l=i+o+t;return l>0?(i=.5/Math.sqrt(l+1),this.w=.25/i,this.x=(h-a)*i,this.y=(r-s)*i,this.z=(n-e)*i):i>o&&i>t?(i=2*Math.sqrt(1+i-o-t),this.w=(h-a)/i,this.x=.25*i,this.y=(e+n)/i,this.z=(r+s)/i):o>t?(i=2*Math.sqrt(1+o-i-t),this.w=(r-s)/i,this.x=(e+n)/i,this.y=.25*i,this.z=(a+h)/i):(i=2*Math.sqrt(1+t-i-o),this.w=(n-e)/i,this.x=(r+s)/i,this.y=(a+h)/i,this.z=.25*i),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.z=this.y=this.x=0,this.w=1):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e.x,r=e.y,n=e.z,o=e.w,a=t.x,s=t.y,h=t.z,l=t.w;return this.x=i*l+o*a+r*h-n*s,this.y=r*l+o*s+n*a-i*h,this.z=n*l+o*h+i*s-r*a,this.w=o*l-i*a-r*s-n*h,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var i=this.x,r=this.y,n=this.z,o=this.w,a=o*e.w+i*e.x+r*e.y+n*e.z;if(0>a?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,a=-a):this.copy(e),a>=1)return this.w=o,this.x=i,this.y=r,this.z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);return.001>Math.abs(h)?(this.w=.5*(o+this.w),this.x=.5*(i+this.x),this.y=.5*(r+this.y),this.z=.5*(n+this.z),this):(a=Math.sin((1-t)*s)/h,s=Math.sin(t*s)/h,this.w=o*a+this.w*s,this.x=i*a+this.x*s,this.y=r*a+this.y*s,this.z=n*a+this.z*s,this)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,i,r){return i.copy(e).slerp(t,r)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*i+e[6]*r,this.y=e[1]*t+e[4]*i+e[7]*r,this.z=e[2]*t+e[5]*i+e[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12],this.y=e[1]*t+e[5]*i+e[9]*r+e[13],this.z=e[2]*t+e[6]*i+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z,e=e.elements,n=1/(e[3]*t+e[7]*i+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*i+e[8]*r+e[12])*n,this.y=(e[1]*t+e[5]*i+e[9]*r+e[13])*n,this.z=(e[2]*t+e[6]*i+e[10]*r+e[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z,e=e.w,s=e*t+o*r-a*i,h=e*i+a*t-n*r,l=e*r+n*i-o*t,t=-n*t-o*i-a*r;return this.x=s*e+t*-n+h*-a-l*-o,this.y=h*e+t*-o+l*-n-s*-a,this.z=l*e+t*-a+s*-o-h*-n,this},applyEuler:function(e,t){var i=THREE.Vector3.__q1.setFromEuler(e,t);return this.applyQuaternion(i),this},applyAxisAngle:function(e,t){var i=THREE.Vector3.__q1.setFromAxisAngle(e,t);return this.applyQuaternion(i),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):this.z=this.y=this.x=0,this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y,e=this.z-e.z;return t*t+i*i+e*e},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.elements,n=r[0],o=r[4],a=r[8],s=r[1],h=r[5],l=r[9],c=r[2],p=r[6],r=r[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(i(a)),.99999>Math.abs(a)?(this.x=Math.atan2(-l,r),this.z=Math.atan2(-o,n)):(this.x=Math.atan2(p,h),this.z=0)):"YXZ"===t?(this.x=Math.asin(-i(l)),.99999>Math.abs(l)?(this.y=Math.atan2(a,r),this.z=Math.atan2(s,h)):(this.y=Math.atan2(-c,n),this.z=0)):"ZXY"===t?(this.x=Math.asin(i(p)),.99999>Math.abs(p)?(this.y=Math.atan2(-c,r),this.z=Math.atan2(-o,h)):(this.y=0,this.z=Math.atan2(s,n))):"ZYX"===t?(this.y=Math.asin(-i(c)),.99999>Math.abs(c)?(this.x=Math.atan2(p,r),this.z=Math.atan2(s,n)):(this.x=0,this.z=Math.atan2(-o,h))):"YZX"===t?(this.z=Math.asin(i(s)),.99999>Math.abs(s)?(this.x=Math.atan2(-l,h),this.y=Math.atan2(-c,n)):(this.x=0,this.y=Math.atan2(a,r))):"XZY"===t&&(this.z=Math.asin(-i(o)),.99999>Math.abs(o)?(this.x=Math.atan2(p,h),this.y=Math.atan2(a,n)):(this.x=Math.atan2(-l,r),this.y=0)),this},setEulerFromQuaternion:function(e,t){function i(e){return Math.min(Math.max(e,-1),1)}var r=e.x*e.x,n=e.y*e.y,o=e.z*e.z,a=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),a-r-n+o),this.y=Math.asin(i(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a+r-n-o)):"YXZ"===t?(this.x=Math.asin(i(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a-r-n+o),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a-r+n-o)):"ZXY"===t?(this.x=Math.asin(i(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),a-r-n+o),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a-r+n-o)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),a-r-n+o),this.y=Math.asin(i(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a+r-n-o)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),a-r+n-o),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),a+r-n-o),this.z=Math.asin(i(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),a-r+n-o),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a+r-n-o),this.z=Math.asin(i(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=i,this.z=e,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector3.__q1=new THREE.Quaternion,THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w,e=e.elements;return this.x=e[0]*t+e[4]*i+e[8]*r+e[12]*n,this.y=e[1]*t+e[5]*i+e[9]*r+e[13]*n,this.z=e[2]*t+e[6]*i+e[10]*r+e[14]*n,this.w=e[3]*t+e[7]*i+e[11]*r+e[15]*n,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.z=this.y=this.x=0,this.w=1),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this
},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r,e=e.elements,n=e[0];r=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];i=e[2],t=e[6];var l=e[10];return.01>Math.abs(r-a)&&.01>Math.abs(o-i)&&.01>Math.abs(h-t)?.1>Math.abs(r+a)&&.1>Math.abs(o+i)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+l-3)?(this.set(1,0,0,0),this):(e=Math.PI,n=(n+1)/2,s=(s+1)/2,l=(l+1)/2,r=(r+a)/4,o=(o+i)/4,h=(h+t)/4,n>s&&n>l?.01>n?(t=0,r=i=.707106781):(t=Math.sqrt(n),i=r/t,r=o/t):s>l?.01>s?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(s),t=r/i,r=h/i):.01>l?(i=t=.707106781,r=0):(r=Math.sqrt(l),t=o/r,i=h/r),this.set(t,i,r,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-i)*(o-i)+(a-r)*(a-r)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-i)/e,this.z=(a-r)/e,this.w=Math.acos((n+s+l-1)/2),this)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;r>i;i++)t=e[i],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var i=THREE.Box2.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return THREE.Box2.__v1.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box2.__v1=new THREE.Vector2,THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var i=1,r=e.length;r>i;i++)t=e[i],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var i=THREE.Box3.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return t||new THREE.Vector3,(new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return THREE.Box3.__v1.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){return e=e||new THREE.Sphere,e.center=this.center(),e.radius=.5*this.size(THREE.Box3.__v0).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},transform:function(e){return e=[THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v1.set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v2.set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z).applyMatrix4(e)],this.makeEmpty(),this.setFromPoints(e),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Box3.__v0=new THREE.Vector3,THREE.Box3.__v1=new THREE.Vector3,THREE.Box3.__v2=new THREE.Vector3,THREE.Box3.__v3=new THREE.Vector3,THREE.Box3.__v4=new THREE.Vector3,THREE.Box3.__v5=new THREE.Vector3,THREE.Box3.__v6=new THREE.Vector3,THREE.Box3.__v7=new THREE.Vector3,THREE.Matrix3=function(e,t,i,r,n,o,a,s,h){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,i||0,r||0,void 0!==n?n:1,o||0,a||0,s||0,void 0!==h?h:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,i,r,n,o,a,s,h){var l=this.elements;return l[0]=e,l[3]=t,l[6]=i,l[1]=r,l[4]=n,l[7]=o,l[2]=a,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix3.__v1,i=0,r=e.length;r>i;i+=3)t.x=e[i],t.y=e[i+1],t.z=e[i+2],t.applyMatrix3(this),e[i]=t.x,e[i+1]=t.y,e[i+2]=t.z;return e},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-i*n*e+i*a*s+r*n*h-r*o*s},getInverse:function(e,t){var i=e.elements,r=this.elements;if(r[0]=i[10]*i[5]-i[6]*i[9],r[1]=-i[10]*i[1]+i[2]*i[9],r[2]=i[6]*i[1]-i[2]*i[5],r[3]=-i[10]*i[4]+i[6]*i[8],r[4]=i[10]*i[0]-i[2]*i[8],r[5]=-i[6]*i[0]+i[2]*i[4],r[6]=i[9]*i[4]-i[5]*i[8],r[7]=-i[9]*i[0]+i[1]*i[8],r[8]=i[5]*i[0]-i[1]*i[4],i=i[0]*r[0]+i[1]*r[3]+i[2]*r[6],0===i){if(t)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,i,r,n,o,a,s,h,l,c,p,u,f,d,E){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,i||0,r||0,n||0,void 0!==o?o:1,a||0,s||0,h||0,l||0,void 0!==c?c:1,p||0,u||0,f||0,d||0,void 0!==E?E:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,i,r,n,o,a,s,h,l,c,p,u,f,d,E){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=p,m[3]=u,m[7]=f,m[11]=d,m[15]=E,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},setRotationFromEuler:function(e,t){var i=this.elements,r=e.x,n=e.y,o=e.z,a=Math.cos(r),r=Math.sin(r),s=Math.cos(n),n=Math.sin(n),h=Math.cos(o),o=Math.sin(o);if(void 0===t||"XYZ"===t){var l=a*h,c=a*o,p=r*h,u=r*o;i[0]=s*h,i[4]=-s*o,i[8]=n,i[1]=c+p*n,i[5]=l-u*n,i[9]=-r*s,i[2]=u-l*n,i[6]=p+c*n,i[10]=a*s}else"YXZ"===t?(l=s*h,c=s*o,p=n*h,u=n*o,i[0]=l+u*r,i[4]=p*r-c,i[8]=a*n,i[1]=a*o,i[5]=a*h,i[9]=-r,i[2]=c*r-p,i[6]=u+l*r,i[10]=a*s):"ZXY"===t?(l=s*h,c=s*o,p=n*h,u=n*o,i[0]=l-u*r,i[4]=-a*o,i[8]=p+c*r,i[1]=c+p*r,i[5]=a*h,i[9]=u-l*r,i[2]=-a*n,i[6]=r,i[10]=a*s):"ZYX"===t?(l=a*h,c=a*o,p=r*h,u=r*o,i[0]=s*h,i[4]=p*n-c,i[8]=l*n+u,i[1]=s*o,i[5]=u*n+l,i[9]=c*n-p,i[2]=-n,i[6]=r*s,i[10]=a*s):"YZX"===t?(l=a*s,c=a*n,p=r*s,u=r*n,i[0]=s*h,i[4]=u-l*o,i[8]=p*o+c,i[1]=o,i[5]=a*h,i[9]=-r*h,i[2]=-n*h,i[6]=c*o+p,i[10]=l-u*o):"XZY"===t&&(l=a*s,c=a*n,p=r*s,u=r*n,i[0]=s*h,i[4]=-o,i[8]=n*h,i[1]=l*o+u,i[5]=a*h,i[9]=c*o-p,i[2]=p*o-c,i[6]=r*h,i[10]=u*o+l);return this},setRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,o=e.w,a=i+i,s=r+r,h=n+n,e=i*a,l=i*s,i=i*h,c=r*s,r=r*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(c+n),t[4]=l-o,t[8]=i+s,t[1]=l+o,t[5]=1-(e+n),t[9]=r-a,t[2]=i-s,t[6]=r+a,t[10]=1-(e+c),this},lookAt:function(e,t,i){var r=this.elements,n=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return a.subVectors(e,t).normalize(),0===a.length()&&(a.z=1),n.crossVectors(i,a).normalize(),0===n.length()&&(a.x+=1e-4,n.crossVectors(i,a).normalize()),o.crossVectors(a,n),r[0]=n.x,r[4]=o.x,r[8]=a.x,r[1]=n.y,r[5]=o.y,r[9]=a.y,r[2]=n.z,r[6]=o.z,r[10]=a.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],p=i[9],u=i[13],f=i[2],d=i[6],E=i[10],m=i[14],g=i[3],v=i[7],T=i[11],i=i[15],y=r[0],R=r[4],x=r[8],H=r[12],_=r[1],w=r[5],b=r[9],S=r[13],M=r[2],C=r[6],A=r[10],P=r[14],L=r[3],D=r[7],F=r[11],r=r[15];return n[0]=o*y+a*_+s*M+h*L,n[4]=o*R+a*w+s*C+h*D,n[8]=o*x+a*b+s*A+h*F,n[12]=o*H+a*S+s*P+h*r,n[1]=l*y+c*_+p*M+u*L,n[5]=l*R+c*w+p*C+u*D,n[9]=l*x+c*b+p*A+u*F,n[13]=l*H+c*S+p*P+u*r,n[2]=f*y+d*_+E*M+m*L,n[6]=f*R+d*w+E*C+m*D,n[10]=f*x+d*b+E*A+m*F,n[14]=f*H+d*S+E*P+m*r,n[3]=g*y+v*_+T*M+i*L,n[7]=g*R+v*w+T*C+i*D,n[11]=g*x+v*b+T*A+i*F,n[15]=g*H+v*S+T*P+i*r,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix4.__v1,i=0,r=e.length;r>i;i+=3)t.x=e[i],t.y=e[i+1],t.z=e[i+2],t.applyProjection(this),e[i]=t.x,e[i+1]=t.y,e[i+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z;return e.x=i*t[0]+r*t[4]+n*t[8],e.y=i*t[1]+r*t[5]+n*t[9],e.z=i*t[2]+r*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,i=new THREE.Vector4;return i.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,i.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,i.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,i.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,i},determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],p=e[10],u=e[14];return e[3]*(+n*s*c-r*h*c-n*a*p+i*h*p+r*a*u-i*s*u)+e[7]*(+t*s*u-t*h*p+n*o*p-r*o*u+r*h*l-n*s*l)+e[11]*(+t*h*c-t*a*u-n*o*c+i*o*u+n*a*l-i*h*l)+e[15]*(-r*a*l-t*s*c+t*a*p+r*o*c-i*o*p+i*s*l)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],o=r[4],a=r[8],s=r[12],h=r[1],l=r[5],c=r[9],p=r[13],u=r[2],f=r[6],d=r[10],E=r[14],m=r[3],g=r[7],v=r[11],T=r[15];if(i[0]=c*E*g-p*d*g+p*f*v-l*E*v-c*f*T+l*d*T,i[4]=s*d*g-a*E*g-s*f*v+o*E*v+a*f*T-o*d*T,i[8]=a*p*g-s*c*g+s*l*v-o*p*v-a*l*T+o*c*T,i[12]=s*c*f-a*p*f-s*l*d+o*p*d+a*l*E-o*c*E,i[1]=p*d*m-c*E*m-p*u*v+h*E*v+c*u*T-h*d*T,i[5]=a*E*m-s*d*m+s*u*v-n*E*v-a*u*T+n*d*T,i[9]=s*c*m-a*p*m-s*h*v+n*p*v+a*h*T-n*c*T,i[13]=a*p*u-s*c*u+s*h*d-n*p*d-a*h*E+n*c*E,i[2]=l*E*m-p*f*m+p*u*g-h*E*g-l*u*T+h*f*T,i[6]=s*f*m-o*E*m-s*u*g+n*E*g+o*u*T-n*f*T,i[10]=o*p*m-s*l*m+s*h*g-n*p*g-o*h*T+n*l*T,i[14]=s*l*u-o*p*u-s*h*f+n*p*f+o*h*E-n*l*E,i[3]=c*f*m-l*d*m-c*u*g+h*d*g+l*u*v-h*f*v,i[7]=o*d*m-a*f*m+a*u*g-n*d*g-o*u*v+n*f*v,i[11]=a*l*m-o*c*m-a*h*g+n*c*g+o*h*v-n*l*v,i[15]=o*c*u-a*l*u+a*h*f-n*c*f-o*h*d+n*l*d,i=r[0]*i[0]+r[1]*i[4]+r[2]*i[8]+r[3]*i[12],0==i){if(t)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/i),this},compose:function(e,t,i){var r=this.elements,n=THREE.Matrix4.__m1,o=THREE.Matrix4.__m2;return n.identity(),n.setRotationFromQuaternion(t),o.makeScale(i.x,i.y,i.z),this.multiplyMatrices(n,o),r[12]=e.x,r[13]=e.y,r[14]=e.z,this},decompose:function(e,t,i){var r=this.elements,n=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return n.set(r[0],r[1],r[2]),o.set(r[4],r[5],r[6]),a.set(r[8],r[9],r[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,i=i instanceof THREE.Vector3?i:new THREE.Vector3,i.x=n.length(),i.y=o.length(),i.z=a.length(),e.x=r[12],e.y=r[13],e.z=r[14],r=THREE.Matrix4.__m1,r.copy(this),r.elements[0]/=i.x,r.elements[1]/=i.x,r.elements[2]/=i.x,r.elements[4]/=i.y,r.elements[5]/=i.y,r.elements[6]/=i.y,r.elements[8]/=i.z,r.elements[9]/=i.z,r.elements[10]/=i.z,t.setFromRotationMatrix(r),[e,t,i]},extractPosition:function(e){var t=this.elements,e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(e){var t=this.elements,e=e.elements,i=THREE.Matrix4.__v1,r=1/i.set(e[0],e[1],e[2]).length(),n=1/i.set(e[4],e[5],e[6]).length(),i=1/i.set(e[8],e[9],e[10]).length();return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[4]=e[4]*n,t[5]=e[5]*n,t[6]=e[6]*n,t[8]=e[8]*i,t[9]=e[9]*i,t[10]=e[10]*i,this},translate:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[12]=t[0]*i+t[4]*r+t[8]*e+t[12],t[13]=t[1]*i+t[5]*r+t[9]*e+t[13],t[14]=t[2]*i+t[6]*r+t[10]*e+t[14],t[15]=t[3]*i+t[7]*r+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,i=t[4],r=t[5],n=t[6],o=t[7],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e),e=Math.sin(e);return t[4]=c*i+e*a,t[5]=c*r+e*s,t[6]=c*n+e*h,t[7]=c*o+e*l,t[8]=c*a-e*i,t[9]=c*s-e*r,t[10]=c*h-e*n,t[11]=c*l-e*o,this},rotateY:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],o=t[3],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e),e=Math.sin(e);return t[0]=c*i-e*a,t[1]=c*r-e*s,t[2]=c*n-e*h,t[3]=c*o-e*l,t[8]=c*a+e*i,t[9]=c*s+e*r,t[10]=c*h+e*n,t[11]=c*l+e*o,this},rotateZ:function(e){var t=this.elements,i=t[0],r=t[1],n=t[2],o=t[3],a=t[4],s=t[5],h=t[6],l=t[7],c=Math.cos(e),e=Math.sin(e);return t[0]=c*i+e*a,t[1]=c*r+e*s,t[2]=c*n+e*h,t[3]=c*o+e*l,t[4]=c*a-e*i,t[5]=c*s-e*r,t[6]=c*h-e*n,t[7]=c*l-e*o,this},rotateByAxis:function(e,t){var i=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,n=e.y,o=e.z,a=Math.sqrt(r*r+n*n+o*o),r=r/a,n=n/a,o=o/a,a=r*r,s=n*n,h=o*o,l=Math.cos(t),c=Math.sin(t),p=1-l,u=r*n*p,f=r*o*p,p=n*o*p,r=r*c,d=n*c,c=o*c,o=a+(1-a)*l,a=u+c,n=f-d,u=u-c,s=s+(1-s)*l,c=p+r,f=f+d,p=p-r,h=h+(1-h)*l,l=i[0],r=i[1],d=i[2],E=i[3],m=i[4],g=i[5],v=i[6],T=i[7],y=i[8],R=i[9],x=i[10],H=i[11];return i[0]=o*l+a*m+n*y,i[1]=o*r+a*g+n*R,i[2]=o*d+a*v+n*x,i[3]=o*E+a*T+n*H,i[4]=u*l+s*m+c*y,i[5]=u*r+s*g+c*R,i[6]=u*d+s*v+c*x,i[7]=u*E+s*T+c*H,i[8]=f*l+p*m+h*y,i[9]=f*r+p*g+h*R,i[10]=f*d+p*v+h*x,i[11]=f*E+p*T+h*H,this},scale:function(e){var t=this.elements,i=e.x,r=e.y,e=e.z;return t[0]*=i,t[4]*=r,t[8]*=e,t[1]*=i,t[5]*=r,t[9]*=e,t[2]*=i,t[6]*=r,t[10]*=e,t[3]*=i,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,s=e.z,h=n*o,l=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*o,0,h*s-r*a,l*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeFrustum:function(e,t,i,r,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){var e=i*Math.tan(THREE.Math.degToRad(.5*e)),n=-e;return this.makeFrustum(n*t,e*t,n,e,i,r)},makeOrthographic:function(e,t,i,r,n,o){var a=this.elements,s=t-e,h=i-r,l=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-((t+e)/s),a[1]=0,a[5]=2/h,a[9]=0,a[13]=-((i+r)/h),a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-((o+n)/l),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(e){return this.origin.copy(this.at(e,THREE.Ray.__v1)),this},closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){var t=THREE.Ray.__v1.subVectors(e,this.origin).dot(this.direction);return THREE.Ray.__v1.copy(this.direction).multiplyScalar(t).add(this.origin),THREE.Ray.__v1.distanceTo(e)},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){return 0!=e.normal.dot(this.direction)||0==e.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0!=t?-(this.origin.dot(e.normal)+e.constant)/t:0==e.distanceToPoint(this.origin)?0:void 0},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return void 0===i?void 0:this.at(i,t)},transform:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Ray.__v1=new THREE.Vector3,THREE.Ray.__v2=new THREE.Vector3,THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var i=0,r=0,n=t.length;n>r;r++)var o=e.distanceToSquared(t[r]),i=Math.max(i,o);return this.center=e,this.radius=Math.sqrt(i),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return t*t>=e.center.distanceToSquared(this.center)},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},transform:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,i,r,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={set:function(e,t,i,r,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,i=0;6>i;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i=e.elements,e=i[0],r=i[1],n=i[2],o=i[3],a=i[4],s=i[5],h=i[6],l=i[7],c=i[8],p=i[9],u=i[10],f=i[11],d=i[12],E=i[13],m=i[14],i=i[15];return t[0].setComponents(o-e,l-a,f-c,i-d).normalize(),t[1].setComponents(o+e,l+a,f+c,i+d).normalize(),t[2].setComponents(o+r,l+s,f+p,i+E).normalize(),t[3].setComponents(o-r,l-s,f-p,i-E).normalize(),t[4].setComponents(o-n,l-h,f-u,i-m).normalize(),t[5].setComponents(o+n,l+h,f+u,i+m).normalize(),this},intersectsObject:function(e){for(var t=e.matrixWorld,i=this.planes,r=t.getPosition(),e=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis(),t=0;6>t;t++)if(e>i[t].distanceToPoint(r))return!1;return!0},intersectsSphere:function(e){for(var t=this.planes,i=e.center,e=-e.radius,r=0;6>r;r++)if(e>t[r].distanceToPoint(i))return!1;return!0},containsPoint:function(e){for(var t=this.planes,i=0;6>i;i++)if(0>t[i].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,i){return t=THREE.Plane.__v1.subVectors(i,t).cross(THREE.Plane.__v2.subVectors(e,t)).normalize(),this.setFromNormalAndCoplanarPoint(t,e),this},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(i)},isIntersectionLine:function(e,t){var i=this.distanceToPoint(e),r=this.distanceToPoint(t);return 0>i&&r>0||0>r&&i>0},intersectLine:function(e,t,i){var i=i||new THREE.Vector3,t=THREE.Plane.__v1.subVectors(t,e),r=this.normal.dot(t);return 0!=r?(r=-(e.dot(this.normal)+this.constant)/r,0>r||r>1?void 0:i.copy(t).multiplyScalar(r).add(e)):0==this.distanceToPoint(e)?i.copy(e):void 0},coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},transform:function(e,t){var t=t||(new THREE.Matrix3).getInverse(e).transpose(),i=THREE.Plane.__v1.copy(this.normal).applyMatrix3(t),r=this.coplanarPoint(THREE.Plane.__v2);return r.applyMatrix4(e),this.setFromNormalAndCoplanarPoint(i,r),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Plane.__vZero=new THREE.Vector3(0,0,0),THREE.Plane.__v1=new THREE.Vector3,THREE.Plane.__v2=new THREE.Vector3,THREE.Math={clamp:function(e,t,i){return t>e?t:e>i?i:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(e){return e*THREE.Math.__d2r},radToDeg:function(e){return e*THREE.Math.__r2d}},THREE.Math.__d2r=Math.PI/180,THREE.Math.__r2d=180/Math.PI,THREE.Spline=function(e){function t(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t}this.points=e;var i,r,n,o,a,s,h,l,c,p=[],u={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;e.length>t;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,r=Math.floor(i),n=i-r,p[0]=0===r?r:r-1,p[1]=r,p[2]=r>this.points.length-2?this.points.length-1:r+1,p[3]=r>this.points.length-3?this.points.length-1:r+2,s=this.points[p[0]],h=this.points[p[1]],l=this.points[p[2]],c=this.points[p[3]],o=n*n,a=n*o,u.x=t(s.x,h.x,l.x,c.x,n,o,a),u.y=t(s.y,h.y,l.y,c.y,n,o,a),u.z=t(s.z,h.z,l.z,c.z,n,o,a),u},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;i>e;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),i=this.points.length*e,o.copy(this.points[0]),e=1;i>e;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(o),o.copy(r),t*=this.points.length-1,t=Math.floor(t),t!=n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,n,o,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;this.points.length>t;t++){for(i=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*i/l.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),i=1;a-1>i;i++)r=n+i*(1/a)*(o-n),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==i?i:new THREE.Vector3},THREE.Triangle.normal=function(e,t,i,r){return r=r||new THREE.Vector3,r.subVectors(i,t),THREE.Triangle.__v0.subVectors(e,t),r.cross(THREE.Triangle.__v0),e=r.lengthSq(),e>0?r.multiplyScalar(1/Math.sqrt(e)):r.set(0,0,0)},THREE.Triangle.barycoordFromPoint=function(e,t,i,r,n){THREE.Triangle.__v0.subVectors(r,t),THREE.Triangle.__v1.subVectors(i,t),THREE.Triangle.__v2.subVectors(e,t);var e=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),t=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),i=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),o=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),r=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),a=e*o-t*t,n=n||new THREE.Vector3;
return 0==a?n.set(-2,-1,-1):(a=1/a,o=(o*i-t*r)*a,e=(e*r-t*i)*a,n.set(1-o-e,e,o))},THREE.Triangle.containsPoint=function(e,t,i,r){return e=THREE.Triangle.barycoordFromPoint(e,t,i,r,THREE.Triangle.__v3),e.x>=0&&e.y>=0&&1>=e.x+e.y},THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){return THREE.Triangle.__v0.subVectors(this.c,this.b),THREE.Triangle.__v1.subVectors(this.a,this.b),.5*THREE.Triangle.__v0.cross(THREE.Triangle.__v1).length()},midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Triangle.__v0=new THREE.Vector3,THREE.Triangle.__v1=new THREE.Vector3,THREE.Triangle.__v2=new THREE.Vector3,THREE.Triangle.__v3=new THREE.Vector3,THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e},THREE.EventDispatcher=function(){var e={};this.addEventListener=function(t,i){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(i)&&e[t].push(i)},this.removeEventListener=function(t,i){var r=e[t].indexOf(i);-1!==r&&e[t].splice(r,1)},this.dispatchEvent=function(t){var i=e[t.type];if(void 0!==i){t.target=this;for(var r=0,n=i.length;n>r;r++)i[r].call(this,t)}}},function(e){e.Raycaster=function(t,i,r,n){this.ray=new e.Ray(t,i),this.ray.direction.length()>0&&this.ray.direction.normalize(),this.near=r||0,this.far=n||1/0};var t=new e.Sphere,i=new e.Ray,r=new e.Plane,n=new e.Vector3,o=new e.Matrix4,a=function(e,t){return e.distance-t.distance},s=function(a,s,h){if(a instanceof e.Particle){if(s=s.ray.distanceToPoint(a.matrixWorld.getPosition()),s>a.scale.x)return h;h.push({distance:s,point:a.position,face:null,object:a})}else if(a instanceof e.Mesh){if(t.set(a.matrixWorld.getPosition(),a.geometry.boundingSphere.radius*a.matrixWorld.getMaxScaleOnAxis()),!s.ray.isIntersectionSphere(t))return h;var l,c,p,u=a.geometry,f=u.vertices,d=a.material instanceof e.MeshFaceMaterial,E=!0===d?a.material.materials:null,m=a.material.side,g=s.precision;a.matrixRotationWorld.extractRotation(a.matrixWorld),o.getInverse(a.matrixWorld),i.copy(s.ray).transform(o);for(var v=0,T=u.faces.length;T>v;v++){var y=u.faces[v],m=!0===d?E[y.materialIndex]:a.material;if(void 0!==m){r.setFromNormalAndCoplanarPoint(y.normal,f[y.a]);var R=i.distanceToPlane(r);if(!(g>Math.abs(R)||0>R)){if(m=m.side,m!==e.DoubleSide&&(l=i.direction.dot(r.normal),!(m===e.FrontSide?0>l:l>0)))continue;if(!(s.near>R||R>s.far)){if(n=i.at(R,n),y instanceof e.Face3){if(m=f[y.a],l=f[y.b],c=f[y.c],!e.Triangle.containsPoint(n,m,l,c))continue}else{if(!(y instanceof e.Face4))throw Error("face type not supported");if(m=f[y.a],l=f[y.b],c=f[y.c],p=f[y.d],!e.Triangle.containsPoint(n,m,l,p)&&!e.Triangle.containsPoint(n,l,c,p))continue}h.push({distance:R,point:s.ray.at(R),face:y,faceIndex:v,object:a})}}}}}},h=function(e,t,i){for(var e=e.getDescendants(),r=0,n=e.length;n>r;r++)s(e[r],t,i)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),this.ray.direction.length()>0&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var i=[];return!0===t&&h(e,this,i),s(e,this,i),i.sort(a),i},e.Raycaster.prototype.intersectObjects=function(e,t){for(var i=[],r=0,n=e.length;n>r;r++)s(e[r],this,i),!0===t&&h(e[r],this,i);return i.sort(a),i}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),e=(new THREE.Matrix4).extractRotation(this.matrix),this.rotation.setEulerFromRotationMatrix(e,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,i=this.children.length;i>t;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i];if(n.name===e||!0===t&&(n=n.getChildByName(e,t),void 0!==n))return n}},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,i=this.children.length;i>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;this.children.length>t;t++)e.add(this.children[t].clone());return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(o===g){var e=new THREE.RenderableObject;return m.push(e),g++,o++,e}return m[o++]}function t(){if(s===T){var e=new THREE.RenderableVertex;return v.push(e),T++,s++,e}return v[s++]}function i(e,t){return t.z-e.z}function r(e,t){var i=0,r=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return n>=0&&o>=0&&a>=0&&s>=0?!0:0>n&&0>o||0>a&&0>s?!1:(0>n?i=Math.max(i,n/(n-o)):0>o&&(r=Math.min(r,n/(n-o))),0>a?i=Math.max(i,a/(a-s)):0>s&&(r=Math.min(r,a/(a-s))),i>r?!1:(e.lerp(t,i),t.lerp(e,1-r),!0))}var n,o,a,s,h,l,c,p,u,f,d,E,m=[],g=0,v=[],T=0,y=[],R=0,x=[],H=0,_=[],w=0,b=[],S=0,M={objects:[],sprites:[],lights:[],elements:[]},C=new THREE.Vector3,A=new THREE.Vector4,P=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),L=new THREE.Box3,D=Array(3),F=Array(4),U=new THREE.Matrix4,z=new THREE.Matrix4,V=new THREE.Matrix4,B=new THREE.Matrix3,N=new THREE.Matrix3,I=new THREE.Vector3,O=new THREE.Frustum,k=new THREE.Vector4,G=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),z.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(z)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),z.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(z)},this.pickingRay=function(e,t){e.z=-1;var i=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(i,t),i.sub(e).normalize(),new THREE.Raycaster(e,i)},this.projectScene=function(m,g,T,W){var j,X,Y,q,K,$,Q,Z,J,et,tt,it,rt,nt=!1;d=u=c=l=0,M.elements.length=0,m.updateMatrixWorld(),void 0===g.parent&&g.updateMatrixWorld(),U.copy(g.matrixWorldInverse.getInverse(g.matrixWorld)),z.multiplyMatrices(g.projectionMatrix,U),N.getInverse(U),N.transpose(),O.setFromMatrix(z),o=0,M.objects.length=0,M.sprites.length=0,M.lights.length=0;var ot=function(t){for(var i=0,r=t.children.length;r>i;i++){var o=t.children[i];!1!==o.visible&&(o instanceof THREE.Light?M.lights.push(o):o instanceof THREE.Mesh||o instanceof THREE.Line?(!1===o.frustumCulled||!0===O.intersectsObject(o))&&(n=e(),n.object=o,null!==o.renderDepth?n.z=o.renderDepth:(C.copy(o.matrixWorld.getPosition()),C.applyProjection(z),n.z=C.z),M.objects.push(n)):o instanceof THREE.Sprite||o instanceof THREE.Particle?(n=e(),n.object=o,null!==o.renderDepth?n.z=o.renderDepth:(C.copy(o.matrixWorld.getPosition()),C.applyProjection(z),n.z=C.z),M.sprites.push(n)):(n=e(),n.object=o,null!==o.renderDepth?n.z=o.renderDepth:(C.copy(o.matrixWorld.getPosition()),C.applyProjection(z),n.z=C.z),M.objects.push(n)),ot(o))}};for(ot(m),!0===T&&M.objects.sort(i),m=0,T=M.objects.length;T>m;m++)if(Z=M.objects[m].object,E=Z.matrixWorld,s=0,Z instanceof THREE.Mesh){for(J=Z.geometry,Y=J.vertices,et=J.faces,J=J.faceVertexUvs,B.getInverse(E),B.transpose(),it=Z.material instanceof THREE.MeshFaceMaterial,rt=!0===it?Z.material:null,j=0,X=Y.length;X>j;j++)a=t(),a.positionWorld.copy(Y[j]).applyMatrix4(E),a.positionScreen.copy(a.positionWorld).applyMatrix4(z),a.positionScreen.x/=a.positionScreen.w,a.positionScreen.y/=a.positionScreen.w,a.positionScreen.z/=a.positionScreen.w,a.visible=!(-1>a.positionScreen.x||a.positionScreen.x>1||-1>a.positionScreen.y||a.positionScreen.y>1||-1>a.positionScreen.z||a.positionScreen.z>1);for(Y=0,j=et.length;j>Y;Y++){X=et[Y];var at=!0===it?rt.materials[X.materialIndex]:Z.material;if(void 0!==at){if($=at.side,X instanceof THREE.Face3){if(q=v[X.a],K=v[X.b],Q=v[X.c],D[0]=q.positionScreen,D[1]=K.positionScreen,D[2]=Q.positionScreen,!0!==q.visible&&!0!==K.visible&&!0!==Q.visible&&!P.isIntersectionBox(L.setFromPoints(D)))continue;if(nt=0>(Q.positionScreen.x-q.positionScreen.x)*(K.positionScreen.y-q.positionScreen.y)-(Q.positionScreen.y-q.positionScreen.y)*(K.positionScreen.x-q.positionScreen.x),$!==THREE.DoubleSide&&nt!==($===THREE.FrontSide))continue;l===R?(tt=new THREE.RenderableFace3,y.push(tt),R++,l++,h=tt):h=y[l++],h.v1.copy(q),h.v2.copy(K),h.v3.copy(Q)}else if(X instanceof THREE.Face4){if(q=v[X.a],K=v[X.b],Q=v[X.c],tt=v[X.d],F[0]=q.positionScreen,F[1]=K.positionScreen,F[2]=Q.positionScreen,F[3]=tt.positionScreen,!0!==q.visible&&!0!==K.visible&&!0!==Q.visible&&!0!==tt.visible&&!P.isIntersectionBox(L.setFromPoints(F)))continue;if(nt=0>(tt.positionScreen.x-q.positionScreen.x)*(K.positionScreen.y-q.positionScreen.y)-(tt.positionScreen.y-q.positionScreen.y)*(K.positionScreen.x-q.positionScreen.x)||0>(K.positionScreen.x-Q.positionScreen.x)*(tt.positionScreen.y-Q.positionScreen.y)-(K.positionScreen.y-Q.positionScreen.y)*(tt.positionScreen.x-Q.positionScreen.x),$!==THREE.DoubleSide&&nt!==($===THREE.FrontSide))continue;if(c===H){var st=new THREE.RenderableFace4;x.push(st),H++,c++,h=st}else h=x[c++];h.v1.copy(q),h.v2.copy(K),h.v3.copy(Q),h.v4.copy(tt)}for(h.normalModel.copy(X.normal),!1===nt&&($===THREE.BackSide||$===THREE.DoubleSide)&&h.normalModel.negate(),h.normalModel.applyMatrix3(B).normalize(),h.normalModelView.copy(h.normalModel).applyMatrix3(N),h.centroidModel.copy(X.centroid).applyMatrix4(E),Q=X.vertexNormals,q=0,K=Q.length;K>q;q++)tt=h.vertexNormalsModel[q],tt.copy(Q[q]),!1===nt&&($===THREE.BackSide||$===THREE.DoubleSide)&&tt.negate(),tt.applyMatrix3(B).normalize(),h.vertexNormalsModelView[q].copy(tt).applyMatrix3(N);for(h.vertexNormalsLength=Q.length,q=0,K=J.length;K>q;q++)if(tt=J[q][Y],void 0!==tt)for($=0,Q=tt.length;Q>$;$++)h.uvs[q][$]=tt[$];h.color=X.color,h.material=at,I.copy(h.centroidModel).applyProjection(z),h.z=I.z,M.elements.push(h)}}}else if(Z instanceof THREE.Line)for(V.multiplyMatrices(z,E),Y=Z.geometry.vertices,q=t(),q.positionScreen.copy(Y[0]).applyMatrix4(V),et=Z.type===THREE.LinePieces?2:1,j=1,X=Y.length;X>j;j++)q=t(),q.positionScreen.copy(Y[j]).applyMatrix4(V),(j+1)%et>0||(K=v[s-2],k.copy(q.positionScreen),G.copy(K.positionScreen),!0===r(k,G)&&(k.multiplyScalar(1/k.w),G.multiplyScalar(1/G.w),u===w?(J=new THREE.RenderableLine,_.push(J),w++,u++,p=J):p=_[u++],p.v1.positionScreen.copy(k),p.v2.positionScreen.copy(G),p.z=Math.max(k.z,G.z),p.material=Z.material,M.elements.push(p)));for(m=0,T=M.sprites.length;T>m;m++)Z=M.sprites[m].object,E=Z.matrixWorld,Z instanceof THREE.Particle&&(A.set(E.elements[12],E.elements[13],E.elements[14],1),A.applyMatrix4(z),A.z/=A.w,A.z>0&&1>A.z&&(d===S?(nt=new THREE.RenderableParticle,b.push(nt),S++,d++,f=nt):f=b[d++],f.object=Z,f.x=A.x/A.w,f.y=A.y/A.w,f.z=A.z,f.rotation=Z.rotation.z,f.scale.x=Z.scale.x*Math.abs(f.x-(A.x+g.projectionMatrix.elements[0])/(A.w+g.projectionMatrix.elements[12])),f.scale.y=Z.scale.y*Math.abs(f.y-(A.y+g.projectionMatrix.elements[5])/(A.w+g.projectionMatrix.elements[13])),f.material=Z.material,M.elements.push(f)));return!0===W&&M.elements.sort(i),M}},THREE.Face3=function(e,t,i,r,n,o){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,i;for(t=0,i=this.vertexNormals.length;i>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,i=this.vertexColors.length;i>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,i=this.vertexTangents.length;i>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,i,r,n,o,a){this.a=e,this.b=t,this.c=i,this.d=r,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,i;for(t=0,i=this.vertexNormals.length;i>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,i=this.vertexColors.length;i>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,i=this.vertexTangents.length;i>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Geometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getInverse(e).transpose(),i=0,r=this.vertices.length;r>i;i++)this.vertices[i].applyMatrix4(e);for(i=0,r=this.faces.length;r>i;i++){var n=this.faces[i];n.normal.applyMatrix3(t).normalize();for(var o=0,a=n.vertexNormals.length;a>o;o++)n.vertexNormals[o].applyMatrix3(t).normalize();n.centroid.applyMatrix4(e)}},computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],i.centroid.set(0,0,0),i instanceof THREE.Face3?(i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.divideScalar(3)):i instanceof THREE.Face4&&(i.centroid.add(this.vertices[i.a]),i.centroid.add(this.vertices[i.b]),i.centroid.add(this.vertices[i.c]),i.centroid.add(this.vertices[i.d]),i.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,i,r,n,o,a=new THREE.Vector3,s=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],r=this.vertices[i.a],n=this.vertices[i.b],o=this.vertices[i.c],a.subVectors(o,n),s.subVectors(r,n),a.cross(s),a.normalize(),i.normal.copy(a)},computeVertexNormals:function(e){var t,i,r,n;if(void 0===this.__tmpVertices){for(n=this.__tmpVertices=Array(this.vertices.length),t=0,i=this.vertices.length;i>t;t++)n[t]=new THREE.Vector3;for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],r instanceof THREE.Face3?r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:r instanceof THREE.Face4&&(r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(n=this.__tmpVertices,t=0,i=this.vertices.length;i>t;t++)n[t].set(0,0,0);if(e){var o,a,s,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,p=new THREE.Vector3,u=new THREE.Vector3;for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],r instanceof THREE.Face3?(e=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],h.subVectors(a,o),l.subVectors(e,o),h.cross(l),n[r.a].add(h),n[r.b].add(h),n[r.c].add(h)):r instanceof THREE.Face4&&(e=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c],s=this.vertices[r.d],c.subVectors(s,o),l.subVectors(e,o),c.cross(l),n[r.a].add(c),n[r.b].add(c),n[r.d].add(c),p.subVectors(s,a),u.subVectors(o,a),p.cross(u),n[r.b].add(p),n[r.c].add(p),n[r.d].add(p))}else for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],r instanceof THREE.Face3?(n[r.a].add(r.normal),n[r.b].add(r.normal),n[r.c].add(r.normal)):r instanceof THREE.Face4&&(n[r.a].add(r.normal),n[r.b].add(r.normal),n[r.c].add(r.normal),n[r.d].add(r.normal));for(t=0,i=this.vertices.length;i>t;t++)n[t].normalize();for(t=0,i=this.faces.length;i>t;t++)r=this.faces[t],r instanceof THREE.Face3?(r.vertexNormals[0].copy(n[r.a]),r.vertexNormals[1].copy(n[r.b]),r.vertexNormals[2].copy(n[r.c])):r instanceof THREE.Face4&&(r.vertexNormals[0].copy(n[r.a]),r.vertexNormals[1].copy(n[r.b]),r.vertexNormals[2].copy(n[r.c]),r.vertexNormals[3].copy(n[r.d]))},computeMorphNormals:function(){var e,t,i,r,n;for(i=0,r=this.faces.length;r>i;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a,s,h=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals;for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],a=new THREE.Vector3,s=n instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},h.push(a),l.push(s)}for(h=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,r=this.faces.length;r>i;i++)n=this.faces[i],a=h.faceNormals[i],s=h.vertexNormals[i],a.copy(n.normal),n instanceof THREE.Face3?(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])):(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2]),s.d.copy(n.vertexNormals[3]))}for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function e(e,t,i,r,n,o,_){s=e.vertices[t],h=e.vertices[i],l=e.vertices[r],c=a[n],p=a[o],u=a[_],f=h.x-s.x,d=l.x-s.x,E=h.y-s.y,m=l.y-s.y,g=h.z-s.z,v=l.z-s.z,T=p.x-c.x,y=u.x-c.x,R=p.y-c.y,x=u.y-c.y,H=1/(T*x-y*R),S.set((x*f-R*d)*H,(x*E-R*m)*H,(x*g-R*v)*H),M.set((T*d-y*f)*H,(T*m-y*E)*H,(T*v-y*g)*H),w[t].add(S),w[i].add(S),w[r].add(S),b[t].add(M),b[i].add(M),b[r].add(M)}var t,i,r,n,o,a,s,h,l,c,p,u,f,d,E,m,g,v,T,y,R,x,H,_,w=[],b=[],S=new THREE.Vector3,M=new THREE.Vector3,C=new THREE.Vector3,A=new THREE.Vector3,P=new THREE.Vector3;for(t=0,i=this.vertices.length;i>t;t++)w[t]=new THREE.Vector3,b[t]=new THREE.Vector3;for(t=0,i=this.faces.length;i>t;t++)o=this.faces[t],a=this.faceVertexUvs[0][t],o instanceof THREE.Face3?e(this,o.a,o.b,o.c,0,1,2):o instanceof THREE.Face4&&(e(this,o.a,o.b,o.d,0,1,3),e(this,o.b,o.c,o.d,1,2,3));var L=["a","b","c","d"];for(t=0,i=this.faces.length;i>t;t++)for(o=this.faces[t],r=0;o.vertexNormals.length>r;r++)P.copy(o.vertexNormals[r]),n=o[L[r]],_=w[n],C.copy(_),C.sub(P.multiplyScalar(P.dot(_))).normalize(),A.crossVectors(o.vertexNormals[r],_),n=A.dot(b[n]),n=0>n?-1:1,o.vertexTangents[r]=new THREE.Vector4(C.x,C.y,C.z,n);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;r>i;i++)i>0&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e,t,i,r,n,o,a={},s=[],h=[],l=Math.pow(10,4);for(this.__tmpVertices=void 0,t=0,i=this.vertices.length;i>t;t++)e=this.vertices[t],e=[Math.round(e.x*l),Math.round(e.y*l),Math.round(e.z*l)].join("_"),void 0===a[e]?(a[e]=t,s.push(this.vertices[t]),h[t]=s.length-1):h[t]=h[a[e]];for(l=[],t=0,i=this.faces.length;i>t;t++)if(a=this.faces[t],a instanceof THREE.Face3){for(a.a=h[a.a],a.b=h[a.b],a.c=h[a.c],r=[a.a,a.b,a.c],e=-1,n=0;3>n;n++)if(r[n]==r[(n+1)%3]){l.push(t);break}}else if(a instanceof THREE.Face4){for(a.a=h[a.a],a.b=h[a.b],a.c=h[a.c],a.d=h[a.d],r=[a.a,a.b,a.c,a.d],e=-1,n=0;4>n;n++)r[n]==r[(n+1)%4]&&(e>=0&&l.push(t),e=n);if(e>=0){r.splice(e,1);var c=new THREE.Face3(r[0],r[1],r[2],a.normal,a.color,a.materialIndex);for(r=0,n=this.faceVertexUvs.length;n>r;r++)(o=this.faceVertexUvs[r][t])&&o.splice(e,1);a.vertexNormals&&a.vertexNormals.length>0&&(c.vertexNormals=a.vertexNormals,c.vertexNormals.splice(e,1)),a.vertexColors&&a.vertexColors.length>0&&(c.vertexColors=a.vertexColors,c.vertexColors.splice(e,1)),this.faces[t]=c}}for(t=l.length-1;t>=0;t--)for(this.faces.splice(t,1),r=0,n=this.faceVertexUvs.length;n>r;r++)this.faceVertexUvs[r].splice(t,1);return h=this.vertices.length-s.length,this.vertices=s,h},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,i=0,r=t.length;r>i;i++)e.vertices.push(t[i].clone());for(t=this.faces,i=0,r=t.length;r>i;i++)e.faces.push(t[i].clone());for(t=this.faceVertexUvs[0],i=0,r=t.length;r>i;i++){for(var n=t[i],o=[],a=0,s=n.length;s>a;a++)o.push(new THREE.Vector2(n[a].x,n[a].y));e.faceVertexUvs[0].push(o)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,i;this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(i=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==i&&(t=new THREE.Matrix3,t.getInverse(e).transpose(),t.multiplyVector3Array(i),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,i,r,n=this.boundingBox;e.length>=3&&(n.min.x=n.max.x=e[0],n.min.y=n.max.y=e[1],n.min.z=n.max.z=e[2]);for(var o=3,a=e.length;a>o;o+=3)t=e[o],i=e[o+1],r=e[o+2],n.min.x>t?n.min.x=t:t>n.max.x&&(n.max.x=t),n.min.y>i?n.min.y=i:i>n.max.y&&(n.max.y=i),n.min.z>r?n.min.z=r:r>n.max.z&&(n.max.z=r)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,i,r,n=0,o=0,a=e.length;a>o;o+=3)t=e[o],i=e[o+1],r=e[o+2],t=t*t+i*i+r*r,t>n&&(n=t);this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,i,r;if(e=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e),numItems:e};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var n,o,a,s,h,l,c=this.attributes.position.array,p=this.attributes.normal.array,u=new THREE.Vector3,f=new THREE.Vector3,d=new THREE.Vector3,E=new THREE.Vector3,m=new THREE.Vector3;if(this.attributes.index){var g=this.attributes.index.array,v=this.offsets;for(i=0,r=v.length;r>i;++i){t=v[i].start,n=v[i].count;var T=v[i].index;for(e=t,t+=n;t>e;e+=3)n=T+g[e],o=T+g[e+1],a=T+g[e+2],s=c[3*n],h=c[3*n+1],l=c[3*n+2],u.set(s,h,l),s=c[3*o],h=c[3*o+1],l=c[3*o+2],f.set(s,h,l),s=c[3*a],h=c[3*a+1],l=c[3*a+2],d.set(s,h,l),E.subVectors(d,f),m.subVectors(u,f),E.cross(m),p[3*n]+=E.x,p[3*n+1]+=E.y,p[3*n+2]+=E.z,p[3*o]+=E.x,p[3*o+1]+=E.y,p[3*o+2]+=E.z,p[3*a]+=E.x,p[3*a+1]+=E.y,p[3*a+2]+=E.z}}else for(e=0,t=c.length;t>e;e+=9)s=c[e],h=c[e+1],l=c[e+2],u.set(s,h,l),s=c[e+3],h=c[e+4],l=c[e+5],f.set(s,h,l),s=c[e+6],h=c[e+7],l=c[e+8],d.set(s,h,l),E.subVectors(d,f),m.subVectors(u,f),E.cross(m),p[e]=E.x,p[e+1]=E.y,p[e+2]=E.z,p[e+3]=E.x,p[e+4]=E.y,p[e+5]=E.z,p[e+6]=E.x,p[e+7]=E.y,p[e+8]=E.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,i,r=this.attributes.normal.array,n=0,o=r.length;o>n;n+=3)e=r[n],t=r[n+1],i=r[n+2],e=1/Math.sqrt(e*e+t*t+i*i),r[n]*=e,r[n+1]*=e,r[n+2]*=e},computeTangents:function(){function e(e){N.x=r[3*e],N.y=r[3*e+1],N.z=r[3*e+2],I.copy(N),U=h[e],V.copy(U),V.sub(N.multiplyScalar(N.dot(U))).normalize(),B.crossVectors(I,U),z=B.dot(l[e]),F=0>z?-1:1,s[4*e]=V.x,s[4*e+1]=V.y,s[4*e+2]=V.z,s[4*e+3]=F}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var t=this.attributes.index.array,i=this.attributes.position.array,r=this.attributes.normal.array,n=this.attributes.uv.array,o=i.length/3;if(void 0===this.attributes.tangent){var a=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(a),numItems:a}}for(var s=this.attributes.tangent.array,h=[],l=[],a=0;o>a;a++)h[a]=new THREE.Vector3,l[a]=new THREE.Vector3;var c,p,u,f,d,E,m,g,v,T,y,R,x,H,_,w,b,S,M,C,A,P,o=new THREE.Vector3,a=new THREE.Vector3,L=this.offsets;for(S=0,M=L.length;M>S;++S){b=L[S].start,C=L[S].count;var D=L[S].index;for(w=b,b+=C;b>w;w+=3)C=D+t[w],A=D+t[w+1],P=D+t[w+2],c=i[3*C],p=i[3*C+1],u=i[3*C+2],f=i[3*A],d=i[3*A+1],E=i[3*A+2],m=i[3*P],g=i[3*P+1],v=i[3*P+2],T=n[2*C],y=n[2*C+1],R=n[2*A],x=n[2*A+1],H=n[2*P],_=n[2*P+1],f-=c,c=m-c,d-=p,p=g-p,E-=u,u=v-u,R-=T,T=H-T,x-=y,y=_-y,_=1/(R*y-T*x),o.set((y*f-x*c)*_,(y*d-x*p)*_,(y*E-x*u)*_),a.set((R*c-T*f)*_,(R*p-T*d)*_,(R*u-T*E)*_),h[C].add(o),h[A].add(o),h[P].add(o),l[C].add(a),l[A].add(a),l[P].add(a)}var F,U,z,V=new THREE.Vector3,B=new THREE.Vector3,N=new THREE.Vector3,I=new THREE.Vector3;for(S=0,M=L.length;M>S;++S)for(b=L[S].start,C=L[S].count,D=L[S].index,w=b,b+=C;b>w;w+=3)C=D+t[w],A=D+t[w+1],P=D+t[w+2],e(C),e(A),e(P);this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,i,r,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()
},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,o){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,i=-t,r=e*i,e=Math.abs(e*t-r),i=Math.abs(t-i);this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*i/this.fullHeight,t-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,i){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==i?i:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,i,r,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ",t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return e=e.split("/"),e.pop(),(1>e.length?".":e.join("/"))+"/"},initMaterials:function(e,t){for(var i=[],r=0;e.length>r;++r)i[r]=THREE.Loader.prototype.createMaterial(e[r],t);return i},needsTangents:function(e){for(var t=0,i=e.length;i>t;t++)if(e[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function i(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function n(e,n,o,s,h,l,c){var p=o.toLowerCase().endsWith(".dds"),u=t+"/"+o;if(p){var f=THREE.ImageUtils.loadCompressedTexture(u);e[n]=f}else f=document.createElement("canvas"),e[n]=new THREE.Texture(f);if(e[n].sourceFile=o,s&&(e[n].repeat.set(s[0],s[1]),1!==s[0]&&(e[n].wrapS=THREE.RepeatWrapping),1!==s[1]&&(e[n].wrapT=THREE.RepeatWrapping)),h&&e[n].offset.set(h[0],h[1]),l&&(o={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==o[l[0]]&&(e[n].wrapS=o[l[0]]),void 0!==o[l[1]]&&(e[n].wrapT=o[l[1]])),c&&(e[n].anisotropy=c),!p){var d=e[n],e=new Image;e.onload=function(){if(i(this.width)&&i(this.height))d.image=this;else{var e=r(this.width),t=r(this.height);d.image.width=e,d.image.height=t,d.image.getContext("2d").drawImage(this,0,0,e,t)}d.needsUpdate=!0},e.crossOrigin=a.crossOrigin,e.src=u}}function o(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var a=this,s="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var l=e.shading.toLowerCase();"phong"===l?s="MeshPhongMaterial":"basic"===l&&(s="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(h.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(h.transparent=e.transparent),void 0!==e.depthTest&&(h.depthTest=e.depthTest),void 0!==e.depthWrite&&(h.depthWrite=e.depthWrite),void 0!==e.visible&&(h.visible=e.visible),void 0!==e.flipSided&&(h.side=THREE.BackSide),void 0!==e.doubleSided&&(h.side=THREE.DoubleSide),void 0!==e.wireframe&&(h.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?h.vertexColors=THREE.FaceColors:e.vertexColors&&(h.vertexColors=THREE.VertexColors)),e.colorDiffuse?h.color=o(e.colorDiffuse):e.DbgColor&&(h.color=e.DbgColor),e.colorSpecular&&(h.specular=o(e.colorSpecular)),e.colorAmbient&&(h.ambient=o(e.colorAmbient)),e.transparency&&(h.opacity=e.transparency),e.specularCoef&&(h.shininess=e.specularCoef),e.mapDiffuse&&t&&n(h,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&n(h,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&n(h,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&n(h,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&n(h,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(h.bumpScale=e.mapBumpScale),e.mapNormal?(s=THREE.ShaderLib.normalmap,l=THREE.UniformsUtils.clone(s.uniforms),l.tNormal.value=h.normalMap,e.mapNormalFactor&&l.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),h.map&&(l.tDiffuse.value=h.map,l.enableDiffuse.value=!0),h.specularMap&&(l.tSpecular.value=h.specularMap,l.enableSpecular.value=!0),h.lightMap&&(l.tAO.value=h.lightMap,l.enableAO.value=!0),l.uDiffuseColor.value.setHex(h.color),l.uSpecularColor.value.setHex(h.specular),l.uAmbientColor.value.setHex(h.ambient),l.uShininess.value=h.shininess,void 0!==h.opacity&&(l.uOpacity.value=h.opacity),s=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,lights:!0,fog:!0}),h.transparent&&(s.transparent=!0)):s=new THREE[s](h),void 0!==e.DbgName&&(s.name=e.DbgName),s}},THREE.ImageLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var i=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){i.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){i.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),i.crossOrigin&&(t.crossOrigin=i.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,i){i=i&&"string"==typeof i?i:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);e.createModel(s,i,r)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+o.status+"]");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,i){var r,n,o,a,s,h,l,c,p,u,f,d,E,m,g,v=new THREE.Geometry,T=void 0!==e.scale?1/e.scale:1,y=e.faces;u=e.vertices;var R=e.normals,x=e.colors,H=0;for(r=0;e.uvs.length>r;r++)e.uvs[r].length&&H++;for(r=0;H>r;r++)v.faceUvs[r]=[],v.faceVertexUvs[r]=[];for(a=0,s=u.length;s>a;)h=new THREE.Vector3,h.x=u[a++]*T,h.y=u[a++]*T,h.z=u[a++]*T,v.vertices.push(h);for(a=0,s=y.length;s>a;){if(u=y[a++],h=1&u,o=2&u,r=4&u,n=8&u,c=16&u,l=32&u,f=64&u,u&=128,h?(d=new THREE.Face4,d.a=y[a++],d.b=y[a++],d.c=y[a++],d.d=y[a++],h=4):(d=new THREE.Face3,d.a=y[a++],d.b=y[a++],d.c=y[a++],h=3),o&&(o=y[a++],d.materialIndex=o),o=v.faces.length,r)for(r=0;H>r;r++)E=e.uvs[r],p=y[a++],g=E[2*p],p=E[2*p+1],v.faceUvs[r][o]=new THREE.Vector2(g,p);if(n)for(r=0;H>r;r++){for(E=e.uvs[r],m=[],n=0;h>n;n++)p=y[a++],g=E[2*p],p=E[2*p+1],m[n]=new THREE.Vector2(g,p);v.faceVertexUvs[r][o]=m}if(c&&(c=3*y[a++],n=new THREE.Vector3,n.x=R[c++],n.y=R[c++],n.z=R[c],d.normal=n),l)for(r=0;h>r;r++)c=3*y[a++],n=new THREE.Vector3,n.x=R[c++],n.y=R[c++],n.z=R[c],d.vertexNormals.push(n);if(f&&(l=y[a++],l=new THREE.Color(x[l]),d.color=l),u)for(r=0;h>r;r++)l=y[a++],l=new THREE.Color(x[l]),d.vertexColors.push(l);v.faces.push(d)}if(e.skinWeights)for(a=0,s=e.skinWeights.length;s>a;a+=2)y=e.skinWeights[a],R=e.skinWeights[a+1],v.skinWeights.push(new THREE.Vector4(y,R,0,0));if(e.skinIndices)for(a=0,s=e.skinIndices.length;s>a;a+=2)y=e.skinIndices[a],R=e.skinIndices[a+1],v.skinIndices.push(new THREE.Vector4(y,R,0,0));if(v.bones=e.bones,v.animation=e.animation,void 0!==e.morphTargets)for(a=0,s=e.morphTargets.length;s>a;a++)for(v.morphTargets[a]={},v.morphTargets[a].name=e.morphTargets[a].name,v.morphTargets[a].vertices=[],x=v.morphTargets[a].vertices,H=e.morphTargets[a].vertices,y=0,R=H.length;R>y;y+=3)u=new THREE.Vector3,u.x=H[y]*T,u.y=H[y+1]*T,u.z=H[y+2]*T,x.push(u);if(void 0!==e.morphColors)for(a=0,s=e.morphColors.length;s>a;a++)for(v.morphColors[a]={},v.morphColors[a].name=e.morphColors[a].name,v.morphColors[a].colors=[],R=v.morphColors[a].colors,x=e.morphColors[a].colors,T=0,y=x.length;y>T;T+=3)H=new THREE.Color(16755200),H.setRGB(x[T],x[T+1],x[T+2]),R.push(H);v.computeCentroids(),v.computeFaceNormals(),e=this.initMaterials(e.materials,i),this.needsTangents(e)&&v.computeTangents(),t(v,e)},THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var e=this,t=0,i=0,r=function(){t++,e.dispatchEvent({type:"progress",loaded:t,total:i}),t===i&&e.dispatchEvent({type:"load"})};this.add=function(e){i++,e.addEventListener("load",r,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var i=this,r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){var n=JSON.parse(r.responseText);i.parse(n,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+r.status+"]")},r.open("GET",e,!0),r.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,i){function r(e,t){return"relativeToHTML"==t?e:w+"/"+e}function n(){o(x.scene,S.objects)}function o(e,t){var i,n,a,h,l,f,d;for(d in t)if(void 0===x.objects[d]){var v=t[d],T=null;if(v.type&&v.type in _.hierarchyHandlerMap){if(void 0===v.loading){n={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},a={};for(var y in v)y in n||(a[y]=v[y]);p=x.materials[v.material],v.loading=!0,n=_.hierarchyHandlerMap[v.type].loaderObject,n.options?n.load(r(v.url,S.urlBaseType),s(d,e,p,v)):n.load(r(v.url,S.urlBaseType),s(d,e,p,v),a)}}else if(void 0!==v.geometry){if(c=x.geometries[v.geometry]){if(T=!1,p=x.materials[v.material],T=p instanceof THREE.ShaderMaterial,a=v.position,h=v.rotation,l=v.scale,i=v.matrix,f=v.quaternion,v.material||(p=new THREE.MeshFaceMaterial(x.face_materials[v.geometry])),p instanceof THREE.MeshFaceMaterial&&0===p.materials.length&&(p=new THREE.MeshFaceMaterial(x.face_materials[v.geometry])),p instanceof THREE.MeshFaceMaterial)for(n=0;p.materials.length>n;n++)T=T||p.materials[n]instanceof THREE.ShaderMaterial;T&&c.computeTangents(),v.skin?T=new THREE.SkinnedMesh(c,p):v.morph?(T=new THREE.MorphAnimMesh(c,p),void 0!==v.duration&&(T.duration=v.duration),void 0!==v.time&&(T.time=v.time),void 0!==v.mirroredLoop&&(T.mirroredLoop=v.mirroredLoop),p.morphNormals&&c.computeMorphNormals()):T=new THREE.Mesh(c,p),T.name=d,i?(T.matrixAutoUpdate=!1,T.matrix.set(i[0],i[1],i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15])):(T.position.set(a[0],a[1],a[2]),f?(T.quaternion.set(f[0],f[1],f[2],f[3]),T.useQuaternion=!0):T.rotation.set(h[0],h[1],h[2]),T.scale.set(l[0],l[1],l[2])),T.visible=v.visible,T.castShadow=v.castShadow,T.receiveShadow=v.receiveShadow,e.add(T),x.objects[d]=T}}else"DirectionalLight"===v.type||"PointLight"===v.type||"AmbientLight"===v.type?(m=void 0!==v.color?v.color:16777215,g=void 0!==v.intensity?v.intensity:1,"DirectionalLight"===v.type?(a=v.direction,E=new THREE.DirectionalLight(m,g),E.position.set(a[0],a[1],a[2]),v.target&&(b.push({object:E,targetName:v.target}),E.target=null)):"PointLight"===v.type?(a=v.position,n=v.distance,E=new THREE.PointLight(m,g,n),E.position.set(a[0],a[1],a[2])):"AmbientLight"===v.type&&(E=new THREE.AmbientLight(m)),e.add(E),E.name=d,x.lights[d]=E,x.objects[d]=E):"PerspectiveCamera"===v.type||"OrthographicCamera"===v.type?("PerspectiveCamera"===v.type?u=new THREE.PerspectiveCamera(v.fov,v.aspect,v.near,v.far):"OrthographicCamera"===v.type&&(u=new THREE.OrthographicCamera(v.left,v.right,v.top,v.bottom,v.near,v.far)),a=v.position,u.position.set(a[0],a[1],a[2]),e.add(u),u.name=d,x.cameras[d]=u,x.objects[d]=u):(a=v.position,h=v.rotation,l=v.scale,f=v.quaternion,T=new THREE.Object3D,T.name=d,T.position.set(a[0],a[1],a[2]),f?(T.quaternion.set(f[0],f[1],f[2],f[3]),T.useQuaternion=!0):T.rotation.set(h[0],h[1],h[2]),T.scale.set(l[0],l[1],l[2]),T.visible=void 0!==v.visible?v.visible:!1,e.add(T),x.objects[d]=T,x.empties[d]=T);if(T){if(void 0!==v.properties)for(var R in v.properties)T.properties[R]=v.properties[R];if(void 0!==v.groups)for(n=0;v.groups.length>n;n++)a=v.groups[n],void 0===x.groups[a]&&(x.groups[a]=[]),x.groups[a].push(d);void 0!==v.children&&o(T,v.children)}}}function a(e){return function(t,i){x.geometries[e]=t,x.face_materials[e]=i,n(),v-=1,_.onLoadComplete(),l()}}function s(e,t,i,r){return function(o){var o=o.content?o.content:o.dae?o.scene:o,a=r.position,s=r.rotation,h=r.quaternion,c=r.scale;o.position.set(a[0],a[1],a[2]),h?(o.quaternion.set(h[0],h[1],h[2],h[3]),o.useQuaternion=!0):o.rotation.set(s[0],s[1],s[2]),o.scale.set(c[0],c[1],c[2]),i&&o.traverse(function(e){e.material=i});var p=void 0!==r.visible?r.visible:!0;o.traverse(function(e){e.visible=p}),t.add(o),o.name=e,x.objects[e]=o,n(),v-=1,_.onLoadComplete(),l()}}function h(e){return function(t,i){x.geometries[e]=t,x.face_materials[e]=i}}function l(){if(_.callbackProgress({totalModels:y,totalTextures:R,loadedModels:y-v,loadedTextures:R-T},x),_.onLoadProgress(),0===v&&0===T){for(var e=0;b.length>e;e++){var i=b[e],r=x.objects[i.targetName];r?i.object.target=r:(i.object.target=new THREE.Object3D,x.scene.add(i.object.target)),i.object.target.properties.targetInverse=i.object}t(x)}}var c,p,u,f,d,E,m,g,v,T,y,R,x,H,_=this,w=THREE.Loader.prototype.extractUrlBase(i),b=[],S=e;for(H in this.geometryHandlerMap)e=this.geometryHandlerMap[H].loaderClass,this.geometryHandlerMap[H].loaderObject=new e;for(H in this.hierarchyHandlerMap)e=this.hierarchyHandlerMap[H].loaderClass,this.hierarchyHandlerMap[H].loaderObject=new e;T=v=0,x={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},S.transform&&(H=S.transform.position,e=S.transform.rotation,i=S.transform.scale,H&&x.scene.position.set(H[0],H[1],H[2]),e&&x.scene.rotation.set(e[0],e[1],e[2]),i&&x.scene.scale.set(i[0],i[1],i[2]),H||e||i)&&(x.scene.updateMatrix(),x.scene.updateMatrixWorld()),H=function(e){return function(){T-=e,l(),_.onLoadComplete()}};for(var M in S.fogs)e=S.fogs[M],"linear"===e.type?f=new THREE.Fog(0,e.near,e.far):"exp2"===e.type&&(f=new THREE.FogExp2(0,e.density)),e=e.color,f.color.setRGB(e[0],e[1],e[2]),x.fogs[M]=f;for(var C in S.geometries)f=S.geometries[C],f.type in this.geometryHandlerMap&&(v+=1,_.onLoadStart());for(var A in S.objects)f=S.objects[A],f.type&&f.type in this.hierarchyHandlerMap&&(v+=1,_.onLoadStart());y=v;for(C in S.geometries)if(f=S.geometries[C],"cube"===f.type)c=new THREE.CubeGeometry(f.width,f.height,f.depth,f.widthSegments,f.heightSegments,f.depthSegments),x.geometries[C]=c;else if("plane"===f.type)c=new THREE.PlaneGeometry(f.width,f.height,f.widthSegments,f.heightSegments),x.geometries[C]=c;else if("sphere"===f.type)c=new THREE.SphereGeometry(f.radius,f.widthSegments,f.heightSegments),x.geometries[C]=c;else if("cylinder"===f.type)c=new THREE.CylinderGeometry(f.topRad,f.botRad,f.height,f.radSegs,f.heightSegs),x.geometries[C]=c;else if("torus"===f.type)c=new THREE.TorusGeometry(f.radius,f.tube,f.segmentsR,f.segmentsT),x.geometries[C]=c;else if("icosahedron"===f.type)c=new THREE.IcosahedronGeometry(f.radius,f.subdivisions),x.geometries[C]=c;else if(f.type in this.geometryHandlerMap){A={};for(d in f)"type"!==d&&"url"!==d&&(A[d]=f[d]);this.geometryHandlerMap[f.type].loaderObject.load(r(f.url,S.urlBaseType),a(C),A)}else"embedded"===f.type&&(A=S.embeds[f.id],A.metadata=S.metadata,A&&this.geometryHandlerMap.ascii.loaderObject.createModel(A,h(C),""));for(var P in S.textures)if(C=S.textures[P],C.url instanceof Array)for(T+=C.url.length,d=0;C.url.length>d;d++)_.onLoadStart();else T+=1,_.onLoadStart();R=T;for(P in S.textures){if(C=S.textures[P],void 0!==C.mapping&&void 0!==THREE[C.mapping]&&(C.mapping=new THREE[C.mapping]),C.url instanceof Array){for(A=C.url.length,f=[],d=0;A>d;d++)f[d]=r(C.url[d],S.urlBaseType);d=(d=f[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(f,C.mapping,H(A)):THREE.ImageUtils.loadTextureCube(f,C.mapping,H(A))}else d=C.url.toLowerCase().endsWith(".dds"),A=r(C.url,S.urlBaseType),f=H(1),d=d?THREE.ImageUtils.loadCompressedTexture(A,C.mapping,f):THREE.ImageUtils.loadTexture(A,C.mapping,f),void 0!==THREE[C.minFilter]&&(d.minFilter=THREE[C.minFilter]),void 0!==THREE[C.magFilter]&&(d.magFilter=THREE[C.magFilter]),C.anisotropy&&(d.anisotropy=C.anisotropy),C.repeat&&(d.repeat.set(C.repeat[0],C.repeat[1]),1!==C.repeat[0]&&(d.wrapS=THREE.RepeatWrapping),1!==C.repeat[1]&&(d.wrapT=THREE.RepeatWrapping)),C.offset&&d.offset.set(C.offset[0],C.offset[1]),C.wrap&&(A={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==A[C.wrap[0]]&&(d.wrapS=A[C.wrap[0]]),void 0!==A[C.wrap[1]]&&(d.wrapT=A[C.wrap[1]]));x.textures[P]=d}var L,D;for(L in S.materials){P=S.materials[L];for(D in P.parameters)"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?P.parameters[D]=x.textures[P.parameters[D]]:"shading"===D?P.parameters[D]="flat"===P.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?P.parameters[D]="double"==P.parameters[D]?THREE.DoubleSide:"back"==P.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?P.parameters[D]=P.parameters[D]in THREE?THREE[P.parameters[D]]:THREE.NormalBlending:"combine"===D?P.parameters[D]=P.parameters[D]in THREE?THREE[P.parameters[D]]:THREE.MultiplyOperation:"vertexColors"===D?"face"==P.parameters[D]?P.parameters[D]=THREE.FaceColors:P.parameters[D]&&(P.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(H=P.parameters[D],P.parameters[D]=new THREE.Vector3(H[0],H[1],H[2]));void 0!==P.parameters.opacity&&1>P.parameters.opacity&&(P.parameters.transparent=!0),P.parameters.normalMap?(H=THREE.ShaderLib.normalmap,C=THREE.UniformsUtils.clone(H.uniforms),d=P.parameters.color,A=P.parameters.specular,f=P.parameters.ambient,M=P.parameters.shininess,C.tNormal.value=x.textures[P.parameters.normalMap],P.parameters.normalScale&&C.uNormalScale.value.set(P.parameters.normalScale[0],P.parameters.normalScale[1]),P.parameters.map&&(C.tDiffuse.value=P.parameters.map,C.enableDiffuse.value=!0),P.parameters.envMap&&(C.tCube.value=P.parameters.envMap,C.enableReflection.value=!0,C.uReflectivity.value=P.parameters.reflectivity),P.parameters.lightMap&&(C.tAO.value=P.parameters.lightMap,C.enableAO.value=!0),P.parameters.specularMap&&(C.tSpecular.value=x.textures[P.parameters.specularMap],C.enableSpecular.value=!0),P.parameters.displacementMap&&(C.tDisplacement.value=x.textures[P.parameters.displacementMap],C.enableDisplacement.value=!0,C.uDisplacementBias.value=P.parameters.displacementBias,C.uDisplacementScale.value=P.parameters.displacementScale),C.uDiffuseColor.value.setHex(d),C.uSpecularColor.value.setHex(A),C.uAmbientColor.value.setHex(f),C.uShininess.value=M,P.parameters.opacity&&(C.uOpacity.value=P.parameters.opacity),p=new THREE.ShaderMaterial({fragmentShader:H.fragmentShader,vertexShader:H.vertexShader,uniforms:C,lights:!0,fog:!0})):p=new THREE[P.type](P.parameters),x.materials[L]=p}for(L in S.materials)if(P=S.materials[L],P.parameters.materials){for(D=[],d=0;P.parameters.materials.length>d;d++)D.push(x.materials[P.parameters.materials[d]]);x.materials[L].materials=D}n(),x.cameras&&S.defaults.camera&&(x.currentCamera=x.cameras[S.defaults.camera]),x.fogs&&S.defaults.fog&&(x.scene.fog=x.fogs[S.defaults.fog]),_.callbackSync(x),l()},THREE.TextureLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,i=new Image;i.addEventListener("load",function(){var e=new THREE.Texture(i);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),i.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(i.crossOrigin=t.crossOrigin),i.src=e}},THREE.Material=function(){THREE.EventDispatcher.call(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.overdraw=!1,this.needsUpdate=this.visible=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0===i)console.warn("THREE.Material: '"+t+"' parameter is undefined.");else if(t in this){var r=this[t];r instanceof THREE.Color&&i instanceof THREE.Color?r.copy(i):r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]=i}}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)
},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),e=e||{},void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,i,r,n,o,a,s,h){THREE.EventDispatcher.call(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,i,r,n,o,a,s,h,l,c){THREE.Texture.call(this,null,o,a,s,h,l,r,n,c),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;r>i;i++)this.children[i].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,i){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==i?i:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r,n,o;if(this.geometry&&void 0!==this.geometry.bones){for(e=0;this.geometry.bones.length>e;e++)i=this.geometry.bones[e],r=i.pos,n=i.rotq,o=i.scl,t=this.addBone(),t.name=i.name,t.position.set(r[0],r[1],r[2]),t.quaternion.set(n[0],n[1],n[2],n[3]),t.useQuaternion=!0,void 0!==o?t.scale.set(o[0],o[1],o[2]):t.scale.set(1,1,1);for(e=0;this.bones.length>e;e++)i=this.geometry.bones[e],t=this.bones[e],-1===i.parent?this.add(t):this.bones[i.parent].add(t);e=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=e=e>256?64:e>64?32:e>16?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*e),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1);for(var e=0,t=this.children.length;t>e;e++){var i=this.children[e];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}if(void 0==this.boneInverses)for(this.boneInverses=[],e=0,t=this.bones.length;t>e;e++)i=new THREE.Matrix4,i.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(i);for(e=0,t=this.bones.length;t>e;e++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;this.geometry.skinIndices.length>e;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!==i?t.multiplyScalar(i):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;o>n;n++){var a=e.morphTargets[n].name.match(r);if(a&&a.length>1){a=a[1],i[a]||(i[a]={start:1/0,end:-1/0});var s=i[a];s.start>n&&(s.start=n),n>s.end&&(s.end=n),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i?(this.setFrameRange(i.start,i.end),this.duration=1e3*((i.end-i.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1),e!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);for(var t=Math.abs(t),i=0;this.LODs.length>i&&!(this.LODs[i].visibleAtDistance>t);i++);this.LODs.splice(i,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld),e=e.matrixWorldInverse,e=-(e.elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;this.LODs.length>t&&e>=this.LODs[t].visibleAtDistance;t++)this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0;for(;this.LODs.length>t;t++)this.LODs[t].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;e.children.length>t;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else e instanceof THREE.Camera||(t=this.__objects.indexOf(e),-1!==t&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),t=this.__objectsAdded.indexOf(e),-1!==t&&this.__objectsAdded.splice(t,1)));for(t=0;e.children.length>t;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,i){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){$!==e&&($=Y.globalAlpha=e)}function i(e){Q!==e&&(e===THREE.NormalBlending?Y.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?Y.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(Y.globalCompositeOperation="darker"),Q=e)}function r(e){Z!==e&&(Z=Y.strokeStyle=e)}function n(e){J!==e&&(J=Y.fillStyle=e)}console.log("THREE.CanvasRenderer",THREE.REVISION);var o,a,s,h,l,c,p,u,f,d,E,m,g,v,T,y,R,x,H,_,w,b,S,M,C,A,P,L,D,F,U,z,V,B,N,I,O,k,G,e=e||{},W=this,j=new THREE.Projector,X=void 0!==e.canvas?e.canvas:document.createElement("canvas"),Y=X.getContext("2d"),q=new THREE.Color(0),K=0,$=1,Q=0,Z=null,J=null,et=null,tt=null,it=null,rt=new THREE.RenderableVertex,nt=new THREE.RenderableVertex,ot=new THREE.Color,at=new THREE.Color,st=new THREE.Color,ht=new THREE.Color,lt=new THREE.Color,ct=new THREE.Color,pt=new THREE.Color,ut=new THREE.Color,ft={},dt={},Et=new THREE.Box2,mt=new THREE.Box2,gt=new THREE.Box2,vt=!1,Tt=new THREE.Color,yt=new THREE.Color,Rt=new THREE.Color,xt=new THREE.Vector3,Ht=16;B=document.createElement("canvas"),B.width=B.height=2,N=B.getContext("2d"),N.fillStyle="rgba(0,0,0,1)",N.fillRect(0,0,2,2),I=N.getImageData(0,0,2,2),O=I.data,k=document.createElement("canvas"),k.width=k.height=Ht,G=k.getContext("2d"),G.translate(-Ht/2,-Ht/2),G.scale(Ht,Ht),Ht--,this.domElement=X,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){h=e*this.devicePixelRatio,l=t*this.devicePixelRatio,c=Math.floor(h/2),p=Math.floor(l/2),X.width=h,X.height=l,X.style.width=e+"px",X.style.height=t+"px",Et.set(new THREE.Vector2(-c,-p),new THREE.Vector2(c,p)),mt.set(new THREE.Vector2(-c,-p),new THREE.Vector2(c,p)),$=1,Q=0,it=tt=et=J=Z=null},this.setClearColor=function(e,t){q.copy(e),K=void 0!==t?t:1,mt.set(new THREE.Vector2(-c,-p),new THREE.Vector2(c,p))},this.setClearColorHex=function(e,t){q.setHex(e),K=void 0!==t?t:1,mt.set(new THREE.Vector2(-c,-p),new THREE.Vector2(c,p))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){Y.setTransform(1,0,0,-1,c,p),!1===mt.empty()&&(mt.intersect(Et),mt.expandByScalar(2),1>K&&Y.clearRect(0|mt.min.x,0|mt.min.y,0|mt.max.x-mt.min.x,0|mt.max.y-mt.min.y),K>0&&(i(THREE.NormalBlending),t(1),n("rgba("+Math.floor(255*q.r)+","+Math.floor(255*q.g)+","+Math.floor(255*q.b)+","+K+")"),Y.fillRect(0|mt.min.x,0|mt.min.y,0|mt.max.x-mt.min.x,0|mt.max.y-mt.min.y)),mt.makeEmpty())},this.render=function(e,h){function l(e,t,i){for(var r=0,n=s.length;n>r;r++){var o=s[r];if(ut.copy(o.color),o instanceof THREE.DirectionalLight){var a=o.matrixWorld.getPosition().normalize(),h=t.dot(a);0>=h||(h*=o.intensity,i.add(ut.multiplyScalar(h)))}else o instanceof THREE.PointLight&&(a=o.matrixWorld.getPosition(),h=t.dot(xt.subVectors(a,e).normalize()),0>=h||(h*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1),0!=h&&(h*=o.intensity,i.add(ut.multiplyScalar(h)))))}}function X(e,r,n,o,a,s,c,p){W.info.render.vertices+=3,W.info.render.faces++,t(p.opacity),i(p.blending),m=e.positionScreen.x,g=e.positionScreen.y,v=r.positionScreen.x,T=r.positionScreen.y,y=n.positionScreen.x,R=n.positionScreen.y,q(m,g,v,T,y,R),(p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial)&&null===p.map&&null===p.map?(ct.copy(p.color),pt.copy(p.emissive),p.vertexColors===THREE.FaceColors&&ct.multiply(c.color),!0===vt?!1===p.wireframe&&p.shading==THREE.SmoothShading&&3==c.vertexNormalsLength?(at.copy(Tt),st.copy(Tt),ht.copy(Tt),l(c.v1.positionWorld,c.vertexNormalsModel[0],at),l(c.v2.positionWorld,c.vertexNormalsModel[1],st),l(c.v3.positionWorld,c.vertexNormalsModel[2],ht),at.multiply(ct).add(pt),st.multiply(ct).add(pt),ht.multiply(ct).add(pt),lt.addColors(st,ht).multiplyScalar(.5),A=Ht(at,st,ht,lt),J(m,g,v,T,y,R,0,0,1,0,0,1,A)):(ot.copy(Tt),l(c.centroidModel,c.normalModel,ot),ot.multiply(ct).add(pt),!0===p.wireframe?$(ot,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Q(ot)):!0===p.wireframe?$(p.color,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Q(p.color)):p instanceof THREE.MeshBasicMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial?null!==p.map?p.map.mapping instanceof THREE.UVMapping&&(P=c.uvs[0],Z(m,g,v,T,y,R,P[o].x,P[o].y,P[a].x,P[a].y,P[s].x,P[s].y,p.map)):null!==p.envMap?p.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(xt.copy(c.vertexNormalsModelView[o]),L=.5*xt.x+.5,D=.5*xt.y+.5,xt.copy(c.vertexNormalsModelView[a]),F=.5*xt.x+.5,U=.5*xt.y+.5,xt.copy(c.vertexNormalsModelView[s]),z=.5*xt.x+.5,V=.5*xt.y+.5,Z(m,g,v,T,y,R,L,D,F,U,z,V,p.envMap)):(ot.copy(p.color),p.vertexColors===THREE.FaceColors&&ot.multiply(c.color),!0===p.wireframe?$(ot,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Q(ot)):p instanceof THREE.MeshDepthMaterial?(M=h.near,C=h.far,a=1-_t(e.positionScreen.z*e.positionScreen.w,M,C),at.setRGB(a,a,a),a=1-_t(r.positionScreen.z*r.positionScreen.w,M,C),st.setRGB(a,a,a),a=1-_t(n.positionScreen.z*n.positionScreen.w,M,C),ht.setRGB(a,a,a),lt.addColors(st,ht).multiplyScalar(.5),A=Ht(at,st,ht,lt),J(m,g,v,T,y,R,0,0,1,0,0,1,A)):p instanceof THREE.MeshNormalMaterial&&(p.shading==THREE.FlatShading?(r=c.normalModelView,ot.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),!0===p.wireframe?$(ot,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Q(ot)):p.shading==THREE.SmoothShading&&(r=c.vertexNormalsModelView[o],at.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=c.vertexNormalsModelView[a],st.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=c.vertexNormalsModelView[s],ht.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),lt.addColors(st,ht).multiplyScalar(.5),A=Ht(at,st,ht,lt),J(m,g,v,T,y,R,0,0,1,0,0,1,A)))}function q(e,t,i,r,n,o){Y.beginPath(),Y.moveTo(e,t),Y.lineTo(i,r),Y.lineTo(n,o),Y.closePath()}function K(e,t,i,r,n,o,a,s){Y.beginPath(),Y.moveTo(e,t),Y.lineTo(i,r),Y.lineTo(n,o),Y.lineTo(a,s),Y.closePath()}function $(e,t,i,n){et!==t&&(et=Y.lineWidth=t),tt!==i&&(tt=Y.lineCap=i),it!==n&&(it=Y.lineJoin=n),r(e.getStyle()),Y.stroke(),gt.expandByScalar(2*t)}function Q(e){n(e.getStyle()),Y.fill()}function Z(e,t,i,r,o,a,s,h,l,c,p,u,f){if(!(f instanceof THREE.DataTexture||void 0===f.image||0==f.image.width)){if(!0===f.needsUpdate){var d=f.wrapS==THREE.RepeatWrapping,E=f.wrapT==THREE.RepeatWrapping;ft[f.id]=Y.createPattern(f.image,!0===d&&!0===E?"repeat":!0===d&&!1===E?"repeat-x":!1===d&&!0===E?"repeat-y":"no-repeat"),f.needsUpdate=!1}void 0===ft[f.id]?n("rgba(0,0,0,1)"):n(ft[f.id]);var d=f.offset.x/f.repeat.x,E=f.offset.y/f.repeat.y,m=f.image.width*f.repeat.x,g=f.image.height*f.repeat.y,s=(s+d)*m,h=(1-h+E)*g,i=i-e,r=r-t,o=o-e,a=a-t,l=(l+d)*m-s,c=(1-c+E)*g-h,p=(p+d)*m-s,u=(1-u+E)*g-h,d=l*u-p*c;0===d?(void 0===dt[f.id]&&(t=document.createElement("canvas"),t.width=f.image.width,t.height=f.image.height,t=t.getContext("2d"),t.drawImage(f.image,0,0),dt[f.id]=t.getImageData(0,0,f.image.width,f.image.height).data),t=dt[f.id],s=4*(Math.floor(s)+Math.floor(h)*f.image.width),ot.setRGB(t[s]/255,t[s+1]/255,t[s+2]/255),Q(ot)):(d=1/d,f=(u*i-c*o)*d,c=(u*r-c*a)*d,i=(l*o-p*i)*d,r=(l*a-p*r)*d,e=e-f*s-i*h,s=t-c*s-r*h,Y.save(),Y.transform(f,c,i,r,e,s),Y.fill(),Y.restore())}}function J(e,t,i,r,n,o,a,s,h,l,c,p,u){var f,d;f=u.width-1,d=u.height-1,a*=f,s*=d,i-=e,r-=t,n-=e,o-=t,h=h*f-a,l=l*d-s,c=c*f-a,p=p*d-s,d=1/(h*p-c*l),f=(p*i-l*n)*d,l=(p*r-l*o)*d,i=(h*n-c*i)*d,r=(h*o-c*r)*d,e=e-f*a-i*s,t=t-l*a-r*s,Y.save(),Y.transform(f,l,i,r,e,t),Y.clip(),Y.drawImage(u,0,0),Y.restore()}function Ht(e,t,i,r){return O[0]=0|255*e.r,O[1]=0|255*e.g,O[2]=0|255*e.b,O[4]=0|255*t.r,O[5]=0|255*t.g,O[6]=0|255*t.b,O[8]=0|255*i.r,O[9]=0|255*i.g,O[10]=0|255*i.b,O[12]=0|255*r.r,O[13]=0|255*r.g,O[14]=0|255*r.b,N.putImageData(I,0,0),G.drawImage(B,0,0),k}function _t(e,t,i){return e=(e-t)/(i-t),e*e*(3-2*e)}function wt(e,t){var i=t.x-e.x,r=t.y-e.y,n=i*i+r*r;0!==n&&(n=1/Math.sqrt(n),i*=n,r*=n,t.x+=i,t.y+=r,e.x-=i,e.y-=r)}if(!1==h instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{if(!0===this.autoClear&&this.clear(),Y.setTransform(1,0,0,-1,c,p),W.info.render.vertices=0,W.info.render.faces=0,o=j.projectScene(e,h,this.sortObjects,this.sortElements),a=o.elements,s=o.lights,vt=s.length>0,!0===vt){Tt.setRGB(0,0,0),yt.setRGB(0,0,0),Rt.setRGB(0,0,0);for(var bt=0,St=s.length;St>bt;bt++){var Mt=s[bt],Ct=Mt.color;Mt instanceof THREE.AmbientLight?Tt.add(Ct):Mt instanceof THREE.DirectionalLight?yt.add(Ct):Mt instanceof THREE.PointLight&&Rt.add(Ct)}}for(bt=0,St=a.length;St>bt;bt++){var At=a[bt],Mt=At.material;if(void 0!==Mt&&!1!==Mt.visible){if(gt.makeEmpty(),At instanceof THREE.RenderableParticle){u=At,u.x*=c,u.y*=p;var Ct=u,Pt=At;t(Mt.opacity),i(Mt.blending);var Lt=void 0,Dt=void 0,Ft=void 0,Ut=void 0,zt=At=void 0,Vt=void 0;Mt instanceof THREE.ParticleBasicMaterial?null===Mt.map?(Ft=Pt.object.scale.x,Ut=Pt.object.scale.y,Ft*=Pt.scale.x*c,Ut*=Pt.scale.y*p,gt.min.set(Ct.x-Ft,Ct.y-Ut),gt.max.set(Ct.x+Ft,Ct.y+Ut),!1!==Et.isIntersectionBox(gt)&&(n(Mt.color.getStyle()),Y.save(),Y.translate(Ct.x,Ct.y),Y.rotate(-Pt.rotation),Y.scale(Ft,Ut),Y.fillRect(-1,-1,2,2),Y.restore())):(At=Mt.map.image,zt=At.width>>1,Vt=At.height>>1,Ft=Pt.scale.x*c,Ut=Pt.scale.y*p,Lt=Ft*zt,Dt=Ut*Vt,gt.min.set(Ct.x-Lt,Ct.y-Dt),gt.max.set(Ct.x+Lt,Ct.y+Dt),!1!==Et.isIntersectionBox(gt)&&(Y.save(),Y.translate(Ct.x,Ct.y),Y.rotate(-Pt.rotation),Y.scale(Ft,-Ut),Y.translate(-zt,-Vt),Y.drawImage(At,0,0),Y.restore())):Mt instanceof THREE.ParticleCanvasMaterial&&(Lt=Pt.scale.x*c,Dt=Pt.scale.y*p,gt.min.set(Ct.x-Lt,Ct.y-Dt),gt.max.set(Ct.x+Lt,Ct.y+Dt),!1!==Et.isIntersectionBox(gt)&&(r(Mt.color.getStyle()),n(Mt.color.getStyle()),Y.save(),Y.translate(Ct.x,Ct.y),Y.rotate(-Pt.rotation),Y.scale(Lt,Dt),Mt.program(Y),Y.restore()))}else if(At instanceof THREE.RenderableLine)u=At.v1,f=At.v2,u.positionScreen.x*=c,u.positionScreen.y*=p,f.positionScreen.x*=c,f.positionScreen.y*=p,gt.setFromPoints([u.positionScreen,f.positionScreen]),!0===Et.isIntersectionBox(gt)&&(Ct=u,Pt=f,t(Mt.opacity),i(Mt.blending),Y.beginPath(),Y.moveTo(Ct.positionScreen.x,Ct.positionScreen.y),Y.lineTo(Pt.positionScreen.x,Pt.positionScreen.y),Mt instanceof THREE.LineBasicMaterial&&(Ct=Mt.linewidth,et!==Ct&&(et=Y.lineWidth=Ct),Ct=Mt.linecap,tt!==Ct&&(tt=Y.lineCap=Ct),Ct=Mt.linejoin,it!==Ct&&(it=Y.lineJoin=Ct),r(Mt.color.getStyle()),Y.stroke(),gt.expandByScalar(2*Mt.linewidth)));else if(At instanceof THREE.RenderableFace3){if(u=At.v1,f=At.v2,d=At.v3,-1>u.positionScreen.z||u.positionScreen.z>1)continue;if(-1>f.positionScreen.z||f.positionScreen.z>1)continue;if(-1>d.positionScreen.z||d.positionScreen.z>1)continue;u.positionScreen.x*=c,u.positionScreen.y*=p,f.positionScreen.x*=c,f.positionScreen.y*=p,d.positionScreen.x*=c,d.positionScreen.y*=p,!0===Mt.overdraw&&(wt(u.positionScreen,f.positionScreen),wt(f.positionScreen,d.positionScreen),wt(d.positionScreen,u.positionScreen)),gt.setFromPoints([u.positionScreen,f.positionScreen,d.positionScreen]),X(u,f,d,0,1,2,At,Mt,e)}else if(At instanceof THREE.RenderableFace4){if(u=At.v1,f=At.v2,d=At.v3,E=At.v4,-1>u.positionScreen.z||u.positionScreen.z>1)continue;if(-1>f.positionScreen.z||f.positionScreen.z>1)continue;if(-1>d.positionScreen.z||d.positionScreen.z>1)continue;if(-1>E.positionScreen.z||E.positionScreen.z>1)continue;u.positionScreen.x*=c,u.positionScreen.y*=p,f.positionScreen.x*=c,f.positionScreen.y*=p,d.positionScreen.x*=c,d.positionScreen.y*=p,E.positionScreen.x*=c,E.positionScreen.y*=p,rt.positionScreen.copy(f.positionScreen),nt.positionScreen.copy(E.positionScreen),!0===Mt.overdraw&&(wt(u.positionScreen,f.positionScreen),wt(f.positionScreen,E.positionScreen),wt(E.positionScreen,u.positionScreen),wt(d.positionScreen,rt.positionScreen),wt(d.positionScreen,nt.positionScreen)),gt.setFromPoints([u.positionScreen,f.positionScreen,d.positionScreen,E.positionScreen]),Ct=u,Pt=f,Lt=d,Dt=E,Ft=rt,Ut=nt,zt=e,W.info.render.vertices+=4,W.info.render.faces++,t(Mt.opacity),i(Mt.blending),void 0!==Mt.map&&null!==Mt.map||void 0!==Mt.envMap&&null!==Mt.envMap?(X(Ct,Pt,Dt,0,1,3,At,Mt,zt),X(Ft,Lt,Ut,1,2,3,At,Mt,zt)):(m=Ct.positionScreen.x,g=Ct.positionScreen.y,v=Pt.positionScreen.x,T=Pt.positionScreen.y,y=Lt.positionScreen.x,R=Lt.positionScreen.y,x=Dt.positionScreen.x,H=Dt.positionScreen.y,_=Ft.positionScreen.x,w=Ft.positionScreen.y,b=Ut.positionScreen.x,S=Ut.positionScreen.y,Mt instanceof THREE.MeshLambertMaterial||Mt instanceof THREE.MeshPhongMaterial?(ct.copy(Mt.color),pt.copy(Mt.emissive),Mt.vertexColors===THREE.FaceColors&&ct.multiply(At.color),!0===vt?!1===Mt.wireframe&&Mt.shading==THREE.SmoothShading&&4==At.vertexNormalsLength?(at.copy(Tt),st.copy(Tt),ht.copy(Tt),lt.copy(Tt),l(At.v1.positionWorld,At.vertexNormalsModel[0],at),l(At.v2.positionWorld,At.vertexNormalsModel[1],st),l(At.v4.positionWorld,At.vertexNormalsModel[3],ht),l(At.v3.positionWorld,At.vertexNormalsModel[2],lt),at.multiply(ct).add(pt),st.multiply(ct).add(pt),ht.multiply(ct).add(pt),lt.multiply(ct).add(pt),A=Ht(at,st,ht,lt),q(m,g,v,T,x,H),J(m,g,v,T,x,H,0,0,1,0,0,1,A),q(_,w,y,R,b,S),J(_,w,y,R,b,S,1,0,1,1,0,1,A)):(ot.copy(Tt),l(At.centroidModel,At.normalModel,ot),ot.multiply(ct).add(pt),K(m,g,v,T,y,R,x,H),!0===Mt.wireframe?$(ot,Mt.wireframeLinewidth,Mt.wireframeLinecap,Mt.wireframeLinejoin):Q(ot)):(ot.addColors(ct,pt),K(m,g,v,T,y,R,x,H),!0===Mt.wireframe?$(ot,Mt.wireframeLinewidth,Mt.wireframeLinecap,Mt.wireframeLinejoin):Q(ot))):Mt instanceof THREE.MeshBasicMaterial?(ot.copy(Mt.color),Mt.vertexColors===THREE.FaceColors&&ot.multiply(At.color),K(m,g,v,T,y,R,x,H),!0===Mt.wireframe?$(ot,Mt.wireframeLinewidth,Mt.wireframeLinecap,Mt.wireframeLinejoin):Q(ot)):Mt instanceof THREE.MeshNormalMaterial?(Ct=void 0,Mt.shading==THREE.FlatShading?(Ct=At.normalModelView,ot.setRGB(Ct.x,Ct.y,Ct.z).multiplyScalar(.5).addScalar(.5),K(m,g,v,T,y,R,x,H),!0===Mt.wireframe?$(ot,Mt.wireframeLinewidth,Mt.wireframeLinecap,Mt.wireframeLinejoin):Q(ot)):Mt.shading==THREE.SmoothShading&&(Ct=At.vertexNormalsModelView[0],at.setRGB(Ct.x,Ct.y,Ct.z).multiplyScalar(.5).addScalar(.5),Ct=At.vertexNormalsModelView[1],st.setRGB(Ct.x,Ct.y,Ct.z).multiplyScalar(.5).addScalar(.5),Ct=At.vertexNormalsModelView[3],ht.setRGB(Ct.x,Ct.y,Ct.z).multiplyScalar(.5).addScalar(.5),Ct=At.vertexNormalsModelView[2],lt.setRGB(Ct.x,Ct.y,Ct.z).multiplyScalar(.5).addScalar(.5),A=Ht(at,st,ht,lt),q(m,g,v,T,x,H),J(m,g,v,T,x,H,0,0,1,0,0,1,A),q(_,w,y,R,b,S),J(_,w,y,R,b,S,1,0,1,1,0,1,A))):Mt instanceof THREE.MeshDepthMaterial&&(M=h.near,C=h.far,at.r=at.g=at.b=1-_t(Ct.positionScreen.z*Ct.positionScreen.w,M,C),st.r=st.g=st.b=1-_t(Pt.positionScreen.z*Pt.positionScreen.w,M,C),ht.r=ht.g=ht.b=1-_t(Dt.positionScreen.z*Dt.positionScreen.w,M,C),lt.r=lt.g=lt.b=1-_t(Lt.positionScreen.z*Lt.positionScreen.w,M,C),A=Ht(at,st,ht,lt),q(m,g,v,T,x,H),J(m,g,v,T,x,H,0,0,1,0,0,1,A),q(_,w,y,R,b,S),J(_,w,y,R,b,S,1,0,1,1,0,1,A)))
}mt.union(gt)}}Y.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,i,r,n={};
for(t=0;e.length>t;t++)for(i in r=this.clone(e[t]))n[i]=r[i];return n},clone:function(e){var t,i,r,n={};for(t in e)for(i in n[t]={},e[t])r=e[t][i],n[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)k.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function i(e,t){var i=e.vertices.length,r=t.material;if(r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in r.attributes){var o=r.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(i*a),o.buffer=k.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}}function r(e,t){var i=t.geometry,r=e.faces3,s=e.faces4,h=3*r.length+4*s.length,l=1*r.length+2*s.length,s=3*r.length+4*s.length,r=n(t,e),c=a(r),p=o(r),u=r.vertexColors?r.vertexColors:!1;if(e.__vertexArray=new Float32Array(3*h),p&&(e.__normalArray=new Float32Array(3*h)),i.hasTangents&&(e.__tangentArray=new Float32Array(4*h)),u&&(e.__colorArray=new Float32Array(3*h)),c&&((i.faceUvs.length>0||i.faceVertexUvs.length>0)&&(e.__uvArray=new Float32Array(2*h)),(i.faceUvs.length>1||i.faceVertexUvs.length>1)&&(e.__uv2Array=new Float32Array(2*h))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*h),e.__skinWeightArray=new Float32Array(4*h)),e.__faceArray=new Uint16Array(3*l),e.__lineArray=new Uint16Array(2*s),e.numMorphTargets)for(e.__morphTargetsArrays=[],i=0,c=e.numMorphTargets;c>i;i++)e.__morphTargetsArrays.push(new Float32Array(3*h));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],i=0,c=e.numMorphNormals;c>i;i++)e.__morphNormalsArrays.push(new Float32Array(3*h));if(e.__webglFaceCount=3*l,e.__webglLineCount=2*s,r.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var f in r.attributes){var d,l=r.attributes[f],i={};for(d in l)i[d]=l[d];(!i.__webglInitialized||i.createUniqueBuffers)&&(i.__webglInitialized=!0,s=1,"v2"===i.type?s=2:"v3"===i.type?s=3:"v4"===i.type?s=4:"c"===i.type&&(s=3),i.size=s,i.array=new Float32Array(h*s),i.buffer=k.createBuffer(),i.buffer.belongsToAttribute=f,l.needsUpdate=!0,i.__original=l),e.__webglCustomAttributesList.push(i)}}e.__inittedArrays=!0}function n(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function o(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function a(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function s(e){var t,i,r;for(t in e.attributes)r="index"===t?k.ELEMENT_ARRAY_BUFFER:k.ARRAY_BUFFER,i=e.attributes[t],i.buffer=k.createBuffer(),k.bindBuffer(r,i.buffer),k.bufferData(r,i.array,k.STATIC_DRAW)}function h(e,t,i){var r=e.attributes,n=r.index,o=r.position,a=r.normal,s=r.uv,h=r.color,r=r.tangent;if(e.elementsNeedUpdate&&void 0!==n&&(k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,n.buffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,n.array,t)),e.verticesNeedUpdate&&void 0!==o&&(k.bindBuffer(k.ARRAY_BUFFER,o.buffer),k.bufferData(k.ARRAY_BUFFER,o.array,t)),e.normalsNeedUpdate&&void 0!==a&&(k.bindBuffer(k.ARRAY_BUFFER,a.buffer),k.bufferData(k.ARRAY_BUFFER,a.array,t)),e.uvsNeedUpdate&&void 0!==s&&(k.bindBuffer(k.ARRAY_BUFFER,s.buffer),k.bufferData(k.ARRAY_BUFFER,s.array,t)),e.colorsNeedUpdate&&void 0!==h&&(k.bindBuffer(k.ARRAY_BUFFER,h.buffer),k.bufferData(k.ARRAY_BUFFER,h.array,t)),e.tangentsNeedUpdate&&void 0!==r&&(k.bindBuffer(k.ARRAY_BUFFER,r.buffer),k.bufferData(k.ARRAY_BUFFER,r.array,t)),i)for(var l in e.attributes)delete e.attributes[l].array}function l(e){Rt[e]||(k.enableVertexAttribArray(e),Rt[e]=!0)}function c(){for(var e in Rt)Rt[e]&&(k.disableVertexAttribArray(e),Rt[e]=!1)}function p(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function u(e,t){return t[0]-e[0]}function f(e,t,i){if(e.length)for(var r=0,n=e.length;n>r;r++)et=$=null,Z=J=nt=rt=ct=lt=ot=-1,St=!0,e[r].render(t,i,Tt,yt),et=$=null,Z=J=nt=rt=ct=lt=ot=-1,St=!0}function d(e,t,i,r,n,o,a,s){var h,l,c,p;t?(l=e.length-1,p=t=-1):(l=0,t=e.length,p=1);for(var u=l;u!==t;u+=p)if(h=e[u],h.render){if(l=h.object,c=h.buffer,s)h=s;else{if(h=h[i],!h)continue;a&&Y.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Y.setDepthTest(h.depthTest),Y.setDepthWrite(h.depthWrite),b(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Y.setMaterialFaces(h),c instanceof THREE.BufferGeometry?Y.renderBufferDirect(r,n,o,h,c,l):Y.renderBuffer(r,n,o,h,c,l)}}function E(e,t,i,r,n,o,a){for(var s,h,l=0,c=e.length;c>l;l++)if(s=e[l],h=s.object,h.visible){if(a)s=a;else{if(s=s[t],!s)continue;o&&Y.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),Y.setDepthTest(s.depthTest),Y.setDepthWrite(s.depthWrite),b(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}Y.renderImmediateObject(i,r,n,s,h)}}function m(e,t,i){e.push({buffer:t,object:i,opaque:null,transparent:null})}function g(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function v(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function T(e,t){for(var i=e.length-1;i>=0;i--)e[i].object===t&&e.splice(i,1)}function y(e,t){for(var i=e.length-1;i>=0;i--)e[i]===t&&e.splice(i,1)
}function R(e,t,i,r,n){it=0,r.needsUpdate&&(r.program&&Xt(r),Y.initMaterial(r,t,i,n),r.needsUpdate=!1),r.morphTargets&&!n.__webglMorphTargetInfluences&&(n.__webglMorphTargetInfluences=new Float32Array(Y.maxMorphTargets));var o=!1,a=r.program,s=a.uniforms,h=r.uniforms;if(a!==$&&(k.useProgram(a),$=a,o=!0),r.id!==Z&&(Z=r.id,o=!0),(o||e!==et)&&(k.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==et&&(et=e)),r.skinning)if(Ut&&n.useVertexTexture){if(null!==s.boneTexture){var l=x();k.uniform1i(s.boneTexture,l),Y.setTexture(n.boneTexture,l)}}else null!==s.boneGlobalMatrices&&k.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.boneMatrices);if(o){if(i&&r.fog&&(h.fogColor.value=i.color,i instanceof THREE.Fog?(h.fogNear.value=i.near,h.fogFar.value=i.far):i instanceof THREE.FogExp2&&(h.fogDensity.value=i.density)),r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(St){for(var c,p,u,f,d=l=0,E=0,m=Mt,g=m.directional.colors,v=m.directional.positions,T=m.point.colors,y=m.point.positions,R=m.point.distances,H=m.spot.colors,b=m.spot.positions,S=m.spot.distances,M=m.spot.directions,A=m.spot.anglesCos,P=m.spot.exponents,F=m.hemi.skyColors,U=m.hemi.groundColors,z=m.hemi.positions,V=0,B=0,N=0,I=0,O=0,G=0,W=0,j=0,X=c=0,i=f=X=0,o=t.length;o>i;i++)c=t[i],c.onlyShadow||(p=c.color,u=c.intensity,f=c.distance,c instanceof THREE.AmbientLight?c.visible&&(Y.gammaInput?(l+=p.r*p.r,d+=p.g*p.g,E+=p.b*p.b):(l+=p.r,d+=p.g,E+=p.b)):c instanceof THREE.DirectionalLight?(O+=1,c.visible&&(bt.copy(c.matrixWorld.getPosition()),bt.sub(c.target.matrixWorld.getPosition()),bt.normalize(),0===bt.x&&0===bt.y&&0===bt.z||(c=3*V,v[c]=bt.x,v[c+1]=bt.y,v[c+2]=bt.z,Y.gammaInput?_(g,c,p,u*u):w(g,c,p,u),V+=1))):c instanceof THREE.PointLight?(G+=1,c.visible&&(X=3*B,Y.gammaInput?_(T,X,p,u*u):w(T,X,p,u),u=c.matrixWorld.getPosition(),y[X]=u.x,y[X+1]=u.y,y[X+2]=u.z,R[B]=f,B+=1)):c instanceof THREE.SpotLight?(W+=1,c.visible&&(X=3*N,Y.gammaInput?_(H,X,p,u*u):w(H,X,p,u),u=c.matrixWorld.getPosition(),b[X]=u.x,b[X+1]=u.y,b[X+2]=u.z,S[N]=f,bt.copy(u),bt.sub(c.target.matrixWorld.getPosition()),bt.normalize(),M[X]=bt.x,M[X+1]=bt.y,M[X+2]=bt.z,A[N]=Math.cos(c.angle),P[N]=c.exponent,N+=1)):c instanceof THREE.HemisphereLight&&(j+=1,c.visible&&(bt.copy(c.matrixWorld.getPosition()),bt.normalize(),0===bt.x&&0===bt.y&&0===bt.z||(f=3*I,z[f]=bt.x,z[f+1]=bt.y,z[f+2]=bt.z,p=c.color,c=c.groundColor,Y.gammaInput?(u*=u,_(F,f,p,u),_(U,f,c,u)):(w(F,f,p,u),w(U,f,c,u)),I+=1))));for(i=3*V,o=Math.max(g.length,3*O);o>i;i++)g[i]=0;for(i=3*B,o=Math.max(T.length,3*G);o>i;i++)T[i]=0;for(i=3*N,o=Math.max(H.length,3*W);o>i;i++)H[i]=0;for(i=3*I,o=Math.max(F.length,3*j);o>i;i++)F[i]=0;for(i=3*I,o=Math.max(U.length,3*j);o>i;i++)U[i]=0;m.directional.length=V,m.point.length=B,m.spot.length=N,m.hemi.length=I,m.ambient[0]=l,m.ambient[1]=d,m.ambient[2]=E,St=!1}i=Mt,h.ambientLightColor.value=i.ambient,h.directionalLightColor.value=i.directional.colors,h.directionalLightDirection.value=i.directional.positions,h.pointLightColor.value=i.point.colors,h.pointLightPosition.value=i.point.positions,h.pointLightDistance.value=i.point.distances,h.spotLightColor.value=i.spot.colors,h.spotLightPosition.value=i.spot.positions,h.spotLightDistance.value=i.spot.distances,h.spotLightDirection.value=i.spot.directions,h.spotLightAngleCos.value=i.spot.anglesCos,h.spotLightExponent.value=i.spot.exponents,h.hemisphereLightSkyColor.value=i.hemi.skyColors,h.hemisphereLightGroundColor.value=i.hemi.groundColors,h.hemisphereLightDirection.value=i.hemi.positions}if(r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial){h.opacity.value=r.opacity,Y.gammaInput?h.diffuse.value.copyGammaToLinear(r.color):h.diffuse.value=r.color,h.map.value=r.map,h.lightMap.value=r.lightMap,h.specularMap.value=r.specularMap,r.bumpMap&&(h.bumpMap.value=r.bumpMap,h.bumpScale.value=r.bumpScale),r.normalMap&&(h.normalMap.value=r.normalMap,h.normalScale.value.copy(r.normalScale));var q;r.map?q=r.map:r.specularMap?q=r.specularMap:r.normalMap?q=r.normalMap:r.bumpMap&&(q=r.bumpMap),void 0!==q&&(i=q.offset,q=q.repeat,h.offsetRepeat.value.set(i.x,i.y,q.x,q.y)),h.envMap.value=r.envMap,h.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=r.reflectivity,h.refractionRatio.value=r.refractionRatio,h.combine.value=r.combine,h.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping}if(r instanceof THREE.LineBasicMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity):r instanceof THREE.LineDashedMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity,h.dashSize.value=r.dashSize,h.totalSize.value=r.dashSize+r.gapSize,h.scale.value=r.scale):r instanceof THREE.ParticleBasicMaterial?(h.psColor.value=r.color,h.opacity.value=r.opacity,h.size.value=r.size,h.scale.value=D.height/2,h.map.value=r.map):r instanceof THREE.MeshPhongMaterial?(h.shininess.value=r.shininess,Y.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive),h.specular.value.copyGammaToLinear(r.specular)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive,h.specular.value=r.specular),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(Y.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(h.opacity.value=r.opacity),n.receiveShadow&&!r._shadowPass&&h.shadowMatrix)for(i=q=0,o=t.length;o>i;i++)l=t[i],l.castShadow&&(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade)&&(h.shadowMap.value[q]=l.shadowMap,h.shadowMapSize.value[q]=l.shadowMapSize,h.shadowMatrix.value[q]=l.shadowMatrix,h.shadowDarkness.value[q]=l.shadowDarkness,h.shadowBias.value[q]=l.shadowBias,q++);for(t=r.uniformsList,h=0,q=t.length;q>h;h++)if(o=a.uniforms[t[h][1]])if(i=t[h][0],d=i.type,l=i.value,"i"===d)k.uniform1i(o,l);else if("f"===d)k.uniform1f(o,l);else if("v2"===d)k.uniform2f(o,l.x,l.y);else if("v3"===d)k.uniform3f(o,l.x,l.y,l.z);else if("v4"===d)k.uniform4f(o,l.x,l.y,l.z,l.w);else if("c"===d)k.uniform3f(o,l.r,l.g,l.b);else if("iv1"===d)k.uniform1iv(o,l);else if("iv"===d)k.uniform3iv(o,l);else if("fv1"===d)k.uniform1fv(o,l);else if("fv"===d)k.uniform3fv(o,l);else if("v2v"===d){for(void 0===i._array&&(i._array=new Float32Array(2*l.length)),d=0,E=l.length;E>d;d++)m=2*d,i._array[m]=l[d].x,i._array[m+1]=l[d].y;k.uniform2fv(o,i._array)}else if("v3v"===d){for(void 0===i._array&&(i._array=new Float32Array(3*l.length)),d=0,E=l.length;E>d;d++)m=3*d,i._array[m]=l[d].x,i._array[m+1]=l[d].y,i._array[m+2]=l[d].z;k.uniform3fv(o,i._array)}else if("v4v"===d){for(void 0===i._array&&(i._array=new Float32Array(4*l.length)),d=0,E=l.length;E>d;d++)m=4*d,i._array[m]=l[d].x,i._array[m+1]=l[d].y,i._array[m+2]=l[d].z,i._array[m+3]=l[d].w;k.uniform4fv(o,i._array)}else if("m4"===d)void 0===i._array&&(i._array=new Float32Array(16)),l.flattenToArray(i._array),k.uniformMatrix4fv(o,!1,i._array);else if("m4v"===d){for(void 0===i._array&&(i._array=new Float32Array(16*l.length)),d=0,E=l.length;E>d;d++)l[d].flattenToArrayOffset(i._array,16*d);k.uniformMatrix4fv(o,!1,i._array)}else if("t"===d){if(m=l,l=x(),k.uniform1i(o,l),m)if(m.image instanceof Array&&6===m.image.length){if(i=m,o=l,6===i.image.length)if(i.needsUpdate){for(i.image.__webglTextureCube||(i.image.__webglTextureCube=k.createTexture(),Y.info.memory.textures++),k.activeTexture(k.TEXTURE0+o),k.bindTexture(k.TEXTURE_CUBE_MAP,i.image.__webglTextureCube),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,i.flipY),o=i instanceof THREE.CompressedTexture,l=[],d=0;6>d;d++)Y.autoScaleCubemaps&&!o?(E=l,m=d,g=i.image[d],T=Lt,T>=g.width&&T>=g.height||(y=Math.max(g.width,g.height),v=Math.floor(g.width*T/y),T=Math.floor(g.height*T/y),y=document.createElement("canvas"),y.width=v,y.height=T,y.getContext("2d").drawImage(g,0,0,g.width,g.height,0,0,v,T),g=y),E[m]=g):l[d]=i.image[d];for(d=l[0],E=0===(d.width&d.width-1)&&0===(d.height&d.height-1),m=L(i.format),g=L(i.type),C(k.TEXTURE_CUBE_MAP,i,E),d=0;6>d;d++)if(o)for(T=l[d].mipmaps,y=0,R=T.length;R>y;y++)v=T[y],k.compressedTexImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+d,y,m,v.width,v.height,0,v.data);else k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,m,m,g,l[d]);i.generateMipmaps&&E&&k.generateMipmap(k.TEXTURE_CUBE_MAP),i.needsUpdate=!1,i.onUpdate&&i.onUpdate()}else k.activeTexture(k.TEXTURE0+o),k.bindTexture(k.TEXTURE_CUBE_MAP,i.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(i=m,k.activeTexture(k.TEXTURE0+l),k.bindTexture(k.TEXTURE_CUBE_MAP,i.__webglTexture)):Y.setTexture(m,l)}else if("tv"===d){for(void 0===i._array&&(i._array=[]),d=0,E=i.value.length;E>d;d++)i._array[d]=x();for(k.uniform1iv(o,i._array),d=0,E=i.value.length;E>d;d++)m=i.value[d],l=i._array[d],m&&Y.setTexture(m,l)}(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==s.cameraPosition&&(t=e.matrixWorld.getPosition(),k.uniform3f(s.cameraPosition,t.x,t.y,t.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==s.viewMatrix&&k.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return k.uniformMatrix4fv(s.modelViewMatrix,!1,n._modelViewMatrix.elements),s.normalMatrix&&k.uniformMatrix3fv(s.normalMatrix,!1,n._normalMatrix.elements),null!==s.modelMatrix&&k.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function x(){var e=it;return e>=At&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+At),it+=1,e}function H(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function _(e,t,i,r){e[t]=i.r*i.r*r,e[t+1]=i.g*i.g*r,e[t+2]=i.b*i.b*r}function w(e,t,i,r){e[t]=i.r*r,e[t+1]=i.g*r,e[t+2]=i.b*r}function b(e,t,i){pt!==e&&(e?k.enable(k.POLYGON_OFFSET_FILL):k.disable(k.POLYGON_OFFSET_FILL),pt=e),!e||ut===t&&ft===i||(k.polygonOffset(t,i),ut=t,ft=i)}function S(e){for(var e=e.split("\n"),t=0,i=e.length;i>t;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function M(e,t){var i;return"fragment"===e?i=k.createShader(k.FRAGMENT_SHADER):"vertex"===e&&(i=k.createShader(k.VERTEX_SHADER)),k.shaderSource(i,t),k.compileShader(i),k.getShaderParameter(i,k.COMPILE_STATUS)?i:(console.error(k.getShaderInfoLog(i)),console.error(S(t)),null)}function C(e,t,i){i?(k.texParameteri(e,k.TEXTURE_WRAP_S,L(t.wrapS)),k.texParameteri(e,k.TEXTURE_WRAP_T,L(t.wrapT)),k.texParameteri(e,k.TEXTURE_MAG_FILTER,L(t.magFilter)),k.texParameteri(e,k.TEXTURE_MIN_FILTER,L(t.minFilter))):(k.texParameteri(e,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE),k.texParameteri(e,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE),k.texParameteri(e,k.TEXTURE_MAG_FILTER,P(t.magFilter)),k.texParameteri(e,k.TEXTURE_MIN_FILTER,P(t.minFilter))),j&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(k.texParameterf(e,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Dt)),t.__oldAnisotropy=t.anisotropy)}function A(e,t){k.bindRenderbuffer(k.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_COMPONENT16,t.width,t.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_STENCIL,t.width,t.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,e)):k.renderbufferStorage(k.RENDERBUFFER,k.RGBA4,t.width,t.height)}function P(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?k.NEAREST:k.LINEAR}function L(e){if(e===THREE.RepeatWrapping)return k.REPEAT;if(e===THREE.ClampToEdgeWrapping)return k.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return k.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return k.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return k.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return k.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return k.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return k.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return k.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return k.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return k.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return k.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return k.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return k.BYTE;if(e===THREE.ShortType)return k.SHORT;if(e===THREE.UnsignedShortType)return k.UNSIGNED_SHORT;if(e===THREE.IntType)return k.INT;if(e===THREE.UnsignedIntType)return k.UNSIGNED_INT;if(e===THREE.FloatType)return k.FLOAT;if(e===THREE.AlphaFormat)return k.ALPHA;if(e===THREE.RGBFormat)return k.RGB;if(e===THREE.RGBAFormat)return k.RGBA;if(e===THREE.LuminanceFormat)return k.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return k.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return k.FUNC_ADD;if(e===THREE.SubtractEquation)return k.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return k.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return k.ZERO;if(e===THREE.OneFactor)return k.ONE;if(e===THREE.SrcColorFactor)return k.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return k.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return k.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return k.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return k.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return k.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return k.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return k.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return k.SRC_ALPHA_SATURATE;if(void 0!==X){if(e===THREE.RGB_S3TC_DXT1_Format)return X.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return X.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return X.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return X.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var e=e||{},D=void 0!==e.canvas?e.canvas:document.createElement("canvas"),F=void 0!==e.precision?e.precision:"highp",U=void 0!==e.alpha?e.alpha:!0,z=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,V=void 0!==e.antialias?e.antialias:!1,B=void 0!==e.stencil?e.stencil:!0,N=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,I=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),O=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=D,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var k,G,W,j,X,Y=this,q=[],K=0,$=null,Q=null,Z=-1,J=null,et=null,tt=0,it=0,rt=-1,nt=-1,ot=-1,at=-1,st=-1,ht=-1,lt=-1,ct=-1,pt=null,ut=null,ft=null,dt=null,Et=0,mt=0,gt=0,vt=0,Tt=0,yt=0,Rt={},xt=new THREE.Frustum,Ht=new THREE.Matrix4,_t=new THREE.Matrix4,wt=new THREE.Vector3,bt=new THREE.Vector3,St=!0,Mt={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{if(!(k=D.getContext("experimental-webgl",{alpha:U,premultipliedAlpha:z,antialias:V,stencil:B,preserveDrawingBuffer:N})))throw"Error creating WebGL context."}catch(Ct){console.error(Ct)}G=k.getExtension("OES_texture_float"),W=k.getExtension("OES_standard_derivatives"),j=k.getExtension("EXT_texture_filter_anisotropic")||k.getExtension("MOZ_EXT_texture_filter_anisotropic")||k.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),X=k.getExtension("WEBGL_compressed_texture_s3tc")||k.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||k.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),G||console.log("THREE.WebGLRenderer: Float textures not supported."),W||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),j||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),X||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),k.clearColor(0,0,0,1),k.clearDepth(1),k.clearStencil(0),k.enable(k.DEPTH_TEST),k.depthFunc(k.LEQUAL),k.frontFace(k.CCW),k.cullFace(k.BACK),k.enable(k.CULL_FACE),k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA),k.clearColor(I.r,I.g,I.b,O),this.context=k;var At=k.getParameter(k.MAX_TEXTURE_IMAGE_UNITS),Pt=k.getParameter(k.MAX_VERTEX_TEXTURE_IMAGE_UNITS);k.getParameter(k.MAX_TEXTURE_SIZE);var Lt=k.getParameter(k.MAX_CUBE_MAP_TEXTURE_SIZE),Dt=j?k.getParameter(j.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Ft=Pt>0,Ut=Ft&&G;X&&k.getParameter(k.COMPRESSED_TEXTURE_FORMATS);var zt=k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.HIGH_FLOAT),Vt=k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.MEDIUM_FLOAT);k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.LOW_FLOAT);var Bt=k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.HIGH_FLOAT),Nt=k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.MEDIUM_FLOAT);k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.LOW_FLOAT),k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.HIGH_INT),k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.MEDIUM_INT),k.getShaderPrecisionFormat(k.VERTEX_SHADER,k.LOW_INT),k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.HIGH_INT),k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.MEDIUM_INT),k.getShaderPrecisionFormat(k.FRAGMENT_SHADER,k.LOW_INT);var It=zt.precision>0&&Bt.precision>0,Ot=Vt.precision>0&&Nt.precision>0;"highp"===F&&!It&&(Ot?(F="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(F="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"===F&&!Ot&&(F="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return k},this.supportsVertexTextures=function(){return Ft},this.supportsFloatTextures=function(){return G},this.supportsStandardDerivatives=function(){return W},this.supportsCompressedTextureS3TC=function(){return X},this.getMaxAnisotropy=function(){return Dt},this.getPrecision=function(){return F},this.setSize=function(e,t){D.width=e*this.devicePixelRatio,D.height=t*this.devicePixelRatio,D.style.width=e+"px",D.style.height=t+"px",this.setViewport(0,0,D.width,D.height)},this.setViewport=function(e,t,i,r){Et=void 0!==e?e:0,mt=void 0!==t?t:0,gt=void 0!==i?i:D.width,vt=void 0!==r?r:D.height,k.viewport(Et,mt,gt,vt)},this.setScissor=function(e,t,i,r){k.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?k.enable(k.SCISSOR_TEST):k.disable(k.SCISSOR_TEST)},this.setClearColorHex=function(e,t){I.setHex(e),O=t,k.clearColor(I.r,I.g,I.b,O)},this.setClearColor=function(e,t){I.copy(e),O=t,k.clearColor(I.r,I.g,I.b,O)},this.getClearColor=function(){return I},this.getClearAlpha=function(){return O},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=k.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=k.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=k.STENCIL_BUFFER_BIT),k.clear(r)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){$=null,Z=J=ct=lt=ot=-1,St=!0,nt=rt=-1,this.shadowMapPlugin.update(e,t)};var kt=function(e){if(e=e.target,e.removeEventListener("dispose",kt),e.__webglInit=void 0,void 0!==e.__webglVertexBuffer&&k.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&k.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&k.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&k.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&k.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&k.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&k.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&k.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&k.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&k.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&k.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.geometryGroups)for(var i in e.geometryGroups){var r=e.geometryGroups[i];if(void 0!==r.numMorphTargets)for(var n=0,o=r.numMorphTargets;o>n;n++)k.deleteBuffer(r.__webglMorphTargetsBuffers[n]);if(void 0!==r.numMorphNormals)for(n=0,o=r.numMorphNormals;o>n;n++)k.deleteBuffer(r.__webglMorphNormalsBuffers[n]);t(r)}t(e),Y.info.memory.geometries--},Gt=function(e){e=e.target,e.removeEventListener("dispose",Gt),e.image&&e.image.__webglTextureCube?k.deleteTexture(e.image.__webglTextureCube):e.__webglInit&&(e.__webglInit=!1,k.deleteTexture(e.__webglTexture)),Y.info.memory.textures--},Wt=function(e){if(e=e.target,e.removeEventListener("dispose",Wt),e&&e.__webglTexture)if(k.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)k.deleteFramebuffer(e.__webglFramebuffer[t]),k.deleteRenderbuffer(e.__webglRenderbuffer[t]);else k.deleteFramebuffer(e.__webglFramebuffer),k.deleteRenderbuffer(e.__webglRenderbuffer);Y.info.memory.textures--},jt=function(e){e=e.target,e.removeEventListener("dispose",jt),Xt(e)},Xt=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var i,r,n=!1,e=0;for(i=q.length;i>e;e++)if(r=q[e],r.program===t){r.usedTimes--,0===r.usedTimes&&(n=!0);break}if(!0===n){for(n=[],e=0,i=q.length;i>e;e++)r=q[e],r.program!==t&&n.push(r);q=n,k.deleteProgram(t),Y.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,i){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=k.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=k.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=k.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=k.createBuffer()),e.hasPositions&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,e.positionArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(t.attributes.position),k.vertexAttribPointer(t.attributes.position,3,k.FLOAT,!1,0,0)),e.hasNormals){if(k.bindBuffer(k.ARRAY_BUFFER,e.__webglNormalBuffer),i.shading===THREE.FlatShading){var r,n,o,a,s,h,l,c,p,u,f,d=3*e.count;for(f=0;d>f;f+=9)u=e.normalArray,r=u[f],n=u[f+1],o=u[f+2],a=u[f+3],h=u[f+4],c=u[f+5],s=u[f+6],l=u[f+7],p=u[f+8],r=(r+a+s)/3,n=(n+h+l)/3,o=(o+c+p)/3,u[f]=r,u[f+1]=n,u[f+2]=o,u[f+3]=r,u[f+4]=n,u[f+5]=o,u[f+6]=r,u[f+7]=n,u[f+8]=o}k.bufferData(k.ARRAY_BUFFER,e.normalArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(t.attributes.normal),k.vertexAttribPointer(t.attributes.normal,3,k.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglUvBuffer),k.bufferData(k.ARRAY_BUFFER,e.uvArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(t.attributes.uv),k.vertexAttribPointer(t.attributes.uv,2,k.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(k.bindBuffer(k.ARRAY_BUFFER,e.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,e.colorArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(t.attributes.color),k.vertexAttribPointer(t.attributes.color,3,k.FLOAT,!1,0,0)),k.drawArrays(k.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,o){if(!1!==r.visible)if(i=R(e,t,i,r,o),e=i.attributes,t=!1,r=16777215*n.id+2*i.id+(r.wireframe?1:0),r!==J&&(J=r,t=!0),t&&c(),o instanceof THREE.Mesh)if(o=n.attributes.index){r=n.offsets,r.length>1&&(t=!0);for(var i=0,a=r.length;a>i;i++){var s=r[i].index;if(t){var h=n.attributes.position,p=h.itemSize;if(k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(e.position),k.vertexAttribPointer(e.position,p,k.FLOAT,!1,0,4*s*p),p=n.attributes.normal,e.normal>=0&&p){var u=p.itemSize;k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.normal),k.vertexAttribPointer(e.normal,u,k.FLOAT,!1,0,4*s*u)}p=n.attributes.uv,e.uv>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.uv),k.vertexAttribPointer(e.uv,u,k.FLOAT,!1,0,4*s*u)),p=n.attributes.color,e.color>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.color),k.vertexAttribPointer(e.color,u,k.FLOAT,!1,0,4*s*u)),p=n.attributes.tangent,e.tangent>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.tangent),k.vertexAttribPointer(e.tangent,u,k.FLOAT,!1,0,4*s*u)),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,o.buffer)}k.drawElements(k.TRIANGLES,r[i].count,k.UNSIGNED_SHORT,2*r[i].start),Y.info.render.calls++,Y.info.render.vertices+=r[i].count,Y.info.render.faces+=r[i].count/3}}else t&&(h=n.attributes.position,p=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(e.position),k.vertexAttribPointer(e.position,p,k.FLOAT,!1,0,0),p=n.attributes.normal,e.normal>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.normal),k.vertexAttribPointer(e.normal,u,k.FLOAT,!1,0,0)),p=n.attributes.uv,e.uv>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.uv),k.vertexAttribPointer(e.uv,u,k.FLOAT,!1,0,0)),p=n.attributes.color,e.color>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.color),k.vertexAttribPointer(e.color,u,k.FLOAT,!1,0,0)),p=n.attributes.tangent,e.tangent>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.tangent),k.vertexAttribPointer(e.tangent,u,k.FLOAT,!1,0,0))),k.drawArrays(k.TRIANGLES,0,h.numItems/3),Y.info.render.calls++,Y.info.render.vertices+=h.numItems/3,Y.info.render.faces+=h.numItems/3/3;else o instanceof THREE.ParticleSystem?t&&(h=n.attributes.position,p=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(e.position),k.vertexAttribPointer(e.position,p,k.FLOAT,!1,0,0),p=n.attributes.color,e.color>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.color),k.vertexAttribPointer(e.color,u,k.FLOAT,!1,0,0)),k.drawArrays(k.POINTS,0,h.numItems/3),Y.info.render.calls++,Y.info.render.points+=h.numItems/3):o instanceof THREE.Line&&t&&(h=n.attributes.position,p=h.itemSize,k.bindBuffer(k.ARRAY_BUFFER,h.buffer),l(e.position),k.vertexAttribPointer(e.position,p,k.FLOAT,!1,0,0),p=n.attributes.color,e.color>=0&&p&&(u=p.itemSize,k.bindBuffer(k.ARRAY_BUFFER,p.buffer),l(e.color),k.vertexAttribPointer(e.color,u,k.FLOAT,!1,0,0)),k.drawArrays(k.LINE_STRIP,0,h.numItems/3),Y.info.render.calls++,Y.info.render.points+=h.numItems)},this.renderBuffer=function(e,t,i,r,n,o){if(!1!==r.visible){var a,s,i=R(e,t,i,r,o),t=i.attributes,e=!1,i=16777215*n.id+2*i.id+(r.wireframe?1:0);if(i!==J&&(J=i,e=!0),e&&c(),!r.morphTargets&&t.position>=0)e&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglVertexBuffer),l(t.position),k.vertexAttribPointer(t.position,3,k.FLOAT,!1,0,0));else if(o.morphTargetBase){if(i=r.program.attributes,-1!==o.morphTargetBase&&i.position>=0?(k.bindBuffer(k.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),l(i.position),k.vertexAttribPointer(i.position,3,k.FLOAT,!1,0,0)):i.position>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglVertexBuffer),l(i.position),k.vertexAttribPointer(i.position,3,k.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){var h=0;for(s=o.morphTargetForcedOrder,a=o.morphTargetInfluences;r.numSupportedMorphTargets>h&&s.length>h;)i["morphTarget"+h]>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[s[h]]),l(i["morphTarget"+h]),k.vertexAttribPointer(i["morphTarget"+h],3,k.FLOAT,!1,0,0)),i["morphNormal"+h]>=0&&r.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[s[h]]),l(i["morphNormal"+h]),k.vertexAttribPointer(i["morphNormal"+h],3,k.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=a[s[h]],h++}else{s=[],a=o.morphTargetInfluences;var p,f=a.length;for(p=0;f>p;p++)h=a[p],h>0&&s.push([h,p]);for(s.length>r.numSupportedMorphTargets?(s.sort(u),s.length=r.numSupportedMorphTargets):s.length>r.numSupportedMorphNormals?s.sort(u):0===s.length&&s.push([0,0]),h=0;r.numSupportedMorphTargets>h;)s[h]?(p=s[h][1],i["morphTarget"+h]>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[p]),l(i["morphTarget"+h]),k.vertexAttribPointer(i["morphTarget"+h],3,k.FLOAT,!1,0,0)),i["morphNormal"+h]>=0&&r.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[p]),l(i["morphNormal"+h]),k.vertexAttribPointer(i["morphNormal"+h],3,k.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[h]=a[p]):o.__webglMorphTargetInfluences[h]=0,h++}null!==r.program.uniforms.morphTargetInfluences&&k.uniform1fv(r.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(e){if(n.__webglCustomAttributesList)for(a=0,s=n.__webglCustomAttributesList.length;s>a;a++)i=n.__webglCustomAttributesList[a],t[i.buffer.belongsToAttribute]>=0&&(k.bindBuffer(k.ARRAY_BUFFER,i.buffer),l(t[i.buffer.belongsToAttribute]),k.vertexAttribPointer(t[i.buffer.belongsToAttribute],i.size,k.FLOAT,!1,0,0));t.color>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglColorBuffer),l(t.color),k.vertexAttribPointer(t.color,3,k.FLOAT,!1,0,0)),t.normal>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglNormalBuffer),l(t.normal),k.vertexAttribPointer(t.normal,3,k.FLOAT,!1,0,0)),t.tangent>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglTangentBuffer),l(t.tangent),k.vertexAttribPointer(t.tangent,4,k.FLOAT,!1,0,0)),t.uv>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglUVBuffer),l(t.uv),k.vertexAttribPointer(t.uv,2,k.FLOAT,!1,0,0)),t.uv2>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglUV2Buffer),l(t.uv2),k.vertexAttribPointer(t.uv2,2,k.FLOAT,!1,0,0)),r.skinning&&t.skinIndex>=0&&t.skinWeight>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),l(t.skinIndex),k.vertexAttribPointer(t.skinIndex,4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),l(t.skinWeight),k.vertexAttribPointer(t.skinWeight,4,k.FLOAT,!1,0,0)),t.lineDistance>=0&&(k.bindBuffer(k.ARRAY_BUFFER,n.__webglLineDistanceBuffer),l(t.lineDistance),k.vertexAttribPointer(t.lineDistance,1,k.FLOAT,!1,0,0))}o instanceof THREE.Mesh?(r.wireframe?(r=r.wireframeLinewidth,r!==dt&&(k.lineWidth(r),dt=r),e&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),k.drawElements(k.LINES,n.__webglLineCount,k.UNSIGNED_SHORT,0)):(e&&k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),k.drawElements(k.TRIANGLES,n.__webglFaceCount,k.UNSIGNED_SHORT,0)),Y.info.render.calls++,Y.info.render.vertices+=n.__webglFaceCount,Y.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(o=o.type===THREE.LineStrip?k.LINE_STRIP:k.LINES,r=r.linewidth,r!==dt&&(k.lineWidth(r),dt=r),k.drawArrays(o,0,n.__webglLineCount),Y.info.render.calls++):o instanceof THREE.ParticleSystem?(k.drawArrays(k.POINTS,0,n.__webglParticleCount),Y.info.render.calls++,Y.info.render.points+=n.__webglParticleCount):o instanceof THREE.Ribbon&&(k.drawArrays(k.TRIANGLE_STRIP,0,n.__webglVertexCount),Y.info.render.calls++)}},this.render=function(e,t,i,r){if(!1==t instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var n,o,a,s,h=e.__lights,l=e.fog;for(Z=-1,St=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Ht.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),xt.setFromMatrix(Ht),this.autoUpdateObjects&&this.initWebGLObjects(e),f(this.renderPluginsPre,e,t),Y.info.render.calls=0,Y.info.render.vertices=0,Y.info.render.faces=0,Y.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),s=e.__webglObjects,r=0,n=s.length;n>r;r++)if(o=s[r],a=o.object,o.render=!1,a.visible&&(!(a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem)||!a.frustumCulled||xt.intersectsObject(a))){H(a,t);
var c=o,u=c.buffer,m=void 0,g=m=void 0,g=c.object.material;g instanceof THREE.MeshFaceMaterial?(m=u.materialIndex,m=g.materials[m],m.transparent?(c.transparent=m,c.opaque=null):(c.opaque=m,c.transparent=null)):(m=g)&&(m.transparent?(c.transparent=m,c.opaque=null):(c.opaque=m,c.transparent=null)),o.render=!0,!0===this.sortObjects&&(null!==a.renderDepth?o.z=a.renderDepth:(wt.copy(a.matrixWorld.getPosition()),wt.applyProjection(Ht),o.z=wt.z),o.id=a.id)}for(this.sortObjects&&s.sort(p),s=e.__webglObjectsImmediate,r=0,n=s.length;n>r;r++)o=s[r],a=o.object,a.visible&&(H(a,t),a=o.object.material,a.transparent?(o.transparent=a,o.opaque=null):(o.opaque=a,o.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),b(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),d(e.__webglObjects,!1,"",t,h,l,!0,r),E(e.__webglObjectsImmediate,"",t,h,l,!1,r)):(r=null,this.setBlending(THREE.NoBlending),d(e.__webglObjects,!0,"opaque",t,h,l,!1,r),E(e.__webglObjectsImmediate,"opaque",t,h,l,!1,r),d(e.__webglObjects,!1,"transparent",t,h,l,!0,r),E(e.__webglObjectsImmediate,"transparent",t,h,l,!0,r)),f(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(i instanceof THREE.WebGLRenderTargetCube?(k.bindTexture(k.TEXTURE_CUBE_MAP,i.__webglTexture),k.generateMipmap(k.TEXTURE_CUBE_MAP),k.bindTexture(k.TEXTURE_CUBE_MAP,null)):(k.bindTexture(k.TEXTURE_2D,i.__webglTexture),k.generateMipmap(k.TEXTURE_2D),k.bindTexture(k.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(e,t,i,r,n){var o=R(e,t,i,r,n);J=-1,Y.setMaterialFaces(r),n.immediateRenderCallback?n.immediateRenderCallback(o,k,xt):n.render(function(e){Y.renderBufferImmediate(e,o,r)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;){var t=e.__objectsAdded[0],l=e,c=void 0,p=void 0,f=void 0,d=void 0;if(!t.__webglInit)if(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3,void 0!==t.geometry&&void 0===t.geometry.__webglInit&&(t.geometry.__webglInit=!0,t.geometry.addEventListener("dispose",kt)),t instanceof THREE.Mesh)if(p=t.geometry,f=t.material,p instanceof THREE.Geometry){if(void 0===p.geometryGroups){var E=p,R=void 0,x=void 0,H=void 0,_=void 0,w=void 0,b=void 0,S={},M=E.morphTargets.length,C=E.morphNormals.length,A=f instanceof THREE.MeshFaceMaterial;for(E.geometryGroups={},R=0,x=E.faces.length;x>R;R++)H=E.faces[R],_=A?H.materialIndex:0,void 0===S[_]&&(S[_]={hash:_,counter:0}),b=S[_].hash+"_"+S[_].counter,void 0===E.geometryGroups[b]&&(E.geometryGroups[b]={faces3:[],faces4:[],materialIndex:_,vertices:0,numMorphTargets:M,numMorphNormals:C}),w=H instanceof THREE.Face3?3:4,E.geometryGroups[b].vertices+w>65535&&(S[_].counter+=1,b=S[_].hash+"_"+S[_].counter,void 0===E.geometryGroups[b]&&(E.geometryGroups[b]={faces3:[],faces4:[],materialIndex:_,vertices:0,numMorphTargets:M,numMorphNormals:C})),H instanceof THREE.Face3?E.geometryGroups[b].faces3.push(R):E.geometryGroups[b].faces4.push(R),E.geometryGroups[b].vertices+=w;E.geometryGroupsList=[];var P=void 0;for(P in E.geometryGroups)E.geometryGroups[P].id=tt++,E.geometryGroupsList.push(E.geometryGroups[P])}for(c in p.geometryGroups)if(d=p.geometryGroups[c],!d.__webglVertexBuffer){var L=d;L.__webglVertexBuffer=k.createBuffer(),L.__webglNormalBuffer=k.createBuffer(),L.__webglTangentBuffer=k.createBuffer(),L.__webglColorBuffer=k.createBuffer(),L.__webglUVBuffer=k.createBuffer(),L.__webglUV2Buffer=k.createBuffer(),L.__webglSkinIndicesBuffer=k.createBuffer(),L.__webglSkinWeightsBuffer=k.createBuffer(),L.__webglFaceBuffer=k.createBuffer(),L.__webglLineBuffer=k.createBuffer();var D=void 0,F=void 0;if(L.numMorphTargets)for(L.__webglMorphTargetsBuffers=[],D=0,F=L.numMorphTargets;F>D;D++)L.__webglMorphTargetsBuffers.push(k.createBuffer());if(L.numMorphNormals)for(L.__webglMorphNormalsBuffers=[],D=0,F=L.numMorphNormals;F>D;D++)L.__webglMorphNormalsBuffers.push(k.createBuffer());Y.info.memory.geometries++,r(d,t),p.verticesNeedUpdate=!0,p.morphTargetsNeedUpdate=!0,p.elementsNeedUpdate=!0,p.uvsNeedUpdate=!0,p.normalsNeedUpdate=!0,p.tangentsNeedUpdate=!0,p.colorsNeedUpdate=!0}}else p instanceof THREE.BufferGeometry&&s(p);else if(t instanceof THREE.Ribbon){if(p=t.geometry,!p.__webglVertexBuffer){var U=p;U.__webglVertexBuffer=k.createBuffer(),U.__webglColorBuffer=k.createBuffer(),U.__webglNormalBuffer=k.createBuffer(),Y.info.memory.geometries++;var z=p,V=t,B=z.vertices.length;z.__vertexArray=new Float32Array(3*B),z.__colorArray=new Float32Array(3*B),z.__normalArray=new Float32Array(3*B),z.__webglVertexCount=B,i(z,V),p.verticesNeedUpdate=!0,p.colorsNeedUpdate=!0,p.normalsNeedUpdate=!0}}else if(t instanceof THREE.Line){if(p=t.geometry,!p.__webglVertexBuffer)if(p instanceof THREE.Geometry){var N=p;N.__webglVertexBuffer=k.createBuffer(),N.__webglColorBuffer=k.createBuffer(),N.__webglLineDistanceBuffer=k.createBuffer(),Y.info.memory.geometries++;var I=p,O=t,G=I.vertices.length;I.__vertexArray=new Float32Array(3*G),I.__colorArray=new Float32Array(3*G),I.__lineDistanceArray=new Float32Array(1*G),I.__webglLineCount=G,i(I,O),p.verticesNeedUpdate=!0,p.colorsNeedUpdate=!0,p.lineDistancesNeedUpdate=!0}else p instanceof THREE.BufferGeometry&&s(p)}else if(t instanceof THREE.ParticleSystem&&(p=t.geometry,!p.__webglVertexBuffer))if(p instanceof THREE.Geometry){var W=p;W.__webglVertexBuffer=k.createBuffer(),W.__webglColorBuffer=k.createBuffer(),Y.info.memory.geometries++;var j=p,X=t,q=j.vertices.length;j.__vertexArray=new Float32Array(3*q),j.__colorArray=new Float32Array(3*q),j.__sortArray=[],j.__webglParticleCount=q,i(j,X),p.verticesNeedUpdate=!0,p.colorsNeedUpdate=!0}else p instanceof THREE.BufferGeometry&&s(p);if(!t.__webglActive){if(t instanceof THREE.Mesh){if(p=t.geometry,p instanceof THREE.BufferGeometry)m(l.__webglObjects,p,t);else if(p instanceof THREE.Geometry)for(c in p.geometryGroups)d=p.geometryGroups[c],m(l.__webglObjects,d,t)}else t instanceof THREE.Ribbon||t instanceof THREE.Line||t instanceof THREE.ParticleSystem?(p=t.geometry,m(l.__webglObjects,p,t)):t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback?l.__webglObjectsImmediate.push({object:t,opaque:null,transparent:null}):t instanceof THREE.Sprite?l.__webglSprites.push(t):t instanceof THREE.LensFlare&&l.__webglFlares.push(t);t.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var K=e.__objectsRemoved[0],$=e;K instanceof THREE.Mesh||K instanceof THREE.ParticleSystem||K instanceof THREE.Ribbon||K instanceof THREE.Line?T($.__webglObjects,K):K instanceof THREE.Sprite?y($.__webglSprites,K):K instanceof THREE.LensFlare?y($.__webglFlares,K):(K instanceof THREE.ImmediateRenderObject||K.immediateRenderCallback)&&T($.__webglObjectsImmediate,K),K.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var Q=0,Z=e.__webglObjects.length;Z>Q;Q++){var J=e.__webglObjects[Q].object,et=J.geometry,it=void 0,rt=void 0,nt=void 0;if(J instanceof THREE.Mesh)if(et instanceof THREE.BufferGeometry)(et.verticesNeedUpdate||et.elementsNeedUpdate||et.uvsNeedUpdate||et.normalsNeedUpdate||et.colorsNeedUpdate||et.tangentsNeedUpdate)&&h(et,k.DYNAMIC_DRAW,!et.dynamic),et.verticesNeedUpdate=!1,et.elementsNeedUpdate=!1,et.uvsNeedUpdate=!1,et.normalsNeedUpdate=!1,et.colorsNeedUpdate=!1,et.tangentsNeedUpdate=!1;else{for(var ot=0,at=et.geometryGroupsList.length;at>ot;ot++)if(it=et.geometryGroupsList[ot],nt=n(J,it),et.buffersNeedUpdate&&r(it,J),rt=nt.attributes&&g(nt),et.verticesNeedUpdate||et.morphTargetsNeedUpdate||et.elementsNeedUpdate||et.uvsNeedUpdate||et.normalsNeedUpdate||et.colorsNeedUpdate||et.tangentsNeedUpdate||rt){var st=it,ht=J,lt=k.DYNAMIC_DRAW,ct=!et.dynamic,pt=nt;if(st.__inittedArrays){var ut=o(pt),ft=pt.vertexColors?pt.vertexColors:!1,dt=a(pt),Et=ut===THREE.SmoothShading,mt=void 0,gt=void 0,vt=void 0,Tt=void 0,yt=void 0,Rt=void 0,xt=void 0,bt=void 0,St=void 0,Mt=void 0,Ct=void 0,At=void 0,Pt=void 0,Lt=void 0,Dt=void 0,Ft=void 0,Ut=void 0,zt=void 0,Vt=void 0,Bt=void 0,Nt=void 0,It=void 0,Ot=void 0,Gt=void 0,Wt=void 0,jt=void 0,Xt=void 0,Yt=void 0,qt=void 0,Kt=void 0,$t=void 0,Qt=void 0,Zt=void 0,Jt=void 0,ei=void 0,ti=void 0,ii=void 0,ri=void 0,ni=void 0,oi=void 0,ai=void 0,si=void 0,hi=void 0,li=void 0,ci=void 0,pi=void 0,ui=0,fi=0,di=0,Ei=0,mi=0,gi=0,vi=0,Ti=0,yi=0,Ri=0,xi=0,Hi=0,_i=void 0,wi=st.__vertexArray,bi=st.__uvArray,Si=st.__uv2Array,Mi=st.__normalArray,Ci=st.__tangentArray,Ai=st.__colorArray,Pi=st.__skinIndexArray,Li=st.__skinWeightArray,Di=st.__morphTargetsArrays,Fi=st.__morphNormalsArrays,Ui=st.__webglCustomAttributesList,zi=void 0,Vi=st.__faceArray,Bi=st.__lineArray,Ni=ht.geometry,Ii=Ni.elementsNeedUpdate,Oi=Ni.uvsNeedUpdate,ki=Ni.normalsNeedUpdate,Gi=Ni.tangentsNeedUpdate,Wi=Ni.colorsNeedUpdate,ji=Ni.morphTargetsNeedUpdate,Xi=Ni.vertices,Yi=st.faces3,qi=st.faces4,Ki=Ni.faces,$i=Ni.faceVertexUvs[0],Qi=Ni.faceVertexUvs[1],Zi=Ni.skinIndices,Ji=Ni.skinWeights,er=Ni.morphTargets,tr=Ni.morphNormals;if(Ni.verticesNeedUpdate){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],At=Xi[Tt.a],Pt=Xi[Tt.b],Lt=Xi[Tt.c],wi[fi]=At.x,wi[fi+1]=At.y,wi[fi+2]=At.z,wi[fi+3]=Pt.x,wi[fi+4]=Pt.y,wi[fi+5]=Pt.z,wi[fi+6]=Lt.x,wi[fi+7]=Lt.y,wi[fi+8]=Lt.z,fi+=9;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],At=Xi[Tt.a],Pt=Xi[Tt.b],Lt=Xi[Tt.c],Dt=Xi[Tt.d],wi[fi]=At.x,wi[fi+1]=At.y,wi[fi+2]=At.z,wi[fi+3]=Pt.x,wi[fi+4]=Pt.y,wi[fi+5]=Pt.z,wi[fi+6]=Lt.x,wi[fi+7]=Lt.y,wi[fi+8]=Lt.z,wi[fi+9]=Dt.x,wi[fi+10]=Dt.y,wi[fi+11]=Dt.z,fi+=12;k.bindBuffer(k.ARRAY_BUFFER,st.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,wi,lt)}if(ji)for(ai=0,si=er.length;si>ai;ai++){for(mt=xi=0,gt=Yi.length;gt>mt;mt++)ci=Yi[mt],Tt=Ki[ci],At=er[ai].vertices[Tt.a],Pt=er[ai].vertices[Tt.b],Lt=er[ai].vertices[Tt.c],hi=Di[ai],hi[xi]=At.x,hi[xi+1]=At.y,hi[xi+2]=At.z,hi[xi+3]=Pt.x,hi[xi+4]=Pt.y,hi[xi+5]=Pt.z,hi[xi+6]=Lt.x,hi[xi+7]=Lt.y,hi[xi+8]=Lt.z,pt.morphNormals&&(Et?(pi=tr[ai].vertexNormals[ci],Bt=pi.a,Nt=pi.b,It=pi.c):It=Nt=Bt=tr[ai].faceNormals[ci],li=Fi[ai],li[xi]=Bt.x,li[xi+1]=Bt.y,li[xi+2]=Bt.z,li[xi+3]=Nt.x,li[xi+4]=Nt.y,li[xi+5]=Nt.z,li[xi+6]=It.x,li[xi+7]=It.y,li[xi+8]=It.z),xi+=9;for(mt=0,gt=qi.length;gt>mt;mt++)ci=qi[mt],Tt=Ki[ci],At=er[ai].vertices[Tt.a],Pt=er[ai].vertices[Tt.b],Lt=er[ai].vertices[Tt.c],Dt=er[ai].vertices[Tt.d],hi=Di[ai],hi[xi]=At.x,hi[xi+1]=At.y,hi[xi+2]=At.z,hi[xi+3]=Pt.x,hi[xi+4]=Pt.y,hi[xi+5]=Pt.z,hi[xi+6]=Lt.x,hi[xi+7]=Lt.y,hi[xi+8]=Lt.z,hi[xi+9]=Dt.x,hi[xi+10]=Dt.y,hi[xi+11]=Dt.z,pt.morphNormals&&(Et?(pi=tr[ai].vertexNormals[ci],Bt=pi.a,Nt=pi.b,It=pi.c,Ot=pi.d):Ot=It=Nt=Bt=tr[ai].faceNormals[ci],li=Fi[ai],li[xi]=Bt.x,li[xi+1]=Bt.y,li[xi+2]=Bt.z,li[xi+3]=Nt.x,li[xi+4]=Nt.y,li[xi+5]=Nt.z,li[xi+6]=It.x,li[xi+7]=It.y,li[xi+8]=It.z,li[xi+9]=Ot.x,li[xi+10]=Ot.y,li[xi+11]=Ot.z),xi+=12;k.bindBuffer(k.ARRAY_BUFFER,st.__webglMorphTargetsBuffers[ai]),k.bufferData(k.ARRAY_BUFFER,Di[ai],lt),pt.morphNormals&&(k.bindBuffer(k.ARRAY_BUFFER,st.__webglMorphNormalsBuffers[ai]),k.bufferData(k.ARRAY_BUFFER,Fi[ai],lt))}if(Ji.length){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],Yt=Ji[Tt.a],qt=Ji[Tt.b],Kt=Ji[Tt.c],Li[Ri]=Yt.x,Li[Ri+1]=Yt.y,Li[Ri+2]=Yt.z,Li[Ri+3]=Yt.w,Li[Ri+4]=qt.x,Li[Ri+5]=qt.y,Li[Ri+6]=qt.z,Li[Ri+7]=qt.w,Li[Ri+8]=Kt.x,Li[Ri+9]=Kt.y,Li[Ri+10]=Kt.z,Li[Ri+11]=Kt.w,Qt=Zi[Tt.a],Zt=Zi[Tt.b],Jt=Zi[Tt.c],Pi[Ri]=Qt.x,Pi[Ri+1]=Qt.y,Pi[Ri+2]=Qt.z,Pi[Ri+3]=Qt.w,Pi[Ri+4]=Zt.x,Pi[Ri+5]=Zt.y,Pi[Ri+6]=Zt.z,Pi[Ri+7]=Zt.w,Pi[Ri+8]=Jt.x,Pi[Ri+9]=Jt.y,Pi[Ri+10]=Jt.z,Pi[Ri+11]=Jt.w,Ri+=12;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],Yt=Ji[Tt.a],qt=Ji[Tt.b],Kt=Ji[Tt.c],$t=Ji[Tt.d],Li[Ri]=Yt.x,Li[Ri+1]=Yt.y,Li[Ri+2]=Yt.z,Li[Ri+3]=Yt.w,Li[Ri+4]=qt.x,Li[Ri+5]=qt.y,Li[Ri+6]=qt.z,Li[Ri+7]=qt.w,Li[Ri+8]=Kt.x,Li[Ri+9]=Kt.y,Li[Ri+10]=Kt.z,Li[Ri+11]=Kt.w,Li[Ri+12]=$t.x,Li[Ri+13]=$t.y,Li[Ri+14]=$t.z,Li[Ri+15]=$t.w,Qt=Zi[Tt.a],Zt=Zi[Tt.b],Jt=Zi[Tt.c],ei=Zi[Tt.d],Pi[Ri]=Qt.x,Pi[Ri+1]=Qt.y,Pi[Ri+2]=Qt.z,Pi[Ri+3]=Qt.w,Pi[Ri+4]=Zt.x,Pi[Ri+5]=Zt.y,Pi[Ri+6]=Zt.z,Pi[Ri+7]=Zt.w,Pi[Ri+8]=Jt.x,Pi[Ri+9]=Jt.y,Pi[Ri+10]=Jt.z,Pi[Ri+11]=Jt.w,Pi[Ri+12]=ei.x,Pi[Ri+13]=ei.y,Pi[Ri+14]=ei.z,Pi[Ri+15]=ei.w,Ri+=16;Ri>0&&(k.bindBuffer(k.ARRAY_BUFFER,st.__webglSkinIndicesBuffer),k.bufferData(k.ARRAY_BUFFER,Pi,lt),k.bindBuffer(k.ARRAY_BUFFER,st.__webglSkinWeightsBuffer),k.bufferData(k.ARRAY_BUFFER,Li,lt))}if(Wi&&ft){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],xt=Tt.vertexColors,bt=Tt.color,3===xt.length&&ft===THREE.VertexColors?(Gt=xt[0],Wt=xt[1],jt=xt[2]):jt=Wt=Gt=bt,Ai[yi]=Gt.r,Ai[yi+1]=Gt.g,Ai[yi+2]=Gt.b,Ai[yi+3]=Wt.r,Ai[yi+4]=Wt.g,Ai[yi+5]=Wt.b,Ai[yi+6]=jt.r,Ai[yi+7]=jt.g,Ai[yi+8]=jt.b,yi+=9;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],xt=Tt.vertexColors,bt=Tt.color,4===xt.length&&ft===THREE.VertexColors?(Gt=xt[0],Wt=xt[1],jt=xt[2],Xt=xt[3]):Xt=jt=Wt=Gt=bt,Ai[yi]=Gt.r,Ai[yi+1]=Gt.g,Ai[yi+2]=Gt.b,Ai[yi+3]=Wt.r,Ai[yi+4]=Wt.g,Ai[yi+5]=Wt.b,Ai[yi+6]=jt.r,Ai[yi+7]=jt.g,Ai[yi+8]=jt.b,Ai[yi+9]=Xt.r,Ai[yi+10]=Xt.g,Ai[yi+11]=Xt.b,yi+=12;yi>0&&(k.bindBuffer(k.ARRAY_BUFFER,st.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,Ai,lt))}if(Gi&&Ni.hasTangents){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],St=Tt.vertexTangents,Ft=St[0],Ut=St[1],zt=St[2],Ci[vi]=Ft.x,Ci[vi+1]=Ft.y,Ci[vi+2]=Ft.z,Ci[vi+3]=Ft.w,Ci[vi+4]=Ut.x,Ci[vi+5]=Ut.y,Ci[vi+6]=Ut.z,Ci[vi+7]=Ut.w,Ci[vi+8]=zt.x,Ci[vi+9]=zt.y,Ci[vi+10]=zt.z,Ci[vi+11]=zt.w,vi+=12;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],St=Tt.vertexTangents,Ft=St[0],Ut=St[1],zt=St[2],Vt=St[3],Ci[vi]=Ft.x,Ci[vi+1]=Ft.y,Ci[vi+2]=Ft.z,Ci[vi+3]=Ft.w,Ci[vi+4]=Ut.x,Ci[vi+5]=Ut.y,Ci[vi+6]=Ut.z,Ci[vi+7]=Ut.w,Ci[vi+8]=zt.x,Ci[vi+9]=zt.y,Ci[vi+10]=zt.z,Ci[vi+11]=zt.w,Ci[vi+12]=Vt.x,Ci[vi+13]=Vt.y,Ci[vi+14]=Vt.z,Ci[vi+15]=Vt.w,vi+=16;k.bindBuffer(k.ARRAY_BUFFER,st.__webglTangentBuffer),k.bufferData(k.ARRAY_BUFFER,Ci,lt)}if(ki&&ut){for(mt=0,gt=Yi.length;gt>mt;mt++)if(Tt=Ki[Yi[mt]],yt=Tt.vertexNormals,Rt=Tt.normal,3===yt.length&&Et)for(ti=0;3>ti;ti++)ri=yt[ti],Mi[gi]=ri.x,Mi[gi+1]=ri.y,Mi[gi+2]=ri.z,gi+=3;else for(ti=0;3>ti;ti++)Mi[gi]=Rt.x,Mi[gi+1]=Rt.y,Mi[gi+2]=Rt.z,gi+=3;for(mt=0,gt=qi.length;gt>mt;mt++)if(Tt=Ki[qi[mt]],yt=Tt.vertexNormals,Rt=Tt.normal,4===yt.length&&Et)for(ti=0;4>ti;ti++)ri=yt[ti],Mi[gi]=ri.x,Mi[gi+1]=ri.y,Mi[gi+2]=ri.z,gi+=3;else for(ti=0;4>ti;ti++)Mi[gi]=Rt.x,Mi[gi+1]=Rt.y,Mi[gi+2]=Rt.z,gi+=3;k.bindBuffer(k.ARRAY_BUFFER,st.__webglNormalBuffer),k.bufferData(k.ARRAY_BUFFER,Mi,lt)}if(Oi&&$i&&dt){for(mt=0,gt=Yi.length;gt>mt;mt++)if(vt=Yi[mt],Mt=$i[vt],void 0!==Mt)for(ti=0;3>ti;ti++)ni=Mt[ti],bi[di]=ni.x,bi[di+1]=ni.y,di+=2;for(mt=0,gt=qi.length;gt>mt;mt++)if(vt=qi[mt],Mt=$i[vt],void 0!==Mt)for(ti=0;4>ti;ti++)ni=Mt[ti],bi[di]=ni.x,bi[di+1]=ni.y,di+=2;di>0&&(k.bindBuffer(k.ARRAY_BUFFER,st.__webglUVBuffer),k.bufferData(k.ARRAY_BUFFER,bi,lt))}if(Oi&&Qi&&dt){for(mt=0,gt=Yi.length;gt>mt;mt++)if(vt=Yi[mt],Ct=Qi[vt],void 0!==Ct)for(ti=0;3>ti;ti++)oi=Ct[ti],Si[Ei]=oi.x,Si[Ei+1]=oi.y,Ei+=2;for(mt=0,gt=qi.length;gt>mt;mt++)if(vt=qi[mt],Ct=Qi[vt],void 0!==Ct)for(ti=0;4>ti;ti++)oi=Ct[ti],Si[Ei]=oi.x,Si[Ei+1]=oi.y,Ei+=2;Ei>0&&(k.bindBuffer(k.ARRAY_BUFFER,st.__webglUV2Buffer),k.bufferData(k.ARRAY_BUFFER,Si,lt))}if(Ii){for(mt=0,gt=Yi.length;gt>mt;mt++)Vi[mi]=ui,Vi[mi+1]=ui+1,Vi[mi+2]=ui+2,mi+=3,Bi[Ti]=ui,Bi[Ti+1]=ui+1,Bi[Ti+2]=ui,Bi[Ti+3]=ui+2,Bi[Ti+4]=ui+1,Bi[Ti+5]=ui+2,Ti+=6,ui+=3;for(mt=0,gt=qi.length;gt>mt;mt++)Vi[mi]=ui,Vi[mi+1]=ui+1,Vi[mi+2]=ui+3,Vi[mi+3]=ui+1,Vi[mi+4]=ui+2,Vi[mi+5]=ui+3,mi+=6,Bi[Ti]=ui,Bi[Ti+1]=ui+1,Bi[Ti+2]=ui,Bi[Ti+3]=ui+3,Bi[Ti+4]=ui+1,Bi[Ti+5]=ui+2,Bi[Ti+6]=ui+2,Bi[Ti+7]=ui+3,Ti+=8,ui+=4;k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,st.__webglFaceBuffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,Vi,lt),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,st.__webglLineBuffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,Bi,lt)}if(Ui)for(ti=0,ii=Ui.length;ii>ti;ti++)if(zi=Ui[ti],zi.__original.needsUpdate){if(Hi=0,1===zi.size){if(void 0===zi.boundTo||"vertices"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],zi.array[Hi]=zi.value[Tt.a],zi.array[Hi+1]=zi.value[Tt.b],zi.array[Hi+2]=zi.value[Tt.c],Hi+=3;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],zi.array[Hi]=zi.value[Tt.a],zi.array[Hi+1]=zi.value[Tt.b],zi.array[Hi+2]=zi.value[Tt.c],zi.array[Hi+3]=zi.value[Tt.d],Hi+=4}else if("faces"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)_i=zi.value[Yi[mt]],zi.array[Hi]=_i,zi.array[Hi+1]=_i,zi.array[Hi+2]=_i,Hi+=3;for(mt=0,gt=qi.length;gt>mt;mt++)_i=zi.value[qi[mt]],zi.array[Hi]=_i,zi.array[Hi+1]=_i,zi.array[Hi+2]=_i,zi.array[Hi+3]=_i,Hi+=4}}else if(2===zi.size){if(void 0===zi.boundTo||"vertices"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],At=zi.value[Tt.a],Pt=zi.value[Tt.b],Lt=zi.value[Tt.c],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=Pt.x,zi.array[Hi+3]=Pt.y,zi.array[Hi+4]=Lt.x,zi.array[Hi+5]=Lt.y,Hi+=6;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],At=zi.value[Tt.a],Pt=zi.value[Tt.b],Lt=zi.value[Tt.c],Dt=zi.value[Tt.d],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=Pt.x,zi.array[Hi+3]=Pt.y,zi.array[Hi+4]=Lt.x,zi.array[Hi+5]=Lt.y,zi.array[Hi+6]=Dt.x,zi.array[Hi+7]=Dt.y,Hi+=8}else if("faces"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Lt=Pt=At=_i=zi.value[Yi[mt]],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=Pt.x,zi.array[Hi+3]=Pt.y,zi.array[Hi+4]=Lt.x,zi.array[Hi+5]=Lt.y,Hi+=6;for(mt=0,gt=qi.length;gt>mt;mt++)Dt=Lt=Pt=At=_i=zi.value[qi[mt]],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=Pt.x,zi.array[Hi+3]=Pt.y,zi.array[Hi+4]=Lt.x,zi.array[Hi+5]=Lt.y,zi.array[Hi+6]=Dt.x,zi.array[Hi+7]=Dt.y,Hi+=8}}else if(3===zi.size){var ir;if(ir="c"===zi.type?["r","g","b"]:["x","y","z"],void 0===zi.boundTo||"vertices"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],At=zi.value[Tt.a],Pt=zi.value[Tt.b],Lt=zi.value[Tt.c],zi.array[Hi]=At[ir[0]],zi.array[Hi+1]=At[ir[1]],zi.array[Hi+2]=At[ir[2]],zi.array[Hi+3]=Pt[ir[0]],zi.array[Hi+4]=Pt[ir[1]],zi.array[Hi+5]=Pt[ir[2]],zi.array[Hi+6]=Lt[ir[0]],zi.array[Hi+7]=Lt[ir[1]],zi.array[Hi+8]=Lt[ir[2]],Hi+=9;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],At=zi.value[Tt.a],Pt=zi.value[Tt.b],Lt=zi.value[Tt.c],Dt=zi.value[Tt.d],zi.array[Hi]=At[ir[0]],zi.array[Hi+1]=At[ir[1]],zi.array[Hi+2]=At[ir[2]],zi.array[Hi+3]=Pt[ir[0]],zi.array[Hi+4]=Pt[ir[1]],zi.array[Hi+5]=Pt[ir[2]],zi.array[Hi+6]=Lt[ir[0]],zi.array[Hi+7]=Lt[ir[1]],zi.array[Hi+8]=Lt[ir[2]],zi.array[Hi+9]=Dt[ir[0]],zi.array[Hi+10]=Dt[ir[1]],zi.array[Hi+11]=Dt[ir[2]],Hi+=12}else if("faces"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Lt=Pt=At=_i=zi.value[Yi[mt]],zi.array[Hi]=At[ir[0]],zi.array[Hi+1]=At[ir[1]],zi.array[Hi+2]=At[ir[2]],zi.array[Hi+3]=Pt[ir[0]],zi.array[Hi+4]=Pt[ir[1]],zi.array[Hi+5]=Pt[ir[2]],zi.array[Hi+6]=Lt[ir[0]],zi.array[Hi+7]=Lt[ir[1]],zi.array[Hi+8]=Lt[ir[2]],Hi+=9;for(mt=0,gt=qi.length;gt>mt;mt++)Dt=Lt=Pt=At=_i=zi.value[qi[mt]],zi.array[Hi]=At[ir[0]],zi.array[Hi+1]=At[ir[1]],zi.array[Hi+2]=At[ir[2]],zi.array[Hi+3]=Pt[ir[0]],zi.array[Hi+4]=Pt[ir[1]],zi.array[Hi+5]=Pt[ir[2]],zi.array[Hi+6]=Lt[ir[0]],zi.array[Hi+7]=Lt[ir[1]],zi.array[Hi+8]=Lt[ir[2]],zi.array[Hi+9]=Dt[ir[0]],zi.array[Hi+10]=Dt[ir[1]],zi.array[Hi+11]=Dt[ir[2]],Hi+=12}else if("faceVertices"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)_i=zi.value[Yi[mt]],At=_i[0],Pt=_i[1],Lt=_i[2],zi.array[Hi]=At[ir[0]],zi.array[Hi+1]=At[ir[1]],zi.array[Hi+2]=At[ir[2]],zi.array[Hi+3]=Pt[ir[0]],zi.array[Hi+4]=Pt[ir[1]],zi.array[Hi+5]=Pt[ir[2]],zi.array[Hi+6]=Lt[ir[0]],zi.array[Hi+7]=Lt[ir[1]],zi.array[Hi+8]=Lt[ir[2]],Hi+=9;for(mt=0,gt=qi.length;gt>mt;mt++)_i=zi.value[qi[mt]],At=_i[0],Pt=_i[1],Lt=_i[2],Dt=_i[3],zi.array[Hi]=At[ir[0]],zi.array[Hi+1]=At[ir[1]],zi.array[Hi+2]=At[ir[2]],zi.array[Hi+3]=Pt[ir[0]],zi.array[Hi+4]=Pt[ir[1]],zi.array[Hi+5]=Pt[ir[2]],zi.array[Hi+6]=Lt[ir[0]],zi.array[Hi+7]=Lt[ir[1]],zi.array[Hi+8]=Lt[ir[2]],zi.array[Hi+9]=Dt[ir[0]],zi.array[Hi+10]=Dt[ir[1]],zi.array[Hi+11]=Dt[ir[2]],Hi+=12}}else if(4===zi.size)if(void 0===zi.boundTo||"vertices"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Tt=Ki[Yi[mt]],At=zi.value[Tt.a],Pt=zi.value[Tt.b],Lt=zi.value[Tt.c],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=At.z,zi.array[Hi+3]=At.w,zi.array[Hi+4]=Pt.x,zi.array[Hi+5]=Pt.y,zi.array[Hi+6]=Pt.z,zi.array[Hi+7]=Pt.w,zi.array[Hi+8]=Lt.x,zi.array[Hi+9]=Lt.y,zi.array[Hi+10]=Lt.z,zi.array[Hi+11]=Lt.w,Hi+=12;for(mt=0,gt=qi.length;gt>mt;mt++)Tt=Ki[qi[mt]],At=zi.value[Tt.a],Pt=zi.value[Tt.b],Lt=zi.value[Tt.c],Dt=zi.value[Tt.d],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=At.z,zi.array[Hi+3]=At.w,zi.array[Hi+4]=Pt.x,zi.array[Hi+5]=Pt.y,zi.array[Hi+6]=Pt.z,zi.array[Hi+7]=Pt.w,zi.array[Hi+8]=Lt.x,zi.array[Hi+9]=Lt.y,zi.array[Hi+10]=Lt.z,zi.array[Hi+11]=Lt.w,zi.array[Hi+12]=Dt.x,zi.array[Hi+13]=Dt.y,zi.array[Hi+14]=Dt.z,zi.array[Hi+15]=Dt.w,Hi+=16}else if("faces"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)Lt=Pt=At=_i=zi.value[Yi[mt]],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=At.z,zi.array[Hi+3]=At.w,zi.array[Hi+4]=Pt.x,zi.array[Hi+5]=Pt.y,zi.array[Hi+6]=Pt.z,zi.array[Hi+7]=Pt.w,zi.array[Hi+8]=Lt.x,zi.array[Hi+9]=Lt.y,zi.array[Hi+10]=Lt.z,zi.array[Hi+11]=Lt.w,Hi+=12;for(mt=0,gt=qi.length;gt>mt;mt++)Dt=Lt=Pt=At=_i=zi.value[qi[mt]],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=At.z,zi.array[Hi+3]=At.w,zi.array[Hi+4]=Pt.x,zi.array[Hi+5]=Pt.y,zi.array[Hi+6]=Pt.z,zi.array[Hi+7]=Pt.w,zi.array[Hi+8]=Lt.x,zi.array[Hi+9]=Lt.y,zi.array[Hi+10]=Lt.z,zi.array[Hi+11]=Lt.w,zi.array[Hi+12]=Dt.x,zi.array[Hi+13]=Dt.y,zi.array[Hi+14]=Dt.z,zi.array[Hi+15]=Dt.w,Hi+=16}else if("faceVertices"===zi.boundTo){for(mt=0,gt=Yi.length;gt>mt;mt++)_i=zi.value[Yi[mt]],At=_i[0],Pt=_i[1],Lt=_i[2],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=At.z,zi.array[Hi+3]=At.w,zi.array[Hi+4]=Pt.x,zi.array[Hi+5]=Pt.y,zi.array[Hi+6]=Pt.z,zi.array[Hi+7]=Pt.w,zi.array[Hi+8]=Lt.x,zi.array[Hi+9]=Lt.y,zi.array[Hi+10]=Lt.z,zi.array[Hi+11]=Lt.w,Hi+=12;for(mt=0,gt=qi.length;gt>mt;mt++)_i=zi.value[qi[mt]],At=_i[0],Pt=_i[1],Lt=_i[2],Dt=_i[3],zi.array[Hi]=At.x,zi.array[Hi+1]=At.y,zi.array[Hi+2]=At.z,zi.array[Hi+3]=At.w,zi.array[Hi+4]=Pt.x,zi.array[Hi+5]=Pt.y,zi.array[Hi+6]=Pt.z,zi.array[Hi+7]=Pt.w,zi.array[Hi+8]=Lt.x,zi.array[Hi+9]=Lt.y,zi.array[Hi+10]=Lt.z,zi.array[Hi+11]=Lt.w,zi.array[Hi+12]=Dt.x,zi.array[Hi+13]=Dt.y,zi.array[Hi+14]=Dt.z,zi.array[Hi+15]=Dt.w,Hi+=16}k.bindBuffer(k.ARRAY_BUFFER,zi.buffer),k.bufferData(k.ARRAY_BUFFER,zi.array,lt)}ct&&(delete st.__inittedArrays,delete st.__colorArray,delete st.__normalArray,delete st.__tangentArray,delete st.__uvArray,delete st.__uv2Array,delete st.__faceArray,delete st.__vertexArray,delete st.__lineArray,delete st.__skinIndexArray,delete st.__skinWeightArray)}}et.verticesNeedUpdate=!1,et.morphTargetsNeedUpdate=!1,et.elementsNeedUpdate=!1,et.uvsNeedUpdate=!1,et.normalsNeedUpdate=!1,et.colorsNeedUpdate=!1,et.tangentsNeedUpdate=!1,et.buffersNeedUpdate=!1,nt.attributes&&v(nt)}else if(J instanceof THREE.Ribbon){if(nt=n(J,et),rt=nt.attributes&&g(nt),et.verticesNeedUpdate||et.colorsNeedUpdate||et.normalsNeedUpdate||rt){var rr=et,nr=k.DYNAMIC_DRAW,or=void 0,ar=void 0,sr=void 0,hr=void 0,lr=void 0,cr=void 0,pr=void 0,ur=void 0,fr=void 0,dr=void 0,Er=void 0,mr=void 0,gr=void 0,vr=rr.vertices,Tr=rr.colors,yr=rr.normals,Rr=vr.length,xr=Tr.length,Hr=yr.length,_r=rr.__vertexArray,wr=rr.__colorArray,br=rr.__normalArray,Sr=rr.colorsNeedUpdate,Mr=rr.normalsNeedUpdate,Cr=rr.__webglCustomAttributesList;if(rr.verticesNeedUpdate){for(or=0;Rr>or;or++)hr=vr[or],lr=3*or,_r[lr]=hr.x,_r[lr+1]=hr.y,_r[lr+2]=hr.z;k.bindBuffer(k.ARRAY_BUFFER,rr.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,_r,nr)}if(Sr){for(ar=0;xr>ar;ar++)cr=Tr[ar],lr=3*ar,wr[lr]=cr.r,wr[lr+1]=cr.g,wr[lr+2]=cr.b;k.bindBuffer(k.ARRAY_BUFFER,rr.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,wr,nr)}if(Mr){for(sr=0;Hr>sr;sr++)pr=yr[sr],lr=3*sr,br[lr]=pr.x,br[lr+1]=pr.y,br[lr+2]=pr.z;k.bindBuffer(k.ARRAY_BUFFER,rr.__webglNormalBuffer),k.bufferData(k.ARRAY_BUFFER,br,nr)}if(Cr)for(ur=0,fr=Cr.length;fr>ur;ur++)if(mr=Cr[ur],mr.needsUpdate&&(void 0===mr.boundTo||"vertices"===mr.boundTo)){if(lr=0,Er=mr.value.length,1===mr.size)for(dr=0;Er>dr;dr++)mr.array[dr]=mr.value[dr];else if(2===mr.size)for(dr=0;Er>dr;dr++)gr=mr.value[dr],mr.array[lr]=gr.x,mr.array[lr+1]=gr.y,lr+=2;else if(3===mr.size)if("c"===mr.type)for(dr=0;Er>dr;dr++)gr=mr.value[dr],mr.array[lr]=gr.r,mr.array[lr+1]=gr.g,mr.array[lr+2]=gr.b,lr+=3;else for(dr=0;Er>dr;dr++)gr=mr.value[dr],mr.array[lr]=gr.x,mr.array[lr+1]=gr.y,mr.array[lr+2]=gr.z,lr+=3;else if(4===mr.size)for(dr=0;Er>dr;dr++)gr=mr.value[dr],mr.array[lr]=gr.x,mr.array[lr+1]=gr.y,mr.array[lr+2]=gr.z,mr.array[lr+3]=gr.w,lr+=4;k.bindBuffer(k.ARRAY_BUFFER,mr.buffer),k.bufferData(k.ARRAY_BUFFER,mr.array,nr)}}et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1,et.normalsNeedUpdate=!1,nt.attributes&&v(nt)}else if(J instanceof THREE.Line)if(et instanceof THREE.BufferGeometry)(et.verticesNeedUpdate||et.colorsNeedUpdate)&&h(et,k.DYNAMIC_DRAW,!et.dynamic),et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1;else{if(nt=n(J,et),rt=nt.attributes&&g(nt),et.verticesNeedUpdate||et.colorsNeedUpdate||et.lineDistancesNeedUpdate||rt){var Ar=et,Pr=k.DYNAMIC_DRAW,Lr=void 0,Dr=void 0,Fr=void 0,Ur=void 0,zr=void 0,Vr=void 0,Br=Ar.vertices,Nr=Ar.colors,Ir=Ar.lineDistances,Or=Br.length,kr=Nr.length,Gr=Ir.length,Wr=Ar.__vertexArray,jr=Ar.__colorArray,Xr=Ar.__lineDistanceArray,Yr=Ar.colorsNeedUpdate,qr=Ar.lineDistancesNeedUpdate,Kr=Ar.__webglCustomAttributesList,$r=void 0,Qr=void 0,Zr=void 0,Jr=void 0,en=void 0,tn=void 0;if(Ar.verticesNeedUpdate){for(Lr=0;Or>Lr;Lr++)Ur=Br[Lr],zr=3*Lr,Wr[zr]=Ur.x,Wr[zr+1]=Ur.y,Wr[zr+2]=Ur.z;k.bindBuffer(k.ARRAY_BUFFER,Ar.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,Wr,Pr)}if(Yr){for(Dr=0;kr>Dr;Dr++)Vr=Nr[Dr],zr=3*Dr,jr[zr]=Vr.r,jr[zr+1]=Vr.g,jr[zr+2]=Vr.b;k.bindBuffer(k.ARRAY_BUFFER,Ar.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,jr,Pr)}if(qr){for(Fr=0;Gr>Fr;Fr++)Xr[Fr]=Ir[Fr];k.bindBuffer(k.ARRAY_BUFFER,Ar.__webglLineDistanceBuffer),k.bufferData(k.ARRAY_BUFFER,Xr,Pr)}if(Kr)for($r=0,Qr=Kr.length;Qr>$r;$r++)if(tn=Kr[$r],tn.needsUpdate&&(void 0===tn.boundTo||"vertices"===tn.boundTo)){if(zr=0,Jr=tn.value.length,1===tn.size)for(Zr=0;Jr>Zr;Zr++)tn.array[Zr]=tn.value[Zr];else if(2===tn.size)for(Zr=0;Jr>Zr;Zr++)en=tn.value[Zr],tn.array[zr]=en.x,tn.array[zr+1]=en.y,zr+=2;else if(3===tn.size)if("c"===tn.type)for(Zr=0;Jr>Zr;Zr++)en=tn.value[Zr],tn.array[zr]=en.r,tn.array[zr+1]=en.g,tn.array[zr+2]=en.b,zr+=3;else for(Zr=0;Jr>Zr;Zr++)en=tn.value[Zr],tn.array[zr]=en.x,tn.array[zr+1]=en.y,tn.array[zr+2]=en.z,zr+=3;else if(4===tn.size)for(Zr=0;Jr>Zr;Zr++)en=tn.value[Zr],tn.array[zr]=en.x,tn.array[zr+1]=en.y,tn.array[zr+2]=en.z,tn.array[zr+3]=en.w,zr+=4;k.bindBuffer(k.ARRAY_BUFFER,tn.buffer),k.bufferData(k.ARRAY_BUFFER,tn.array,Pr)}}et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1,et.lineDistancesNeedUpdate=!1,nt.attributes&&v(nt)}else if(J instanceof THREE.ParticleSystem)if(et instanceof THREE.BufferGeometry)(et.verticesNeedUpdate||et.colorsNeedUpdate)&&h(et,k.DYNAMIC_DRAW,!et.dynamic),et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1;else{if(nt=n(J,et),rt=nt.attributes&&g(nt),et.verticesNeedUpdate||et.colorsNeedUpdate||J.sortParticles||rt){var rn=et,nn=k.DYNAMIC_DRAW,on=J,an=void 0,sn=void 0,hn=void 0,ln=void 0,cn=void 0,pn=void 0,un=rn.vertices,fn=un.length,dn=rn.colors,En=dn.length,mn=rn.__vertexArray,gn=rn.__colorArray,vn=rn.__sortArray,Tn=rn.verticesNeedUpdate,yn=rn.colorsNeedUpdate,Rn=rn.__webglCustomAttributesList,xn=void 0,Hn=void 0,_n=void 0,wn=void 0,bn=void 0,Sn=void 0;if(on.sortParticles){for(_t.copy(Ht),_t.multiply(on.matrixWorld),an=0;fn>an;an++)hn=un[an],wt.copy(hn),wt.applyProjection(_t),vn[an]=[wt.z,an];for(vn.sort(u),an=0;fn>an;an++)hn=un[vn[an][1]],ln=3*an,mn[ln]=hn.x,mn[ln+1]=hn.y,mn[ln+2]=hn.z;for(sn=0;En>sn;sn++)ln=3*sn,pn=dn[vn[sn][1]],gn[ln]=pn.r,gn[ln+1]=pn.g,gn[ln+2]=pn.b;if(Rn)for(xn=0,Hn=Rn.length;Hn>xn;xn++)if(Sn=Rn[xn],void 0===Sn.boundTo||"vertices"===Sn.boundTo)if(ln=0,wn=Sn.value.length,1===Sn.size)for(_n=0;wn>_n;_n++)cn=vn[_n][1],Sn.array[_n]=Sn.value[cn];else if(2===Sn.size)for(_n=0;wn>_n;_n++)cn=vn[_n][1],bn=Sn.value[cn],Sn.array[ln]=bn.x,Sn.array[ln+1]=bn.y,ln+=2;else if(3===Sn.size)if("c"===Sn.type)for(_n=0;wn>_n;_n++)cn=vn[_n][1],bn=Sn.value[cn],Sn.array[ln]=bn.r,Sn.array[ln+1]=bn.g,Sn.array[ln+2]=bn.b,ln+=3;else for(_n=0;wn>_n;_n++)cn=vn[_n][1],bn=Sn.value[cn],Sn.array[ln]=bn.x,Sn.array[ln+1]=bn.y,Sn.array[ln+2]=bn.z,ln+=3;else if(4===Sn.size)for(_n=0;wn>_n;_n++)cn=vn[_n][1],bn=Sn.value[cn],Sn.array[ln]=bn.x,Sn.array[ln+1]=bn.y,Sn.array[ln+2]=bn.z,Sn.array[ln+3]=bn.w,ln+=4}else{if(Tn)for(an=0;fn>an;an++)hn=un[an],ln=3*an,mn[ln]=hn.x,mn[ln+1]=hn.y,mn[ln+2]=hn.z;if(yn)for(sn=0;En>sn;sn++)pn=dn[sn],ln=3*sn,gn[ln]=pn.r,gn[ln+1]=pn.g,gn[ln+2]=pn.b;if(Rn)for(xn=0,Hn=Rn.length;Hn>xn;xn++)if(Sn=Rn[xn],Sn.needsUpdate&&(void 0===Sn.boundTo||"vertices"===Sn.boundTo))if(wn=Sn.value.length,ln=0,1===Sn.size)for(_n=0;wn>_n;_n++)Sn.array[_n]=Sn.value[_n];else if(2===Sn.size)for(_n=0;wn>_n;_n++)bn=Sn.value[_n],Sn.array[ln]=bn.x,Sn.array[ln+1]=bn.y,ln+=2;else if(3===Sn.size)if("c"===Sn.type)for(_n=0;wn>_n;_n++)bn=Sn.value[_n],Sn.array[ln]=bn.r,Sn.array[ln+1]=bn.g,Sn.array[ln+2]=bn.b,ln+=3;else for(_n=0;wn>_n;_n++)bn=Sn.value[_n],Sn.array[ln]=bn.x,Sn.array[ln+1]=bn.y,Sn.array[ln+2]=bn.z,ln+=3;else if(4===Sn.size)for(_n=0;wn>_n;_n++)bn=Sn.value[_n],Sn.array[ln]=bn.x,Sn.array[ln+1]=bn.y,Sn.array[ln+2]=bn.z,Sn.array[ln+3]=bn.w,ln+=4}if((Tn||on.sortParticles)&&(k.bindBuffer(k.ARRAY_BUFFER,rn.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,mn,nn)),(yn||on.sortParticles)&&(k.bindBuffer(k.ARRAY_BUFFER,rn.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,gn,nn)),Rn)for(xn=0,Hn=Rn.length;Hn>xn;xn++)Sn=Rn[xn],(Sn.needsUpdate||on.sortParticles)&&(k.bindBuffer(k.ARRAY_BUFFER,Sn.buffer),k.bufferData(k.ARRAY_BUFFER,Sn.array,nn))}et.verticesNeedUpdate=!1,et.colorsNeedUpdate=!1,nt.attributes&&v(nt)}}},this.initMaterial=function(e,t,i,r){var n,o,a,s;e.addEventListener("dispose",jt);var h,l,c,p,u;if(e instanceof THREE.MeshDepthMaterial?u="depth":e instanceof THREE.MeshNormalMaterial?u="normal":e instanceof THREE.MeshBasicMaterial?u="basic":e instanceof THREE.MeshLambertMaterial?u="lambert":e instanceof THREE.MeshPhongMaterial?u="phong":e instanceof THREE.LineBasicMaterial?u="basic":e instanceof THREE.LineDashedMaterial?u="dashed":e instanceof THREE.ParticleBasicMaterial&&(u="particle_basic"),u){var f=THREE.ShaderLib[u];e.uniforms=THREE.UniformsUtils.clone(f.uniforms),e.vertexShader=f.vertexShader,e.fragmentShader=f.fragmentShader}var d,E,m;for(n=a=E=m=f=0,o=t.length;o>n;n++)d=t[n],d.onlyShadow||(d instanceof THREE.DirectionalLight&&a++,d instanceof THREE.PointLight&&E++,d instanceof THREE.SpotLight&&m++,d instanceof THREE.HemisphereLight&&f++);for(n=a,o=E,a=m,s=f,f=d=0,m=t.length;m>f;f++)E=t[f],E.castShadow&&(E instanceof THREE.SpotLight&&d++,E instanceof THREE.DirectionalLight&&!E.shadowCascade&&d++);p=d,Ut&&r&&r.useVertexTexture?c=1024:(t=k.getParameter(k.MAX_VERTEX_UNIFORM_VECTORS),t=Math.floor((t-20)/4),void 0!==r&&r instanceof THREE.SkinnedMesh&&(t=Math.min(r.bones.length,t),r.bones.length>t&&console.warn("WebGLRenderer: too many bones - "+r.bones.length+", this GPU supports just "+t+" (try OpenGL instead of ANGLE)")),c=t);e:{E=e.fragmentShader,m=e.vertexShader,f=e.uniforms,t=e.attributes,d=e.defines;var g,v,T,i={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,fogExp:i instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:c,useVertexTexture:Ut&&r&&r.useVertexTexture,boneTextureWidth:r&&r.boneTextureWidth,boneTextureHeight:r&&r.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:n,maxPointLights:o,maxSpotLights:a,maxHemiLights:s,maxShadows:p,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},r=[];
u?r.push(u):(r.push(E),r.push(m));for(v in d)r.push(v),r.push(d[v]);for(g in i)r.push(g),r.push(i[g]);for(u=r.join(),g=0,v=q.length;v>g;g++)if(r=q[g],r.code===u){r.usedTimes++,l=r.program;break e}g="SHADOWMAP_TYPE_BASIC",i.shadowMapType===THREE.PCFShadowMap?g="SHADOWMAP_TYPE_PCF":i.shadowMapType===THREE.PCFSoftShadowMap&&(g="SHADOWMAP_TYPE_PCF_SOFT"),v=[];for(T in d)r=d[T],!1!==r&&(r="#define "+T+" "+r,v.push(r));r=v.join("\n"),T=k.createProgram(),v=["precision "+F+" float;",r,Ft?"#define VERTEX_TEXTURES":"",Y.gammaInput?"#define GAMMA_INPUT":"",Y.gammaOutput?"#define GAMMA_OUTPUT":"",Y.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.boneTextureWidth?"#define N_BONE_PIXEL_X "+i.boneTextureWidth.toFixed(1):"",i.boneTextureHeight?"#define N_BONE_PIXEL_Y "+i.boneTextureHeight.toFixed(1):"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),g=["precision "+F+" float;",i.bumpMap||i.normalMap?"#extension GL_OES_standard_derivatives : enable":"",r,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",Y.gammaInput?"#define GAMMA_INPUT":"",Y.gammaOutput?"#define GAMMA_OUTPUT":"",Y.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+g:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),g=M("fragment",g+E),v=M("vertex",v+m),k.attachShader(T,v),k.attachShader(T,g),k.linkProgram(T),k.getProgramParameter(T,k.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+k.getProgramParameter(T,k.VALIDATE_STATUS)+", gl error ["+k.getError()+"]"),k.deleteShader(g),k.deleteShader(v),T.uniforms={},T.attributes={};var y;g="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),i.useVertexTexture?g.push("boneTexture"):g.push("boneGlobalMatrices");for(y in f)g.push(y);for(y=g,g=0,v=y.length;v>g;g++)f=y[g],T.uniforms[f]=k.getUniformLocation(T,f);for(g="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),y=0;i.maxMorphTargets>y;y++)g.push("morphTarget"+y);for(y=0;i.maxMorphNormals>y;y++)g.push("morphNormal"+y);for(l in t)g.push(l);for(l=g,y=0,t=l.length;t>y;y++)g=l[y],T.attributes[g]=k.getAttribLocation(T,g);T.id=K++,q.push({program:T,code:u,usedTimes:1}),Y.info.memory.programs=q.length,l=T}if(e.program=l,y=e.program.attributes,e.morphTargets)for(e.numSupportedMorphTargets=0,t="morphTarget",l=0;this.maxMorphTargets>l;l++)T=t+l,y[T]>=0&&e.numSupportedMorphTargets++;if(e.morphNormals)for(e.numSupportedMorphNormals=0,t="morphNormal",l=0;this.maxMorphNormals>l;l++)T=t+l,y[T]>=0&&e.numSupportedMorphNormals++;e.uniformsList=[];for(h in e.uniforms)e.uniformsList.push([e.uniforms[h],h])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?k.disable(k.CULL_FACE):(t===THREE.FrontFaceDirectionCW?k.frontFace(k.CW):k.frontFace(k.CCW),e===THREE.CullFaceBack?k.cullFace(k.BACK):e===THREE.CullFaceFront?k.cullFace(k.FRONT):k.cullFace(k.FRONT_AND_BACK),k.enable(k.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,e=e.side===THREE.BackSide;rt!==t&&(t?k.disable(k.CULL_FACE):k.enable(k.CULL_FACE),rt=t),nt!==e&&(e?k.frontFace(k.CW):k.frontFace(k.CCW),nt=e)},this.setDepthTest=function(e){lt!==e&&(e?k.enable(k.DEPTH_TEST):k.disable(k.DEPTH_TEST),lt=e)},this.setDepthWrite=function(e){ct!==e&&(k.depthMask(e),ct=e)},this.setBlending=function(e,t,i,r){e!==ot&&(e===THREE.NoBlending?k.disable(k.BLEND):e===THREE.AdditiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.SRC_ALPHA,k.ONE)):e===THREE.SubtractiveBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(k.enable(k.BLEND),k.blendEquation(k.FUNC_ADD),k.blendFunc(k.ZERO,k.SRC_COLOR)):e===THREE.CustomBlending?k.enable(k.BLEND):(k.enable(k.BLEND),k.blendEquationSeparate(k.FUNC_ADD,k.FUNC_ADD),k.blendFuncSeparate(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA)),ot=e),e===THREE.CustomBlending?(t!==at&&(k.blendEquation(L(t)),at=t),(i!==st||r!==ht)&&(k.blendFunc(L(i),L(r)),st=i,ht=r)):ht=st=at=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Gt),e.__webglTexture=k.createTexture(),Y.info.memory.textures++),k.activeTexture(k.TEXTURE0+t),k.bindTexture(k.TEXTURE_2D,e.__webglTexture),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,e.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,e.unpackAlignment);var i=e.image,r=0===(i.width&i.width-1)&&0===(i.height&i.height-1),n=L(e.format),o=L(e.type);C(k.TEXTURE_2D,e,r);var a=e.mipmaps;if(e instanceof THREE.DataTexture)if(a.length>0&&r){for(var s=0,h=a.length;h>s;s++)i=a[s],k.texImage2D(k.TEXTURE_2D,s,n,i.width,i.height,0,n,o,i.data);e.generateMipmaps=!1}else k.texImage2D(k.TEXTURE_2D,0,n,i.width,i.height,0,n,o,i.data);else if(e instanceof THREE.CompressedTexture)for(s=0,h=a.length;h>s;s++)i=a[s],k.compressedTexImage2D(k.TEXTURE_2D,s,n,i.width,i.height,0,i.data);else if(a.length>0&&r){for(s=0,h=a.length;h>s;s++)i=a[s],k.texImage2D(k.TEXTURE_2D,s,n,n,o,i);e.generateMipmaps=!1}else k.texImage2D(k.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&r&&k.generateMipmap(k.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else k.activeTexture(k.TEXTURE0+t),k.bindTexture(k.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Wt),e.__webglTexture=k.createTexture(),Y.info.memory.textures++;var i=0===(e.width&e.width-1)&&0===(e.height&e.height-1),r=L(e.format),n=L(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],k.bindTexture(k.TEXTURE_CUBE_MAP,e.__webglTexture),C(k.TEXTURE_CUBE_MAP,e,i);for(var o=0;6>o;o++){e.__webglFramebuffer[o]=k.createFramebuffer(),e.__webglRenderbuffer[o]=k.createRenderbuffer(),k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,r,e.width,e.height,0,r,n,null);var a=e,s=k.TEXTURE_CUBE_MAP_POSITIVE_X+o;k.bindFramebuffer(k.FRAMEBUFFER,e.__webglFramebuffer[o]),k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,s,a.__webglTexture,0),A(e.__webglRenderbuffer[o],e)}i&&k.generateMipmap(k.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=k.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:k.createRenderbuffer(),k.bindTexture(k.TEXTURE_2D,e.__webglTexture),C(k.TEXTURE_2D,e,i),k.texImage2D(k.TEXTURE_2D,0,r,e.width,e.height,0,r,n,null),r=k.TEXTURE_2D,k.bindFramebuffer(k.FRAMEBUFFER,e.__webglFramebuffer),k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,r,e.__webglTexture,0),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_ATTACHMENT,k.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,e.__webglRenderbuffer):A(e.__webglRenderbuffer,e),i&&k.generateMipmap(k.TEXTURE_2D);t?k.bindTexture(k.TEXTURE_CUBE_MAP,null):k.bindTexture(k.TEXTURE_2D,null),k.bindRenderbuffer(k.RENDERBUFFER,null),k.bindFramebuffer(k.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,e=e.height,n=r=0):(t=null,i=gt,e=vt,r=Et,n=mt),t!==Q&&(k.bindFramebuffer(k.FRAMEBUFFER,t),k.viewport(r,n,i,e),Q=t),Tt=i,yt=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,i){THREE.EventDispatcher.call(this),this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.material=this.color=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,i,r){var n=THREE.ColorUtils.__hsv;e.getHSV(n),n.h=THREE.Math.clamp(n.h+t,0,1),n.s=THREE.Math.clamp(n.s+i,0,1),n.v=THREE.Math.clamp(n.v+r,0,1),e.setHSV(n.h,n.s,n.v)}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){var i,r,n=e.vertices.length,o=t instanceof THREE.Mesh?t.geometry:t,a=e.vertices,s=o.vertices,h=e.faces,l=o.faces,c=e.faceVertexUvs[0],o=o.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,r=new THREE.Matrix3,r.getInverse(i),r.transpose());for(var p=0,u=s.length;u>p;p++){var f=s[p].clone();i&&f.applyMatrix4(i),a.push(f)}for(p=0,u=l.length;u>p;p++){var d,E,f=l[p],m=f.vertexNormals,g=f.vertexColors;for(f instanceof THREE.Face3?d=new THREE.Face3(f.a+n,f.b+n,f.c+n):f instanceof THREE.Face4&&(d=new THREE.Face4(f.a+n,f.b+n,f.c+n,f.d+n)),d.normal.copy(f.normal),r&&d.normal.applyMatrix3(r).normalize(),a=0,s=m.length;s>a;a++)E=m[a].clone(),r&&E.applyMatrix3(r).normalize(),d.vertexNormals.push(E);for(d.color.copy(f.color),a=0,s=g.length;s>a;a++)E=g[a],d.vertexColors.push(E.clone());d.materialIndex=f.materialIndex,d.centroid.copy(f.centroid),i&&d.centroid.applyMatrix4(i),h.push(d)}for(p=0,u=o.length;u>p;p++){for(i=o[p],r=[],a=0,s=i.length;s>a;a++)r.push(new THREE.Vector2(i[a].x,i[a].y));c.push(r)}},removeMaterials:function(e,t){for(var i={},r=0,n=t.length;n>r;r++)i[t[r]]=!0;for(var o,a=[],r=0,n=e.faces.length;n>r;r++)o=e.faces[r],o.materialIndex in i||a.push(o);e.faces=a},randomPointInTriangle:function(e,t,i){var r,n,o,a=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return r=THREE.GeometryUtils.random(),n=THREE.GeometryUtils.random(),r+n>1&&(r=1-r,n=1-n),o=1-r-n,a.copy(e),a.multiplyScalar(r),s.copy(t),s.multiplyScalar(n),a.add(s),s.copy(i),s.multiplyScalar(o),a.add(s),a},randomPointInFace:function(e,t,i){var r,n,o;if(e instanceof THREE.Face3)return r=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(r,n,o);if(e instanceof THREE.Face4){r=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c];var a,t=t.vertices[e.d];return i?e._area1&&e._area2?(i=e._area1,a=e._area2):(i=THREE.GeometryUtils.triangleArea(r,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t),e._area1=i,e._area2=a):(i=THREE.GeometryUtils.triangleArea(r,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t)),i>THREE.GeometryUtils.random()*(i+a)?THREE.GeometryUtils.randomPointInTriangle(r,n,t):THREE.GeometryUtils.randomPointInTriangle(n,o,t)}},randomPointsInGeometry:function(e,t){function i(e){function t(i,r){if(i>r)return i;var n=i+Math.floor((r-i)/2);return f[n]>e?t(i,n-1):e>f[n]?t(n+1,r):n}return t(0,f.length-1)}var r,n,o,a,s,h,l=e.faces,c=e.vertices,p=l.length,u=0,f=[];for(n=0;p>n;n++)r=l[n],r instanceof THREE.Face3?(o=c[r.a],a=c[r.b],s=c[r.c],r._area=THREE.GeometryUtils.triangleArea(o,a,s)):r instanceof THREE.Face4&&(o=c[r.a],a=c[r.b],s=c[r.c],h=c[r.d],r._area1=THREE.GeometryUtils.triangleArea(o,a,h),r._area2=THREE.GeometryUtils.triangleArea(a,s,h),r._area=r._area1+r._area2),u+=r._area,f[n]=u;for(r=[],n=0;t>n;n++)c=THREE.GeometryUtils.random()*u,c=i(c),r[n]=THREE.GeometryUtils.randomPointInFace(l[c],e,!0);return r},triangleArea:function(e,t,i){var r=THREE.GeometryUtils.__v1,n=THREE.GeometryUtils.__v2;return r.subVectors(t,e),n.subVectors(i,e),r.cross(n),.5*r.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new THREE.Vector3;return i.addVectors(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},normalizeUVs:function(e){for(var e=e.faceVertexUvs[0],t=0,i=e.length;i>t;t++)for(var r=e[t],n=0,o=r.length;o>n;n++)1!==r[n].x&&(r[n].x-=Math.floor(r[n].x)),1!==r[n].y&&(r[n].y-=Math.floor(r[n].y))},triangulateQuads:function(e){var t,i,r,n,o=[],a=[],s=[];for(t=0,i=e.faceUvs.length;i>t;t++)a[t]=[];for(t=0,i=e.faceVertexUvs.length;i>t;t++)s[t]=[];for(t=0,i=e.faces.length;i>t;t++)if(r=e.faces[t],r instanceof THREE.Face4){n=r.a;var h=r.b,l=r.c,c=r.d,p=new THREE.Face3,u=new THREE.Face3;for(p.color.copy(r.color),u.color.copy(r.color),p.materialIndex=r.materialIndex,u.materialIndex=r.materialIndex,p.a=n,p.b=h,p.c=c,u.a=h,u.b=l,u.c=c,4===r.vertexColors.length&&(p.vertexColors[0]=r.vertexColors[0].clone(),p.vertexColors[1]=r.vertexColors[1].clone(),p.vertexColors[2]=r.vertexColors[3].clone(),u.vertexColors[0]=r.vertexColors[1].clone(),u.vertexColors[1]=r.vertexColors[2].clone(),u.vertexColors[2]=r.vertexColors[3].clone()),o.push(p,u),r=0,n=e.faceVertexUvs.length;n>r;r++)e.faceVertexUvs[r].length&&(p=e.faceVertexUvs[r][t],h=p[1],l=p[2],c=p[3],p=[p[0].clone(),h.clone(),c.clone()],h=[h.clone(),l.clone(),c.clone()],s[r].push(p,h));for(r=0,n=e.faceUvs.length;n>r;r++)e.faceUvs[r].length&&(h=e.faceUvs[r][t],a[r].push(h,h))}else{for(o.push(r),r=0,n=e.faceUvs.length;n>r;r++)a[r].push(e.faceUvs[r][t]);for(r=0,n=e.faceVertexUvs.length;n>r;r++)s[r].push(e.faceVertexUvs[r][t])}e.faces=o,e.faceUvs=a,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,i,r){for(e=e.faces,r=r||e.length-1,i=i||0;r>=i;i++)e[i].materialIndex=t}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i,r){var n=new Image,o=new THREE.Texture(n,t),t=new THREE.ImageLoader;return t.addEventListener("load",function(e){o.image=e.content,o.needsUpdate=!0,i&&i(o)}),t.addEventListener("error",function(e){r&&r(e.message)}),t.crossOrigin=this.crossOrigin,t.load(e,n),o.sourceFile=e,o},loadCompressedTexture:function(e,t,i,r){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=THREE.ImageUtils.parseDDS(o.response,!0);n.format=e.format,n.mipmaps=e.mipmaps,n.image.width=e.width,n.image.height=e.height,n.generateMipmaps=!1,n.needsUpdate=!0,i&&i(n)},o.onerror=r,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1;for(var t=0,a=e.length;a>t;++t){var s=new Image;n[t]=s,s.onload=function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,i&&i(o))},s.onerror=r,s.crossOrigin=this.crossOrigin,s.src=e[t]}return o},loadCompressedTextureCube:function(e,t,i,r){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;if(o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1,t=function(e,t){return function(){var r=THREE.ImageUtils.parseDDS(e.response,!0);t.format=r.format,t.mipmaps=r.mipmaps,t.width=r.width,t.height=r.height,n.loadCount+=1,6===n.loadCount&&(o.format=r.format,o.needsUpdate=!0,i&&i(o))}},e instanceof Array)for(var a=0,s=e.length;s>a;++a){var h={};n[a]=h;var l=new XMLHttpRequest;l.onload=t(l,h),l.onerror=r,h=e[a],l.open("GET",h,!0),l.responseType="arraybuffer",l.send(null)}else l=new XMLHttpRequest,l.onload=function(){var e=THREE.ImageUtils.parseDDS(l.response,!0);if(e.isCubemap){for(var t=e.mipmaps.length/e.mipmapCount,r=0;t>r;r++){n[r]={mipmaps:[]};for(var a=0;e.mipmapCount>a;a++)n[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+a]),n[r].format=e.format,n[r].width=e.width,n[r].height=e.height}o.format=e.format,o.needsUpdate=!0,i&&i(o)}},l.onerror=r,l.open("GET",e,!0),l.responseType="arraybuffer",l.send(null);return o},parseDDS:function(e,t){function i(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var r={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},n=i("DXT1"),o=i("DXT3"),a=i("DXT5"),s=new Int32Array(e,0,31);if(542327876!==s[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),r;if(4&!s[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),r;var h=s[21];switch(h){case n:n=8,r.format=THREE.RGB_S3TC_DXT1_Format;break;case o:n=16,r.format=THREE.RGBA_S3TC_DXT3_Format;break;case a:n=16,r.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&h,255&h>>8,255&h>>16,255&h>>24)),r}r.mipmapCount=1,131072&s[2]&&!1!==t&&(r.mipmapCount=Math.max(1,s[7])),r.isCubemap=512&s[28]?!0:!1,r.width=s[4],r.height=s[3];for(var s=s[1]+4,o=r.width,a=r.height,h=r.isCubemap?6:1,l=0;h>l;l++){for(var c=0;r.mipmapCount>c;c++){var p=Math.max(4,o)/4*Math.max(4,a)/4*n,u={data:new Uint8Array(e,s,p),width:o,height:a};r.mipmaps.push(u),s+=p,o=Math.max(.5*o,1),a=Math.max(.5*a,1)}o=r.width,a=r.height}return r},getNormalMap:function(e,t){var i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},t=1|t,r=e.width,n=e.height,o=document.createElement("canvas");o.width=r,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,r,n).data,h=a.createImageData(r,n),l=h.data,c=0;r>c;c++)for(var p=0;n>p;p++){var u=0>p-1?0:p-1,f=p+1>n-1?n-1:p+1,d=0>c-1?0:c-1,E=c+1>r-1?r-1:c+1,m=[],g=[0,0,s[4*(p*r+c)]/255*t];for(m.push([-1,0,s[4*(p*r+d)]/255*t]),m.push([-1,-1,s[4*(u*r+d)]/255*t]),m.push([0,-1,s[4*(u*r+c)]/255*t]),m.push([1,-1,s[4*(u*r+E)]/255*t]),m.push([1,0,s[4*(p*r+E)]/255*t]),m.push([1,1,s[4*(f*r+E)]/255*t]),m.push([0,1,s[4*(f*r+c)]/255*t]),m.push([-1,1,s[4*(f*r+d)]/255*t]),u=[],d=m.length,f=0;d>f;f++){var E=m[f],v=m[(f+1)%d],E=[E[0]-g[0],E[1]-g[1],E[2]-g[2]],v=[v[0]-g[0],v[1]-g[1],v[2]-g[2]];u.push(i([E[1]*v[2]-E[2]*v[1],E[2]*v[0]-E[0]*v[2],E[0]*v[1]-E[1]*v[0]]))}for(m=[0,0,0],f=0;u.length>f;f++)m[0]+=u[f][0],m[1]+=u[f][1],m[2]+=u[f][2];m[0]/=u.length,m[1]/=u.length,m[2]/=u.length,g=4*(p*r+c),l[g]=0|255*((m[0]+1)/2),l[g+1]=0|255*((m[1]+1)/2),l[g+2]=0|255*m[2],l[g+3]=255}return a.putImageData(h,0,0),o},generateDataTexture:function(e,t,i){for(var r=e*t,n=new Uint8Array(3*r),o=Math.floor(255*i.r),a=Math.floor(255*i.g),i=Math.floor(255*i.b),s=0;r>s;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=i;return e=new THREE.DataTexture(n,e,t,THREE.RGBFormat),e.needsUpdate=!0,e}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new THREE.Object3D,r=0,n=t.length;n>r;r++)i.add(new THREE.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){for(var t=this.getFace(),i=this.size/t.resolution,r=0,n=(e+"").split(""),o=n.length,a=[],e=0;o>e;e++){var s=new THREE.Path,s=this.extractGlyphPoints(n[e],t,i,r,s),r=r+s.offset;a.push(s.path)}return{paths:a,offset:r/2}},extractGlyphPoints:function(e,t,i,r,n){var o,a,s,h,l,c,p,u,f,d,E,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(t=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),h=t.length,e=0;h>e;)switch(s=t[e++]){case"m":s=t[e++]*i+r,l=t[e++]*i,n.moveTo(s,l);break;case"l":s=t[e++]*i+r,l=t[e++]*i,n.lineTo(s,l);break;case"q":if(s=t[e++]*i+r,l=t[e++]*i,u=t[e++]*i+r,f=t[e++]*i,n.quadraticCurveTo(u,f,s,l),o=m[m.length-1])for(c=o.x,p=o.y,o=1,a=this.divisions;a>=o;o++){var v=o/a;THREE.Shape.Utils.b2(v,c,u,s),THREE.Shape.Utils.b2(v,p,f,l)}break;case"b":if(s=t[e++]*i+r,l=t[e++]*i,u=t[e++]*i+r,f=t[e++]*-i,d=t[e++]*i+r,E=t[e++]*-i,n.bezierCurveTo(s,l,u,f,d,E),o=m[m.length-1])for(c=o.x,p=o.y,o=1,a=this.divisions;a>=o;o++)v=o/a,THREE.Shape.Utils.b3(v,c,u,d,s),THREE.Shape.Utils.b3(v,p,f,E,l)}return{offset:g.ha*i,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){var t=t||{},i=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",n=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";for(THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=i,THREE.FontUtils.face=r,THREE.FontUtils.weight=n,THREE.FontUtils.style=o,i=THREE.FontUtils.drawText(e).paths,r=[],n=0,o=i.length;o>n;n++)Array.prototype.push.apply(r,i[n].toShapes());return r},function(e){var t=function(e){for(var t=e.length,i=0,r=t-1,n=0;t>n;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i};return e.Triangulate=function(e,i){var r=e.length;if(3>r)return null;var n,o,a,s=[],h=[],l=[];if(t(e)>0)for(o=0;r>o;o++)h[o]=o;else for(o=0;r>o;o++)h[o]=r-1-o;var c=2*r;for(o=r-1;r>2;){if(0>=c--){console.log("Warning, unable to triangulate polygon!");break}n=o,n>=r&&(n=0),o=n+1,o>=r&&(o=0),a=o+1,a>=r&&(a=0);var p;e:{var u=p=void 0,f=void 0,d=void 0,E=void 0,m=void 0,g=void 0,v=void 0,T=void 0,u=e[h[n]].x,f=e[h[n]].y,d=e[h[o]].x,E=e[h[o]].y,m=e[h[a]].x,g=e[h[a]].y;if(1e-10>(d-u)*(g-f)-(E-f)*(m-u))p=!1;else{var y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,w=void 0,b=void 0,S=void 0,M=void 0,C=void 0,M=S=b=T=v=void 0,y=m-d,R=g-E,x=u-m,H=f-g,_=d-u,w=E-f;for(p=0;r>p;p++)if(p!==n&&p!==o&&p!==a&&(v=e[h[p]].x,T=e[h[p]].y,b=v-u,S=T-f,M=v-d,C=T-E,v-=m,T-=g,M=y*C-R*M,b=_*S-w*b,S=x*T-H*v,M>=0&&S>=0&&b>=0)){p=!1;break e}p=!0}}if(p){for(s.push([e[h[n]],e[h[o]],e[h[a]]]),l.push([h[n],h[o],h[a]]),n=o,a=o+1;r>a;n++,a++)h[n]=h[a];r--,c=2*r}}return i?l:s},e.Triangulate.area=t,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPoint(t/e));return i},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPointAt(t/e));return i},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],n=this.getPoint(0),o=0;for(r.push(0),i=1;e>=i;i++)t=this.getPoint(i/e),o+=t.distanceTo(n),r.push(o),n=t;return this.cacheArcLengths=r},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var i,r=this.getLengths(),n=0,o=r.length;i=t?t:e*r[o-1];for(var a,s=0,h=o-1;h>=s;)if(n=Math.floor(s+(h-s)/2),a=r[n]-i,0>a)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}return n=h,r[n]==i?n/(o-1):(s=r[n],r=(n+(i-s)/(r[n+1]-s))/(o-1))},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4,e=e+1e-4;return 0>t&&(t=0),e>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return e=this.getUtoTmapping(e),this.getTangent(e)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t=new THREE.Vector2(t,e),t.normalize(),t},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,i=new THREE.Vector2,r=[],n=this.points;return t=(n.length-1)*e,e=Math.floor(t),t-=e,r[0]=0==e?e:e-1,r[1]=e,r[2]=e>n.length-2?n.length-1:e+1,r[3]=e>n.length-3?n.length-1:e+2,i.x=THREE.Curve.Utils.interpolate(n[r[0]].x,n[r[1]].x,n[r[2]].x,n[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(n[r[0]].y,n[r[1]].y,n[r[2]].y,n[r[3]].y,t),i},THREE.EllipseCurve=function(e,t,i,r,n,o,a){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return this.aClockwise||(e=1-e),t=this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t),t=this.aY+this.yRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.ArcCurve=function(e,t,i,r,n,o){THREE.EllipseCurve.call(this,e,t,i,i,r,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,n){var e=.5*(i-e),r=.5*(r-t),o=n*n;return(2*t-2*i+e+r)*n*o+(-3*t+3*i-2*e-r)*o+e*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;
return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,i){this.v0=e,this.v1=t,this.v2=i},function(e){var t,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},function(e){var t,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,e)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i=new THREE.Vector3,r=[],n=this.points,e=(n.length-1)*e;t=Math.floor(e),e-=t,r[0]=0==t?t:t-1,r[1]=t,r[2]=t>n.length-2?n.length-1:t+1,r[3]=t>n.length-3?n.length-1:t+2,t=n[r[0]];var o=n[r[1]],a=n[r[2]],r=n[r[3]];return i.x=THREE.Curve.Utils.interpolate(t.x,o.x,a.x,r.x,e),i.y=THREE.Curve.Utils.interpolate(t.y,o.y,a.y,r.y,e),i.z=THREE.Curve.Utils.interpolate(t.z,o.z,a.z,r.z,e),i}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,i=new THREE.Vector3,r=[],n=this.points;return t=(n.length-0)*e,e=Math.floor(t),t-=e,e+=e>0?0:(Math.floor(Math.abs(e)/n.length)+1)*n.length,r[0]=(e-1)%n.length,r[1]=e%n.length,r[2]=(e+1)%n.length,r[3]=(e+2)%n.length,i.x=THREE.Curve.Utils.interpolate(n[r[0]].x,n[r[1]].x,n[r[2]].x,n[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(n[r[0]].y,n[r[1]].y,n[r[2]].y,n[r[3]].y,t),i.z=THREE.Curve.Utils.interpolate(n[r[0]].z,n[r[1]].z,n[r[2]].z,n[r[3]].z,t),i}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),i=this.getCurveLengths(),e=0;i.length>e;){if(i[e]>=t)return t=i[e]-t,e=this.curves[e],t=1-t/e.getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],i=0,r=this.curves.length;for(e=0;r>e;e++)i+=this.curves[e].getLength(),t.push(i);return this.cacheLengths=t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,i,r,n,o,a=this.getPoints();e=t=Number.NEGATIVE_INFINITY,r=n=Number.POSITIVE_INFINITY;var s,h,l,c,p=a[0]instanceof THREE.Vector3;for(c=p?new THREE.Vector3:new THREE.Vector2,h=0,l=a.length;l>h;h++)s=a[h],s.x>e?e=s.x:r>s.x&&(r=s.x),s.y>t?t=s.y:n>s.y&&(n=s.y),p&&(s.z>i?i=s.z:o>s.z&&(o=s.z)),c.add(s);return a={minX:r,minY:n,maxX:e,maxY:t,centroid:c.divideScalar(l)},p&&(a.maxZ=i,a.minZ=o),a},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e,!0),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0;e.length>i;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,e[i].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var i,r,n=this.getPoints(e);for(t||(t=this.bends),i=0,r=t.length;r>i;i++)n=this.getWrapPoints(n,t[i]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i,r,n=this.getSpacedPoints(e);for(t||(t=this.bends),i=0,r=t.length;r>i;i++)n=this.getWrapPoints(n,t[i]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var i,r,n,o,a,s,h=this.getBoundingBox();for(i=0,r=e.length;r>i;i++)n=e[i],o=n.x,a=n.y,s=o/h.maxX,s=t.getUtoTmapping(s,o),o=t.getPoint(s),a=t.getNormalVector(s).multiplyScalar(a),n.x=o.x+a.x,n.y=o.y+a.y;return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;i>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(){var e=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:e})},THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,r=new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t));this.curves.push(r),this.actions.push({action:THREE.PathActions.LINE_TO,args:i})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,o=new THREE.QuadraticBezierCurve(new THREE.Vector2(o[o.length-2],o[o.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(o),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,s=new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,o));this.curves.push(s),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),i=new THREE.SplineCurve(i),this.curves.push(i),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],i,r,n,o)},THREE.Path.prototype.absarc=function(e,t,i,r,n,o){this.absellipse(e,t,i,i,r,n,o)},THREE.Path.prototype.ellipse=function(e,t,i,r,n,o,a){var s=this.actions[this.actions.length-1].args;this.absellipse(e+s[s.length-2],t+s[s.length-1],i,r,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,i,r,n,o,a){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(e,t,i,r,n,o,a);this.curves.push(h),h=h.getPoint(a?1:0),s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],i=0;e>i;i++)t.push(this.getPoint(i/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);var i,r,n,o,a,s,h,l,c,p,u,f,d,e=e||12,E=[];for(i=0,r=this.actions.length;r>i;i++)switch(n=this.actions[i],o=n.action,n=n.args,o){case THREE.PathActions.MOVE_TO:E.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.LINE_TO:E.push(new THREE.Vector2(n[0],n[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=n[2],s=n[3],c=n[0],p=n[1],E.length>0?(o=E[E.length-1],u=o.x,f=o.y):(o=this.actions[i-1].args,u=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)d=n/e,o=THREE.Shape.Utils.b2(d,u,c,a),d=THREE.Shape.Utils.b2(d,f,p,s),E.push(new THREE.Vector2(o,d));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=n[4],s=n[5],c=n[0],p=n[1],h=n[2],l=n[3],E.length>0?(o=E[E.length-1],u=o.x,f=o.y):(o=this.actions[i-1].args,u=o[o.length-2],f=o[o.length-1]),n=1;e>=n;n++)d=n/e,o=THREE.Shape.Utils.b3(d,u,c,h,a),d=THREE.Shape.Utils.b3(d,f,p,l,s),E.push(new THREE.Vector2(o,d));break;case THREE.PathActions.CSPLINE_THRU:for(o=this.actions[i-1].args,d=[new THREE.Vector2(o[o.length-2],o[o.length-1])],o=e*n[0].length,d=d.concat(n[0]),d=new THREE.SplineCurve(d),n=1;o>=n;n++)E.push(d.getPointAt(n/o));break;case THREE.PathActions.ARC:for(a=n[0],s=n[1],p=n[2],h=n[3],o=n[4],c=!!n[5],u=o-h,f=2*e,n=1;f>=n;n++)d=n/f,c||(d=1-d),d=h+d*u,o=a+p*Math.cos(d),d=s+p*Math.sin(d),E.push(new THREE.Vector2(o,d));break;case THREE.PathActions.ELLIPSE:for(a=n[0],s=n[1],p=n[2],l=n[3],h=n[4],o=n[5],c=!!n[6],u=o-h,f=2*e,n=1;f>=n;n++)d=n/f,c||(d=1-d),d=h+d*u,o=a+p*Math.cos(d),d=s+l*Math.sin(d),E.push(new THREE.Vector2(o,d))}return i=E[E.length-1],1e-10>Math.abs(i.x-E[0].x)&&1e-10>Math.abs(i.y-E[0].y)&&E.splice(E.length-1,1),t&&E.push(E[0]),E},THREE.Path.prototype.toShapes=function(){var e,t,i,r,n=[],o=new THREE.Path;for(e=0,t=this.actions.length;t>e;e++)i=this.actions[e],r=i.args,i=i.action,i==THREE.PathActions.MOVE_TO&&0!=o.actions.length&&(n.push(o),o=new THREE.Path),o[i].apply(o,r);if(0!=o.actions.length&&n.push(o),0==n.length)return[];var a;if(r=[],e=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),1==n.length)return o=n[0],a=new THREE.Shape,a.actions=o.actions,a.curves=o.curves,r.push(a),r;if(e)for(a=new THREE.Shape,e=0,t=n.length;t>e;e++)o=n[e],THREE.Shape.Utils.isClockWise(o.getPoints())?(a.actions=o.actions,a.curves=o.curves,r.push(a),a=new THREE.Shape):a.holes.push(o);else{for(e=0,t=n.length;t>e;e++)o=n[e],THREE.Shape.Utils.isClockWise(o.getPoints())?(a&&r.push(a),a=new THREE.Shape,a.actions=o.actions,a.curves=o.curves):a.holes.push(o);r.push(a)}return r},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;i>t;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;i>t;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var i,r,n,o,a,s,h,l,c,p,u=e.concat(),f=u.concat(),d=[];for(a=0;t.length>a;a++){for(s=t[a],Array.prototype.push.apply(f,s),r=Number.POSITIVE_INFINITY,i=0;s.length>i;i++)for(c=s[i],p=[],l=0;u.length>l;l++)h=u[l],h=c.distanceToSquared(h),p.push(h),r>h&&(r=h,n=i,o=l);i=o-1>=0?o-1:u.length-1,r=n-1>=0?n-1:s.length-1;var E=[s[n],u[o],u[i]];l=THREE.FontUtils.Triangulate.area(E);var m=[s[n],s[r],u[o]];c=THREE.FontUtils.Triangulate.area(m),p=o,h=n,o+=1,n+=-1,0>o&&(o+=u.length),o%=u.length,0>n&&(n+=s.length),n%=s.length,i=o-1>=0?o-1:u.length-1,r=n-1>=0?n-1:s.length-1,E=[s[n],u[o],u[i]],E=THREE.FontUtils.Triangulate.area(E),m=[s[n],s[r],u[o]],m=THREE.FontUtils.Triangulate.area(m),l+c>E+m&&(o=p,n=h,0>o&&(o+=u.length),o%=u.length,0>n&&(n+=s.length),n%=s.length,i=o-1>=0?o-1:u.length-1,r=n-1>=0?n-1:s.length-1),l=u.slice(0,o),c=u.slice(o),p=s.slice(n),h=s.slice(0,n),r=[s[n],s[r],u[o]],d.push([s[n],u[o],u[i]]),d.push(r),u=l.concat(p).concat(h).concat(c)}return{shape:u,isolatedPts:d,allpoints:f}},triangulateShape:function(e,t){var i,r,n,o,a=THREE.Shape.Utils.removeHoles(e,t),s=a.allpoints,h=a.isolatedPts,a=THREE.FontUtils.Triangulate(a.shape,!1),l={};for(i=0,r=s.length;r>i;i++)o=s[i].x+":"+s[i].y,void 0!==l[o]&&console.log("Duplicate point",o),l[o]=i;for(i=0,r=a.length;r>i;i++)for(n=a[i],s=0;3>s;s++)o=n[s].x+":"+n[s].y,o=l[o],void 0!==o&&(n[s]=o);for(i=0,r=h.length;r>i;i++)for(n=h[i],s=0;3>s;s++)o=n[s].x+":"+n[s].y,o=l[o],void 0!==o&&(n[s]=o);return a.concat(h)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,n){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,n)}},THREE.AnimationHandler=function(){var e=[],t={},i={update:function(t){for(var i=0;e.length>i;i++)e[i].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){t=e.indexOf(t),-1!==t&&e.splice(t,1)},add:function(e){if(void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,!0!==e.initialized){for(var i=0;e.hierarchy.length>i;i++){for(var r=0;e.hierarchy[i].keys.length>r;r++)if(0>e.hierarchy[i].keys[r].time&&(e.hierarchy[i].keys[r].time=0),void 0!==e.hierarchy[i].keys[r].rot&&!(e.hierarchy[i].keys[r].rot instanceof THREE.Quaternion)){var n=e.hierarchy[i].keys[r].rot;e.hierarchy[i].keys[r].rot=new THREE.Quaternion(n[0],n[1],n[2],n[3])}if(e.hierarchy[i].keys.length&&void 0!==e.hierarchy[i].keys[0].morphTargets){for(n={},r=0;e.hierarchy[i].keys.length>r;r++)for(var o=0;e.hierarchy[i].keys[r].morphTargets.length>o;o++){var a=e.hierarchy[i].keys[r].morphTargets[o];n[a]=-1}for(e.hierarchy[i].usedMorphTargets=n,r=0;e.hierarchy[i].keys.length>r;r++){var s={};for(a in n){for(o=0;e.hierarchy[i].keys[r].morphTargets.length>o;o++)if(e.hierarchy[i].keys[r].morphTargets[o]===a){s[a]=e.hierarchy[i].keys[r].morphTargetsInfluences[o];break}o===e.hierarchy[i].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[i].keys[r].morphTargetsInfluences=s}}for(r=1;e.hierarchy[i].keys.length>r;r++)e.hierarchy[i].keys[r].time===e.hierarchy[i].keys[r-1].time&&(e.hierarchy[i].keys.splice(r,1),r--);for(r=0;e.hierarchy[i].keys.length>r;r++)e.hierarchy[i].keys[r].index=r}for(r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[],i=0;e.hierarchy.length>i;i++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){return"string"==typeof e?t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null):void 0},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;e.bones.length>i;i++)t.push(e.bones[i]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var i=0;e.children.length>i;i++)r(e.children[i],t)};return i.LINEAR=0,i.CATMULLROM=1,i.CATMULLROM_FORWARD=2,i}(),THREE.Animation=function(e,t,i){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==i?i:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!1===this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var i,r,n=this.hierarchy.length;for(i=0;n>i;i++){r=this.hierarchy[i],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(r.useQuaternion=!0),r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey={pos:0,rot:0,scl:0},r.animationCache.nextKey={pos:0,rot:0,scl:0},r.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix);var o=r.animationCache.prevKey;r=r.animationCache.nextKey,o.pos=this.data.hierarchy[i].keys[0],o.rot=this.data.hierarchy[i].keys[0],o.scl=this.data.hierarchy[i].keys[0],r.pos=this.getNextKeyWith("pos",i,1),r.rot=this.getNextKeyWith("rot",i,1),r.scl=this.getNextKeyWith("scl",i,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(!1!==this.isPlaying){var t,i,r,n,o,a,s,h,l,c=["pos","rot","scl"];l=this.currentTime+=e*this.timeScale,h=this.currentTime%=this.data.length,parseInt(Math.min(h*this.data.fps,this.data.length*this.data.fps),10);for(var p=0,u=this.hierarchy.length;u>p;p++){e=this.hierarchy[p],s=e.animationCache;for(var f=0;3>f;f++){if(t=c[f],o=s.prevKey[t],a=s.nextKey[t],l>=a.time){if(l>h){if(!this.loop)return this.stop(),void 0;for(o=this.data.hierarchy[p].keys[0],a=this.getNextKeyWith(t,p,1);h>a.time;)o=a,a=this.getNextKeyWith(t,p,a.index+1)}else do o=a,a=this.getNextKeyWith(t,p,a.index+1);while(h>a.time);s.prevKey[t]=o,s.nextKey[t]=a}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,i=(h-o.time)/(a.time-o.time),r=o[t],n=a[t],(0>i||i>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+i+" on bone "+p),i=0>i?0:1),"pos"===t?(t=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(t.x=r[0]+(n[0]-r[0])*i,t.y=r[1]+(n[1]-r[1])*i,t.z=r[2]+(n[2]-r[2])*i):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",p,o.index-1).pos,this.points[1]=r,this.points[2]=n,this.points[3]=this.getNextKeyWith("pos",p,a.index+1).pos,i=.33*i+.33,r=this.interpolateCatmullRom(this.points,i),t.x=r[0],t.y=r[1],t.z=r[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(i=this.interpolateCatmullRom(this.points,1.01*i),this.target.set(i[0],i[1],i[2]),this.target.sub(t),this.target.y=0,this.target.normalize(),i=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,i,0)))):"rot"===t?THREE.Quaternion.slerp(r,n,e.quaternion,i):"scl"===t&&(t=e.scale,t.x=r[0]+(n[0]-r[0])*i,t.y=r[1]+(n[1]-r[1])*i,t.z=r[2]+(n[2]-r[2])*i)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var i,r,n,o,a,s,h=[],l=[];return i=(e.length-1)*t,r=Math.floor(i),i-=r,h[0]=0===r?r:r-1,h[1]=r,h[2]=r>e.length-2?r:r+1,h[3]=r>e.length-3?r:r+2,r=e[h[0]],o=e[h[1]],a=e[h[2]],s=e[h[3]],h=i*i,n=i*h,l[0]=this.interpolate(r[0],o[0],a[0],s[0],i,h,n),l[1]=this.interpolate(r[1],o[1],a[1],s[1],i,h,n),l[2]=this.interpolate(r[2],o[2],a[2],s[2],i,h,n),l},THREE.Animation.prototype.interpolate=function(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r.length-1>i?i:r.length-1:i%r.length;r.length>i;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,i){for(var r=this.data.hierarchy[t].keys,i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,i){for(this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0!==i?i:!0,e=0,t=this.hierarchy.length;t>e;e++){var i=this.data.hierarchy[e].sids,r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&i){for(var n=0;i.length>n;n++){var o=i[n],a=this.getNextKeyWith(o,e,0);a&&a.apply(o)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var i,r,n,o=this.hierarchy.length;for(i=0;o>i;i++)r=this.hierarchy[i],n=this.data.hierarchy[i],r.useQuaternion=!0,void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey=null,n.animationCache.nextKey=null,n.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix),r=this.data.hierarchy[i].keys,r.length&&(n.animationCache.prevKey=r[0],n.animationCache.nextKey=r[1],this.startTime=Math.min(r[0].time,this.startTime),this.endTime=Math.max(r[r.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;this.data.hierarchy.length>e;e++){var t=this.hierarchy[e],i=this.data.hierarchy[e];if(void 0!==i.animationCache){var r=i.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete i.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,i,r,n,o,a,s,h=this.data.JIT.hierarchy;if(a=this.currentTime+=e*this.timeScale,o=this.currentTime%=this.data.length,this.startTimeMs>o&&(o=this.currentTime=this.startTimeMs+o),n=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10),(s=a>o)&&!this.loop){for(var e=0,l=this.hierarchy.length;l>e;e++){var c=this.data.hierarchy[e].keys,h=this.data.hierarchy[e].sids;if(r=c.length-1,n=this.hierarchy[e],c.length){for(c=0;h.length>c;c++)o=h[c],(a=this.getPrevKeyWith(o,e,r))&&a.apply(o);this.data.hierarchy[e].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(this.startTime>o)){for(e=0,l=this.hierarchy.length;l>e;e++){r=this.hierarchy[e],t=this.data.hierarchy[e];var c=t.keys,p=t.animationCache;if(this.JITCompile&&void 0!==h[e][n])r instanceof THREE.Bone?(r.skinMatrix=h[e][n],r.matrixWorldNeedsUpdate=!1):(r.matrix=h[e][n],r.matrixWorldNeedsUpdate=!0);else if(c.length){if(this.JITCompile&&p&&(r instanceof THREE.Bone?r.skinMatrix=p.originalMatrix:r.matrix=p.originalMatrix),t=p.prevKey,i=p.nextKey,t&&i){if(a>=i.time){if(s&&this.loop)for(t=c[0],i=c[1];o>i.time;)t=i,i=c[t.index+1];else if(!s)for(var u=c.length-1;o>i.time&&i.index!==u;)t=i,i=c[t.index+1];p.prevKey=t,p.nextKey=i}i.time>=o?t.interpolate(i,o):t.interpolate(i,i.time)}this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===h[0][n])for(this.hierarchy[0].updateMatrixWorld(!0),e=0;this.hierarchy.length>e;e++)h[e][n]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i%=t.length;t.length>i;i++)if(t[i].hasTarget(e))return t[i];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i=i>=0?i:i+t.length;i>=0;i--)if(t[i].hasTarget(e))return t[i];return t[t.length-1]},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,l=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,n,i),i.activeCubeFace=2,e.render(t,o,i),i.activeCubeFace=3,e.render(t,a,i),i.activeCubeFace=4,e.render(t,s,i),i.generateMipmaps=l,i.activeCubeFace=5,e.render(t,h,i)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,i,r,n,o,a){THREE.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(i,e/t,r,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2,t=Math.tan(this.fov/2)*t,e=2*t*e/2,t=t/this.zoom,e=e/this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var i=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(i),i},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var i=.707*e,r=.707*t,i=[[e,0,0],[t,0,0],[-e,0,0],[-t,0,0],[0,e,0],[0,t,0],[0,-e,0],[0,-t,0],[0,0,e],[0,0,t],[0,0,-e],[0,0,-t],[i,i,0],[r,r,0],[-i,-i,0],[-r,-r,0],[i,-i,0],[r,-r,0],[-i,i,0],[-r,r,0],[i,0,i],[r,0,r],[-i,0,-i],[-r,0,-r],[i,0,-i],[r,0,-r],[-i,0,i],[-r,0,r],[0,i,i],[0,r,r],[0,-i,-i],[0,-r,-r],[0,i,-i],[0,r,-r],[0,-i,i],[0,-r,r]],r=0,n=i.length;n>r;r++)this.vertices.push(new THREE.Vector3(i[r][0],i[r][1],i[r][2]))},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,i,r){THREE.Geometry.call(this);var n,e=e||50,i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI,t=void 0!==t?Math.max(3,t):8,o=[];n=new THREE.Vector3;var a=new THREE.Vector2(.5,.5);for(this.vertices.push(n),o.push(a),n=0;t>=n;n++){var s=new THREE.Vector3;s.x=e*Math.cos(i+n/t*r),s.y=e*Math.sin(i+n/t*r),this.vertices.push(s),o.push(new THREE.Vector2((s.x/e+1)/2,-(s.y/e+1)/2+1))}for(i=new THREE.Vector3(0,0,-1),n=1;t>=n;n++)this.faces.push(new THREE.Face3(n,n+1,0,[i,i,i])),this.faceVertexUvs[0].push([o[n],o[n+1],a]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n,o,a,h){var l,c=s.widthSegments,p=s.heightSegments,u=n/2,f=o/2,d=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?l="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(l="y",p=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(l="x",c=s.depthSegments);var E=c+1,m=p+1,g=n/c,v=o/p,T=new THREE.Vector3;for(T[l]=a>0?1:-1,n=0;m>n;n++)for(o=0;E>o;o++){var y=new THREE.Vector3;y[e]=(o*g-u)*i,y[t]=(n*v-f)*r,y[l]=a,s.vertices.push(y)}for(n=0;p>n;n++)for(o=0;c>o;o++)e=new THREE.Face4(o+E*n+d,o+E*(n+1)+d,o+1+E*(n+1)+d,o+1+E*n+d),e.normal.copy(T),e.vertexNormals.push(T.clone(),T.clone(),T.clone(),T.clone()),e.materialIndex=h,s.faces.push(e),s.faceVertexUvs[0].push([new THREE.Vector2(o/c,1-n/p),new THREE.Vector2(o/c,1-(n+1)/p),new THREE.Vector2((o+1)/c,1-(n+1)/p),new THREE.Vector2((o+1)/c,1-n/p)])}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=i,this.widthSegments=r||1,this.heightSegments=n||1,this.depthSegments=o||1,e=this.width/2,t=this.height/2,i=this.depth/2,a("z","y",-1,-1,this.depth,this.height,e,0),a("z","y",1,-1,this.depth,this.height,-e,1),a("x","z",1,1,this.width,this.depth,t,2),a("x","z",1,-1,this.width,this.depth,-t,3),a("x","y",1,-1,this.width,this.height,i,4),a("x","y",-1,-1,this.width,this.height,-i,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this);var a,s,e=void 0!==e?e:20,t=void 0!==t?t:20,i=void 0!==i?i:100,h=i/2,r=r||8,n=n||1,l=[],c=[];for(s=0;n>=s;s++){var p=[],u=[],f=s/n,d=f*(t-e)+e;for(a=0;r>=a;a++){var E=a/r,m=new THREE.Vector3;m.x=d*Math.sin(2*E*Math.PI),m.y=-f*i+h,m.z=d*Math.cos(2*E*Math.PI),this.vertices.push(m),p.push(this.vertices.length-1),u.push(new THREE.Vector2(E,1-f))}l.push(p),c.push(u)}for(i=(t-e)/i,a=0;r>a;a++)for(0!==e?(p=this.vertices[l[0][a]].clone(),u=this.vertices[l[0][a+1]].clone()):(p=this.vertices[l[1][a]].clone(),u=this.vertices[l[1][a+1]].clone()),p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*i).normalize(),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*i).normalize(),s=0;n>s;s++){var f=l[s][a],d=l[s+1][a],E=l[s+1][a+1],m=l[s][a+1],g=p.clone(),v=p.clone(),T=u.clone(),y=u.clone(),R=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),_=c[s][a+1].clone();
this.faces.push(new THREE.Face4(f,d,E,m,[g,v,T,y])),this.faceVertexUvs[0].push([R,x,H,_])}if(!o&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;r>a;a++)f=l[0][a],d=l[0][a+1],E=this.vertices.length-1,g=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),R=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.Vector2(x.u,0),this.faces.push(new THREE.Face3(f,d,E,[g,v,T])),this.faceVertexUvs[0].push([R,x,H]);if(!o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;r>a;a++)f=l[s][a+1],d=l[s][a],E=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),R=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.Vector2(x.u,1),this.faces.push(new THREE.Face3(f,d,E,[g,v,T])),this.faceVertexUvs[0].push([R,x,H]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){void 0!==e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;i>r;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t||console.log("die"),t.clone().multiplyScalar(i).add(e)}function r(e,t,i){var r=THREE.ExtrudeGeometry.__v1,n=THREE.ExtrudeGeometry.__v2,o=THREE.ExtrudeGeometry.__v3,a=THREE.ExtrudeGeometry.__v4,s=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),n.set(e.x-i.x,e.y-i.y),r=r.normalize(),n=n.normalize(),o.set(-r.y,r.x),a.set(n.y,-n.x),s.copy(e).add(o),h.copy(e).add(a),s.equals(h)?a.clone():(s.copy(t).add(o),h.copy(i).add(a),o=r.dot(a),a=h.sub(s).dot(a),0===o&&(console.log("Either infinite or no solutions!"),0===a?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),a/=o,0>a?(t=Math.atan2(t.y-e.y,t.x-e.x),e=Math.atan2(i.y-e.y,i.x-e.x),t>e&&(e+=2*Math.PI),i=(t+e)/2,e=-Math.cos(i),i=-Math.sin(i),new THREE.Vector2(e,i)):r.multiplyScalar(a).add(s).sub(e).clone())}function n(i,r){var n,o;for(B=i.length;--B>=0;){n=B,o=B-1,0>o&&(o=i.length-1);for(var a=0,s=v+2*E,a=0;s>a;a++){var h=U*a,l=U*(a+1),c=r+n+h,h=r+o+h,p=r+o+l,l=r+n+l,u=i,f=a,d=s,m=n,g=o,c=c+M,h=h+M,p=p+M,l=l+M;S.faces.push(new THREE.Face4(c,h,p,l,null,null,x)),c=H.generateSideWallUV(S,e,u,t,c,h,p,l,f,d,m,g),S.faceVertexUvs[0].push(c)}}}function o(e,t,i){S.vertices.push(new THREE.Vector3(e,t,i))}function a(i,r,n,o){i+=M,r+=M,n+=M,S.faces.push(new THREE.Face3(i,r,n,null,null,R)),i=o?H.generateBottomUV(S,e,t,i,r,n):H.generateTopUV(S,e,t,i,r,n),S.faceVertexUvs[0].push(i)}var s,h,l,c,p,u=void 0!==t.amount?t.amount:100,f=void 0!==t.bevelThickness?t.bevelThickness:6,d=void 0!==t.bevelSize?t.bevelSize:f-2,E=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,v=void 0!==t.steps?t.steps:1,T=t.extrudePath,y=!1,R=t.material,x=t.extrudeMaterial,H=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;T&&(s=T.getSpacedPoints(v),y=!0,m=!1,h=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,v,!1),l=new THREE.Vector3,c=new THREE.Vector3,p=new THREE.Vector3),m||(d=f=E=0);var _,w,b,S=this,M=this.vertices.length,g=e.extractPoints(g),C=g.shape,g=g.holes;if(T=!THREE.Shape.Utils.isClockWise(C)){for(C=C.reverse(),w=0,b=g.length;b>w;w++)_=g[w],THREE.Shape.Utils.isClockWise(_)&&(g[w]=_.reverse());T=!1}var A=THREE.Shape.Utils.triangulateShape(C,g),T=C;for(w=0,b=g.length;b>w;w++)_=g[w],C=C.concat(_);var P,L,D,F,U=C.length,z=A.length,V=[],B=0,N=T.length;for(P=N-1,L=B+1;N>B;B++,P++,L++)P===N&&(P=0),L===N&&(L=0),V[B]=r(T[B],T[P],T[L]);var I,O=[],k=V.concat();for(w=0,b=g.length;b>w;w++){for(_=g[w],I=[],B=0,N=_.length,P=N-1,L=B+1;N>B;B++,P++,L++)P===N&&(P=0),L===N&&(L=0),I[B]=r(_[B],_[P],_[L]);O.push(I),k=k.concat(I)}for(P=0;E>P;P++){for(_=P/E,D=f*(1-_),L=d*Math.sin(_*Math.PI/2),B=0,N=T.length;N>B;B++)F=i(T[B],V[B],L),o(F.x,F.y,-D);for(w=0,b=g.length;b>w;w++)for(_=g[w],I=O[w],B=0,N=_.length;N>B;B++)F=i(_[B],I[B],L),o(F.x,F.y,-D)}for(L=d,B=0;U>B;B++)F=m?i(C[B],k[B],L):C[B],y?(c.copy(h.normals[0]).multiplyScalar(F.x),l.copy(h.binormals[0]).multiplyScalar(F.y),p.copy(s[0]).add(c).add(l),o(p.x,p.y,p.z)):o(F.x,F.y,0);for(_=1;v>=_;_++)for(B=0;U>B;B++)F=m?i(C[B],k[B],L):C[B],y?(c.copy(h.normals[_]).multiplyScalar(F.x),l.copy(h.binormals[_]).multiplyScalar(F.y),p.copy(s[_]).add(c).add(l),o(p.x,p.y,p.z)):o(F.x,F.y,u/v*_);for(P=E-1;P>=0;P--){for(_=P/E,D=f*(1-_),L=d*Math.sin(_*Math.PI/2),B=0,N=T.length;N>B;B++)F=i(T[B],V[B],L),o(F.x,F.y,u+D);for(w=0,b=g.length;b>w;w++)for(_=g[w],I=O[w],B=0,N=_.length;N>B;B++)F=i(_[B],I[B],L),y?o(F.x,F.y+s[v-1].y,s[v-1].x+D):o(F.x,F.y,u+D)}if(m){for(f=0*U,B=0;z>B;B++)u=A[B],a(u[2]+f,u[1]+f,u[0]+f,!0);for(f=U*(v+2*E),B=0;z>B;B++)u=A[B],a(u[0]+f,u[1]+f,u[2]+f,!1)}else{for(B=0;z>B;B++)u=A[B],a(u[2],u[1],u[0],!0);for(B=0;z>B;B++)u=A[B],a(u[0]+U*v,u[1]+U*v,u[2]+U*v,!1)}for(u=0,n(T,u),u+=T.length,w=0,b=g.length;b>w;w++)_=g[w],n(_,u),u+=_.length},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,n,o){return t=e.vertices[n].x,n=e.vertices[n].y,i=e.vertices[o].x,o=e.vertices[o].y,[new THREE.Vector2(e.vertices[r].x,e.vertices[r].y),new THREE.Vector2(t,n),new THREE.Vector2(i,o)]},generateBottomUV:function(e,t,i,r,n,o){return this.generateTopUV(e,t,i,r,n,o)},generateSideWallUV:function(e,t,i,r,n,o,a,s){var t=e.vertices[n].x,i=e.vertices[n].y,n=e.vertices[n].z,r=e.vertices[o].x,h=e.vertices[o].y,o=e.vertices[o].z,l=e.vertices[a].x,c=e.vertices[a].y,a=e.vertices[a].z,p=e.vertices[s].x,u=e.vertices[s].y,e=e.vertices[s].z;return.01>Math.abs(i-h)?[new THREE.Vector2(t,1-n),new THREE.Vector2(r,1-o),new THREE.Vector2(l,1-a),new THREE.Vector2(p,1-e)]:[new THREE.Vector2(i,1-n),new THREE.Vector2(h,1-o),new THREE.Vector2(c,1-a),new THREE.Vector2(u,1-e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),!1==e instanceof Array&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;r>i;i++)this.addShape(e[i],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i,r,n,o=t.material,a=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=i.shape,l=i.holes;if(!THREE.Shape.Utils.isClockWise(h))for(h=h.reverse(),i=0,r=l.length;r>i;i++)n=l[i],THREE.Shape.Utils.isClockWise(n)&&(l[i]=n.reverse());var c=THREE.Shape.Utils.triangulateShape(h,l);for(i=0,r=l.length;r>i;i++)n=l[i],h=h.concat(n);for(l=h.length,r=c.length,i=0;l>i;i++)n=h[i],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(i=0;r>i;i++)l=c[i],h=l[0]+s,n=l[1]+s,l=l[2]+s,this.faces.push(new THREE.Face3(h,n,l,null,null,o)),this.faceVertexUvs[0].push(a.generateBottomUV(this,e,t,h,n,l))},THREE.LatheGeometry=function(e,t,i,r){THREE.Geometry.call(this);for(var t=t||12,i=i||0,r=r||2*Math.PI,n=1/(e.length-1),o=1/t,a=0,s=t;s>=a;a++)for(var h=i+a*o*r,l=Math.cos(h),c=Math.sin(h),h=0,p=e.length;p>h;h++){var u=e[h],f=new THREE.Vector3;f.x=l*u.x-c*u.y,f.y=c*u.x+l*u.y,f.z=u.z,this.vertices.push(f)}for(i=e.length,a=0,s=t;s>a;a++)for(h=0,p=e.length-1;p>h;h++)r=t=h+i*a,c=t+i,l=t+1+i,this.faces.push(new THREE.Face4(r,c,l,t+1)),l=a*o,t=h*n,r=l+o,c=t+n,this.faceVertexUvs[0].push([new THREE.Vector2(l,t),new THREE.Vector2(r,t),new THREE.Vector2(r,c),new THREE.Vector2(l,c)]);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=i||1,this.heightSegments=r||1;for(var i=e/2,n=t/2,r=this.widthSegments,o=this.heightSegments,a=r+1,s=o+1,h=this.width/r,l=this.height/o,c=new THREE.Vector3(0,0,1),e=0;s>e;e++)for(t=0;a>t;t++)this.vertices.push(new THREE.Vector3(t*h-i,-(e*l-n),0));for(e=0;o>e;e++)for(t=0;r>t;t++)i=new THREE.Face4(t+a*e,t+a*(e+1),t+1+a*(e+1),t+1+a*e),i.normal.copy(c),i.vertexNormals.push(c.clone(),c.clone(),c.clone(),c.clone()),this.faces.push(i),this.faceVertexUvs[0].push([new THREE.Vector2(t/r,1-e/o),new THREE.Vector2(t/r,1-(e+1)/o),new THREE.Vector2((t+1)/r,1-(e+1)/o),new THREE.Vector2((t+1)/r,1-e/o)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(i)||6);for(var r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI,s=[],h=[],i=0;this.heightSegments>=i;i++){for(var l=[],c=[],t=0;this.widthSegments>=t;t++){var p=t/this.widthSegments,u=i/this.heightSegments,f=new THREE.Vector3;f.x=-this.radius*Math.cos(r+p*n)*Math.sin(o+u*a),f.y=this.radius*Math.cos(o+u*a),f.z=this.radius*Math.sin(r+p*n)*Math.sin(o+u*a),this.vertices.push(f),l.push(this.vertices.length-1),c.push(new THREE.Vector2(p,1-u))}s.push(l),h.push(c)}for(i=0;this.heightSegments>i;i++)for(t=0;this.widthSegments>t;t++){var r=s[i][t+1],n=s[i][t],o=s[i+1][t],a=s[i+1][t+1],l=this.vertices[r].clone().normalize(),c=this.vertices[n].clone().normalize(),p=this.vertices[o].clone().normalize(),u=this.vertices[a].clone().normalize(),f=h[i][t+1].clone(),d=h[i][t].clone(),E=h[i+1][t].clone(),m=h[i+1][t+1].clone();Math.abs(this.vertices[r].y)===this.radius?(this.faces.push(new THREE.Face3(r,o,a,[l,p,u])),this.faceVertexUvs[0].push([f,E,m])):Math.abs(this.vertices[o].y)===this.radius?(this.faces.push(new THREE.Face3(r,n,o,[l,c,p])),this.faceVertexUvs[0].push([f,d,E])):(this.faces.push(new THREE.Face4(r,n,o,a,[l,c,p,u])),this.faceVertexUvs[0].push([f,d,E,m]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var i=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,i,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,i,r,n){for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||8,this.tubularSegments=r||6,this.arc=n||2*Math.PI,n=new THREE.Vector3,e=[],t=[],i=0;this.radialSegments>=i;i++)for(r=0;this.tubularSegments>=r;r++){var o=r/this.tubularSegments*this.arc,a=2*i/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(o),n.y=this.radius*Math.sin(o);var s=new THREE.Vector3;s.x=(this.radius+this.tube*Math.cos(a))*Math.cos(o),s.y=(this.radius+this.tube*Math.cos(a))*Math.sin(o),s.z=this.tube*Math.sin(a),this.vertices.push(s),e.push(new THREE.Vector2(r/this.tubularSegments,i/this.radialSegments)),t.push(s.clone().sub(n).normalize())}for(i=1;this.radialSegments>=i;i++)for(r=1;this.tubularSegments>=r;r++){var n=(this.tubularSegments+1)*i+r-1,o=(this.tubularSegments+1)*(i-1)+r-1,a=(this.tubularSegments+1)*(i-1)+r,s=(this.tubularSegments+1)*i+r,h=new THREE.Face4(n,o,a,s,[t[n],t[o],t[a],t[s]]);h.normal.add(t[n]),h.normal.add(t[o]),h.normal.add(t[a]),h.normal.add(t[s]),h.normal.normalize(),this.faces.push(h),this.faceVertexUvs[0].push([e[n].clone(),e[o].clone(),e[a].clone(),e[s].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,i,r,n,o,a){function s(e,t,i,r,n,o){var a=Math.cos(e);return Math.cos(t),t=Math.sin(e),e*=i/r,i=Math.cos(e),a*=.5*n*(2+i),t=.5*n*(2+i)*t,n=.5*o*n*Math.sin(e),new THREE.Vector3(a,t,n)}for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=i||64,this.tubularSegments=r||8,this.p=n||2,this.q=o||3,this.heightScale=a||1,this.grid=Array(this.radialSegments),i=new THREE.Vector3,r=new THREE.Vector3,n=new THREE.Vector3,e=0;this.radialSegments>e;++e)for(this.grid[e]=Array(this.tubularSegments),t=0;this.tubularSegments>t;++t){var h=2*(e/this.radialSegments)*this.p*Math.PI,a=2*(t/this.tubularSegments)*Math.PI,o=s(h,a,this.q,this.p,this.radius,this.heightScale),h=s(h+.01,a,this.q,this.p,this.radius,this.heightScale);i.subVectors(h,o),r.addVectors(h,o),n.crossVectors(i,r),r.crossVectors(n,i),n.normalize(),r.normalize(),h=-this.tube*Math.cos(a),a=this.tube*Math.sin(a),o.x+=h*r.x+a*n.x,o.y+=h*r.y+a*n.y,o.z+=h*r.z+a*n.z,this.grid[e][t]=this.vertices.push(new THREE.Vector3(o.x,o.y,o.z))-1}for(e=0;this.radialSegments>e;++e)for(t=0;this.tubularSegments>t;++t){var n=(e+1)%this.radialSegments,o=(t+1)%this.tubularSegments,i=this.grid[e][t],r=this.grid[n][t],n=this.grid[n][o],o=this.grid[e][o],a=new THREE.Vector2(e/this.radialSegments,t/this.tubularSegments),h=new THREE.Vector2((e+1)/this.radialSegments,t/this.tubularSegments),l=new THREE.Vector2((e+1)/this.radialSegments,(t+1)/this.tubularSegments),c=new THREE.Vector2(e/this.radialSegments,(t+1)/this.tubularSegments);this.faces.push(new THREE.Face4(i,r,n,o)),this.faceVertexUvs[0].push([a,h,l,c])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.radiusSegments=r||8,this.closed=n||!1,o&&(this.debug=new THREE.Object3D),this.grid=[];var a,s,h,l,c,p,u,f,n=this.segments+1,o=new THREE.Vector3,t=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);for(p=t.tangents,u=t.normals,f=t.binormals,this.tangents=p,this.normals=u,this.binormals=f,t=0;n>t;t++)for(this.grid[t]=[],r=t/(n-1),c=e.getPointAt(r),r=p[t],a=u[t],s=f[t],this.debug&&(this.debug.add(new THREE.ArrowHelper(r,c,i,255)),this.debug.add(new THREE.ArrowHelper(a,c,i,16711680)),this.debug.add(new THREE.ArrowHelper(s,c,i,65280))),r=0;this.radiusSegments>r;r++)h=2*(r/this.radiusSegments)*Math.PI,l=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),o.copy(c),o.x+=l*a.x+h*s.x,o.y+=l*a.y+h*s.y,o.z+=l*a.z+h*s.z,this.grid[t][r]=this.vertices.push(new THREE.Vector3(o.x,o.y,o.z))-1;for(t=0;this.segments>t;t++)for(r=0;this.radiusSegments>r;r++)n=this.closed?(t+1)%this.segments:t+1,o=(r+1)%this.radiusSegments,e=this.grid[t][r],i=this.grid[n][r],n=this.grid[n][o],o=this.grid[t][o],p=new THREE.Vector2(t/this.segments,r/this.radiusSegments),u=new THREE.Vector2((t+1)/this.segments,r/this.radiusSegments),f=new THREE.Vector2((t+1)/this.segments,(r+1)/this.radiusSegments),a=new THREE.Vector2(t/this.segments,(r+1)/this.radiusSegments),this.faces.push(new THREE.Face4(e,i,n,o)),this.faceVertexUvs[0].push([p,u,f,a]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,i){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var n,o,a,s=[],h=[],l=[],c=new THREE.Vector3,p=new THREE.Matrix4,t=t+1;for(this.tangents=s,this.normals=h,this.binormals=l,n=0;t>n;n++)o=n/(t-1),s[n]=e.getTangentAt(o),s[n].normalize();for(h[0]=new THREE.Vector3,l[0]=new THREE.Vector3,e=Number.MAX_VALUE,n=Math.abs(s[0].x),o=Math.abs(s[0].y),a=Math.abs(s[0].z),e>=n&&(e=n,r.set(1,0,0)),e>=o&&(e=o,r.set(0,1,0)),e>=a&&r.set(0,0,1),c.crossVectors(s[0],r).normalize(),h[0].crossVectors(s[0],c),l[0].crossVectors(s[0],h[0]),n=1;t>n;n++)h[n]=h[n-1].clone(),l[n]=l[n-1].clone(),c.crossVectors(s[n-1],s[n]),c.length()>1e-4&&(c.normalize(),r=Math.acos(s[n-1].dot(s[n])),h[n].applyMatrix4(p.makeRotationAxis(c,r))),l[n].crossVectors(s[n],h[n]);if(i)for(r=Math.acos(h[0].dot(h[t-1])),r/=t-1,s[0].dot(c.crossVectors(h[0],h[t-1]))>0&&(r=-r),n=1;t>n;n++)h[n].applyMatrix4(p.makeRotationAxis(s[n],r*n)),l[n].crossVectors(s[n],h[n])},THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.Vector2(i,1-e),t}function o(e,t,i,r){1>r?(r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()]),r.centroid.add(e).add(t).add(i).divideScalar(3),r.normal=r.centroid.clone().normalize(),h.faces.push(r),r=Math.atan2(r.centroid.z,-r.centroid.x),h.faceVertexUvs[0].push([s(e.uv,e,r),s(t.uv,t,r),s(i.uv,i,r)])):(r-=1,o(e,a(e,t),a(e,i),r),o(a(e,t),t,a(t,i),r),o(a(e,i),a(t,i),i,r),o(a(e,t),a(t,i),a(e,i),r))}function a(e,t){p[e.index]||(p[e.index]=[]),p[t.index]||(p[t.index]=[]);var i=p[e.index][t.index];return void 0===i&&(p[e.index][t.index]=p[t.index][e.index]=i=n((new THREE.Vector3).addVectors(e,t).divideScalar(2))),i}function s(e,t,i){return 0>i&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(i/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this);for(var i=i||1,r=r||0,h=this,l=0,c=e.length;c>l;l++)n(new THREE.Vector3(e[l][0],e[l][1],e[l][2]));for(var p=[],e=this.vertices,l=0,c=t.length;c>l;l++)o(e[t[l][0]],e[t[l][1]],e[t[l][2]],r);for(this.mergeVertices(),l=0,c=this.vertices.length;c>l;l++)this.vertices[l].multiplyScalar(i);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,i,r){THREE.Geometry.call(this);var n,o,a,s,h=this.vertices,l=this.faces,c=this.faceVertexUvs[0],r=void 0===r?!1:r,p=t+1;for(n=0;i>=n;n++)for(s=n/i,o=0;t>=o;o++)a=o/t,a=e(a,s),h.push(a);var u,f,d,E;for(n=0;i>n;n++)for(o=0;t>o;o++)e=n*p+o,h=n*p+o+1,s=(n+1)*p+o,a=(n+1)*p+o+1,u=new THREE.Vector2(o/t,n/i),f=new THREE.Vector2((o+1)/t,n/i),d=new THREE.Vector2(o/t,(n+1)/i),E=new THREE.Vector2((o+1)/t,(n+1)/i),r?(l.push(new THREE.Face3(e,h,s)),l.push(new THREE.Face3(h,a,s)),c.push([u,f,d]),c.push([f,E,d])):(l.push(new THREE.Face4(e,h,a,s)),c.push([u,f,E,d]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var i=[[0,1,2],[0,2,1]],r=3;e.length>r;r++){var n=r,o=e[n].clone(),a=o.length();o.x+=2e-6*a*(Math.random()-.5),o.y+=2e-6*a*(Math.random()-.5),o.z+=2e-6*a*(Math.random()-.5);for(var a=[],s=0;i.length>s;){var h,l=i[s],c=o,p=e[l[0]];h=p;var u=e[l[1]],f=e[l[2]],d=new THREE.Vector3,E=new THREE.Vector3;if(d.subVectors(f,u),E.subVectors(h,u),d.cross(E),d.normalize(),h=d,p=h.dot(p),h.dot(c)>=p){for(c=0;3>c;c++){for(p=[l[c],l[(c+1)%3]],h=!0,u=0;a.length>u;u++)if(a[u][0]===p[1]&&a[u][1]===p[0]){a[u]=a[a.length-1],a.pop(),h=!1;break}h&&a.push(p)}i[s]=i[i.length-1],i.pop()}else s++}for(u=0;a.length>u;u++)i.push([a[u][0],a[u][1],n])}for(n=0,o=Array(e.length),r=0;i.length>r;r++)for(a=i[r],s=0;3>s;s++)void 0===o[a[s]]&&(o[a[s]]=n++,this.vertices.push(e[a[s]])),a[s]=o[a[s]];for(r=0;i.length>r;r++)this.faces.push(new THREE.Face3(i[r][0],i[r][1],i[r][2]));for(r=0;this.faces.length>r;r++)a=this.faces[r],this.faceVertexUvs[0].push([t(this.vertices[a.a]),t(this.vertices[a.b]),t(this.vertices[a.c])]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,t,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,i,r){THREE.Object3D.call(this),void 0===i&&(i=20),void 0===r&&(r=16776960);var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0)),n.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(n,new THREE.LineBasicMaterial({color:r})),this.add(this.line),n=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(n,new THREE.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(i)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=THREE.ArrowHelper.__v1.copy(e).normalize();t.y>.999?this.rotation.set(0,0,0):-.999>t.y?this.rotation.set(Math.PI,0,0):(e=THREE.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),t=Math.acos(t.y),e=THREE.ArrowHelper.__q1.setFromAxisAngle(e,t),this.rotation.setEulerFromQuaternion(e,this.eulerOrder))},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.ArrowHelper.__v1=new THREE.Vector3,THREE.ArrowHelper.__v2=new THREE.Vector3,THREE.ArrowHelper.__q1=new THREE.Quaternion,THREE.CameraHelper=function(e){function t(e,t,r){i(e,r),i(t,r)}function i(e,t){r.geometry.vertices.push(new THREE.Vector3),r.geometry.colors.push(new THREE.Color(t)),void 0===r.pointMap[e]&&(r.pointMap[e]=[]),r.pointMap[e].push(r.geometry.vertices.length-1)}THREE.Line.call(this);var r=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={},t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,i,r,n){if(THREE.CameraHelper.__v.set(i,r,n),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),e=t.pointMap[e],void 0!==e)for(i=0,r=e.length;r>i;i++)t.geometry.vertices[e[i]].copy(THREE.CameraHelper.__v)}var t=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var i=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.LineBasicMaterial({color:i,fog:!1});this.lightSphere=new THREE.Mesh(r,o),this.lightRays=new THREE.Line(n,a,THREE.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse&&(r=new THREE.SphereGeometry(t,8,4),n=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(r,n),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,i=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),r=new THREE.Geometry,r.vertices.push(this.position.clone()),r.vertices.push(this.targetSphere.position.clone()),r.computeLineDistances(),this.targetLine=new THREE.Line(r,i),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.HemisphereLightHelper=function(e,t,i){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var n=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(r);for(var r=this.groundColor.getHex(),o=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),a=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),s=new THREE.MeshBasicMaterial({color:n,fog:!1}),h=new THREE.MeshBasicMaterial({color:r,fog:!1}),l=0,c=o.faces.length;c>l;l++)o.faces[l].materialIndex=0;for(l=0,c=a.faces.length;c>l;l++)a.faces[l].materialIndex=1;THREE.GeometryUtils.merge(o,a),this.lightSphere=new THREE.Mesh(o,new THREE.MeshFaceMaterial([s,h])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+i),0),i,n),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+i),0),i,r),t=new THREE.Object3D,t.rotation.x=.5*-Math.PI,t.add(this.lightSphere),t.add(this.lightArrow),t.add(this.lightArrowGround),this.add(t),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position;var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var r=this.color.getHex(),i=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.IcosahedronGeometry(1,2),a=new THREE.MeshBasicMaterial({color:r,fog:!1}),s=new THREE.LineBasicMaterial({color:r,fog:!1}),r=new THREE.MeshBasicMaterial({color:r,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(i,a),this.lightRays=new THREE.Line(n,s,THREE.LinePieces),this.lightDistance=new THREE.Mesh(o,r),i=e.distance,0===i?this.lightDistance.visible=!1:this.lightDistance.scale.set(i,i,i),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color),e=this.light.distance,0===e?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(e,e,e))},THREE.SpotLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var i=this.color.getHex(),r=new THREE.SphereGeometry(t,16,8),n=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),a=new THREE.Matrix4;a.rotateX(-Math.PI/2),a.translate(new THREE.Vector3(0,-.5,0)),o.applyMatrix(a);var s=new THREE.MeshBasicMaterial({color:i,fog:!1}),a=new THREE.LineBasicMaterial({color:i,fog:!1}),h=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new THREE.Mesh(r,s),this.lightCone=new THREE.Mesh(o,h),r=e.distance?e.distance:1e4,o=2*r*Math.tan(.5*e.angle),this.lightCone.scale.set(o,o,r),this.lightRays=new THREE.Line(n,a,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse&&(n=new THREE.SphereGeometry(t,8,4),a=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(n,a),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,i=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),n=new THREE.Geometry,n.vertices.push(this.position.clone()),n.vertices.push(this.targetSphere.position.clone()),n.computeLineDistances(),this.targetLine=new THREE.Line(n,i),this.targetLine.properties.isGizmo=!0),this.properties.isGizmo=!0
},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e),e=THREE.Math.clamp(this.light.intensity,0,1),this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,i,r,n,o){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;i>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=.25*t.x*Math.PI,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,i/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)(\d+)/,r={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o].name.match(i);if(s&&s.length>1){var h=s[1];r[h]||(r[h]={start:1/0,end:-1/0}),s=r[h],s.start>o&&(s.start=o),o>s.end&&(s.end=o),t||(t=h)}}for(h in r)s=r[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;i>t;t++){var r=this.animationsList[t];if(r.active){var n=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||0>r.time)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)):(r.time%=r.duration,0>r.time&&(r.time+=r.duration));var o=r.startFrame+THREE.Math.clamp(Math.floor(r.time/n),0,r.length-1),a=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o),n=r.time%n/n,r.directionBackwards&&(n=1-n),this.morphTargetInfluences[r.currentFrame]=n*a,this.morphTargetInfluences[r.lastFrame]=(1-n)*a}}},THREE.LensFlarePlugin=function(){function e(e,i){var r=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER),a="precision "+i+" float;\n";return t.shaderSource(n,a+e.fragmentShader),t.shaderSource(o,a+e.vertexShader),t.compileShader(n),t.compileShader(o),t.attachShader(r,n),t.attachShader(r,o),t.linkProgram(r),r}var t,i,r,n,o,a,s,h,l,c,p,u,f;this.init=function(d){t=d.context,i=d,r=d.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),d=0,n[d++]=-1,n[d++]=-1,n[d++]=0,n[d++]=0,n[d++]=1,n[d++]=-1,n[d++]=1,n[d++]=0,n[d++]=1,n[d++]=1,n[d++]=1,n[d++]=1,n[d++]=-1,n[d++]=1,n[d++]=0,n[d++]=1,d=0,o[d++]=0,o[d++]=1,o[d++]=2,o[d++]=0,o[d++]=2,o[d++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),h=t.createTexture(),l=t.createTexture(),t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,l),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(c=!1,p=e(THREE.ShaderFlares.lensFlare,r)):(c=!0,p=e(THREE.ShaderFlares.lensFlareVertexTexture,r)),u={},f={},u.vertex=t.getAttribLocation(p,"position"),u.uv=t.getAttribLocation(p,"uv"),f.renderType=t.getUniformLocation(p,"renderType"),f.map=t.getUniformLocation(p,"map"),f.occlusionMap=t.getUniformLocation(p,"occlusionMap"),f.opacity=t.getUniformLocation(p,"opacity"),f.color=t.getUniformLocation(p,"color"),f.scale=t.getUniformLocation(p,"scale"),f.rotation=t.getUniformLocation(p,"rotation"),f.screenPosition=t.getUniformLocation(p,"screenPosition")},this.render=function(e,r,n,o){var e=e.__webglFlares,d=e.length;if(d){var E=new THREE.Vector3,m=o/n,g=.5*n,v=.5*o,T=16/o,y=new THREE.Vector2(T*m,T),R=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1),H=f,T=u;t.useProgram(p),t.enableVertexAttribArray(u.vertex),t.enableVertexAttribArray(u.uv),t.uniform1i(H.occlusionMap,0),t.uniform1i(H.map,1),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(T.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(T.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.disable(t.CULL_FACE),t.depthMask(!1);var _,w,b,S,M;for(_=0;d>_;_++)if(T=16/o,y.set(T*m,T),S=e[_],E.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]),E.applyMatrix4(r.matrixWorldInverse),E.applyProjection(r.projectionMatrix),R.copy(E),x.x=R.x*g+g,x.y=R.y*v+v,c||x.x>0&&n>x.x&&x.y>0&&o>x.y)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,0),t.uniform2f(H.scale,y.x,y.y),t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,l),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,x.x-8,x.y-8,16,16,0),t.uniform1i(H.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,h),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),S.positionScreen.copy(R),S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares(),t.uniform1i(H.renderType,2),t.enable(t.BLEND),w=0,b=S.lensFlares.length;b>w;w++)M=S.lensFlares[w],M.opacity>.001&&M.scale>.001&&(R.x=M.x,R.y=M.y,R.z=M.z,T=M.size*M.scale/o,y.x=T*m,y.y=T,t.uniform3f(H.screenPosition,R.x,R.y,R.z),t.uniform2f(H.scale,y.x,y.y),t.uniform1f(H.rotation,M.rotation),t.uniform1f(H.opacity,M.opacity),t.uniform3f(H.color,M.color.r,M.color.g,M.color.b),i.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst),i.setTexture(M.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4,h=new THREE.Vector3,l=new THREE.Vector3;this.init=function(a){e=a.context,t=a;var a=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,i)},this.update=function(c,p){var u,f,d,E,m,g,v,T,y,R=[];for(E=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),t.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),u=0,f=c.__lights.length;f>u;u++)if(d=c.__lights[u],d.castShadow)if(d instanceof THREE.DirectionalLight&&d.shadowCascade)for(m=0;d.shadowCascadeCount>m;m++){var x;if(d.shadowCascadeArray[m])x=d.shadowCascadeArray[m];else{y=d,v=m,x=new THREE.DirectionalLight,x.isVirtual=!0,x.onlyShadow=!0,x.castShadow=!0,x.shadowCameraNear=y.shadowCameraNear,x.shadowCameraFar=y.shadowCameraFar,x.shadowCameraLeft=y.shadowCameraLeft,x.shadowCameraRight=y.shadowCameraRight,x.shadowCameraBottom=y.shadowCameraBottom,x.shadowCameraTop=y.shadowCameraTop,x.shadowCameraVisible=y.shadowCameraVisible,x.shadowDarkness=y.shadowDarkness,x.shadowBias=y.shadowCascadeBias[v],x.shadowMapWidth=y.shadowCascadeWidth[v],x.shadowMapHeight=y.shadowCascadeHeight[v],x.pointsWorld=[],x.pointsFrustum=[],T=x.pointsWorld,g=x.pointsFrustum;for(var H=0;8>H;H++)T[H]=new THREE.Vector3,g[H]=new THREE.Vector3;T=y.shadowCascadeNearZ[v],y=y.shadowCascadeFarZ[v],g[0].set(-1,-1,T),g[1].set(1,-1,T),g[2].set(-1,1,T),g[3].set(1,1,T),g[4].set(-1,-1,y),g[5].set(1,-1,y),g[6].set(-1,1,y),g[7].set(1,1,y),x.originalCamera=p,g=new THREE.Gyroscope,g.position=d.shadowCascadeOffset,g.add(x),g.add(x.target),p.add(g),d.shadowCascadeArray[m]=x,console.log("Created virtualLight",x)}v=d,T=m,y=v.shadowCascadeArray[T],y.position.copy(v.position),y.target.position.copy(v.target.position),y.lookAt(y.target),y.shadowCameraVisible=v.shadowCameraVisible,y.shadowDarkness=v.shadowDarkness,y.shadowBias=v.shadowCascadeBias[T],g=v.shadowCascadeNearZ[T],v=v.shadowCascadeFarZ[T],y=y.pointsFrustum,y[0].z=g,y[1].z=g,y[2].z=g,y[3].z=g,y[4].z=v,y[5].z=v,y[6].z=v,y[7].z=v,R[E]=x,E++}else R[E]=d,E++;for(u=0,f=R.length;f>u;u++){if(d=R[u],d.shadowMap||(m=THREE.LinearFilter,t.shadowMapType===THREE.PCFSoftShadowMap&&(m=THREE.NearestFilter),d.shadowMap=new THREE.WebGLRenderTarget(d.shadowMapWidth,d.shadowMapHeight,{minFilter:m,magFilter:m,format:THREE.RGBAFormat}),d.shadowMapSize=new THREE.Vector2(d.shadowMapWidth,d.shadowMapHeight),d.shadowMatrix=new THREE.Matrix4),!d.shadowCamera){if(d instanceof THREE.SpotLight)d.shadowCamera=new THREE.PerspectiveCamera(d.shadowCameraFov,d.shadowMapWidth/d.shadowMapHeight,d.shadowCameraNear,d.shadowCameraFar);else{if(!(d instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}d.shadowCamera=new THREE.OrthographicCamera(d.shadowCameraLeft,d.shadowCameraRight,d.shadowCameraTop,d.shadowCameraBottom,d.shadowCameraNear,d.shadowCameraFar)}c.add(d.shadowCamera),t.autoUpdateScene&&c.updateMatrixWorld()}if(d.shadowCameraVisible&&!d.cameraHelper&&(d.cameraHelper=new THREE.CameraHelper(d.shadowCamera),d.shadowCamera.add(d.cameraHelper)),d.isVirtual&&x.originalCamera==p){for(m=p,E=d.shadowCamera,g=d.pointsFrustum,y=d.pointsWorld,h.set(1/0,1/0,1/0),l.set(-1/0,-1/0,-1/0),v=0;8>v;v++)T=y[v],T.copy(g[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(T,m),T.applyMatrix4(E.matrixWorldInverse),T.x<h.x&&(h.x=T.x),T.x>l.x&&(l.x=T.x),T.y<h.y&&(h.y=T.y),T.y>l.y&&(l.y=T.y),T.z<h.z&&(h.z=T.z),T.z>l.z&&(l.z=T.z);E.left=h.x,E.right=l.x,E.top=l.y,E.bottom=h.y,E.updateProjectionMatrix()}for(E=d.shadowMap,g=d.shadowMatrix,m=d.shadowCamera,m.position.copy(d.matrixWorld.getPosition()),m.lookAt(d.target.matrixWorld.getPosition()),m.updateMatrixWorld(),m.matrixWorldInverse.getInverse(m.matrixWorld),d.cameraHelper&&(d.cameraHelper.visible=d.shadowCameraVisible),d.shadowCameraVisible&&d.cameraHelper.update(),g.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),g.multiply(m.projectionMatrix),g.multiply(m.matrixWorldInverse),s.multiplyMatrices(m.projectionMatrix,m.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(E),t.clear(),y=c.__webglObjects,d=0,E=y.length;E>d;d++)v=y[d],g=v.object,v.render=!1,!g.visible||!g.castShadow||(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)&&g.frustumCulled&&!a.intersectsObject(g)||(g._modelViewMatrix.multiplyMatrices(m.matrixWorldInverse,g.matrixWorld),v.render=!0);for(d=0,E=y.length;E>d;d++)v=y[d],v.render&&(g=v.object,v=v.buffer,H=g.material instanceof THREE.MeshFaceMaterial?g.material.materials[0]:g.material,T=g.geometry.morphTargets.length>0&&H.morphTargets,H=g instanceof THREE.SkinnedMesh&&H.skinning,T=g.customDepthMaterial?g.customDepthMaterial:H?T?o:n:T?r:i,v instanceof THREE.BufferGeometry?t.renderBufferDirect(m,c.__lights,null,T,v,g):t.renderBuffer(m,c.__lights,null,T,v,g));for(y=c.__webglObjectsImmediate,d=0,E=y.length;E>d;d++)v=y[d],g=v.object,g.visible&&g.castShadow&&(g._modelViewMatrix.multiplyMatrices(m.matrixWorldInverse,g.matrixWorld),t.renderImmediateObject(m,c.__lights,null,i,g))}u=t.getClearColor(),f=t.getClearAlpha(),e.clearColor(u.r,u.g,u.b,f),e.enable(e.BLEND),t.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var t,i,r,n,o,a,s,h,l,c;this.init=function(e){t=e.context,i=e,r=e.getPrecision(),n=new Float32Array(16),o=new Uint16Array(6),e=0,n[e++]=-1,n[e++]=-1,n[e++]=0,n[e++]=0,n[e++]=1,n[e++]=-1,n[e++]=1,n[e++]=0,n[e++]=1,n[e++]=1,n[e++]=1,n[e++]=1,n[e++]=-1,n[e++]=1,n[e++]=0,n[e++]=1,e=0,o[e++]=0,o[e++]=1,o[e++]=2,o[e++]=0,o[e++]=2,o[e++]=3,a=t.createBuffer(),s=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,a),t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW);var e=THREE.ShaderSprite.sprite,p=t.createProgram(),u=t.createShader(t.FRAGMENT_SHADER),f=t.createShader(t.VERTEX_SHADER),d="precision "+r+" float;\n";t.shaderSource(u,d+e.fragmentShader),t.shaderSource(f,d+e.vertexShader),t.compileShader(u),t.compileShader(f),t.attachShader(p,u),t.attachShader(p,f),t.linkProgram(p),h=p,l={},c={},l.position=t.getAttribLocation(h,"position"),l.uv=t.getAttribLocation(h,"uv"),c.uvOffset=t.getUniformLocation(h,"uvOffset"),c.uvScale=t.getUniformLocation(h,"uvScale"),c.rotation=t.getUniformLocation(h,"rotation"),c.scale=t.getUniformLocation(h,"scale"),c.alignment=t.getUniformLocation(h,"alignment"),c.color=t.getUniformLocation(h,"color"),c.map=t.getUniformLocation(h,"map"),c.opacity=t.getUniformLocation(h,"opacity"),c.useScreenCoordinates=t.getUniformLocation(h,"useScreenCoordinates"),c.sizeAttenuation=t.getUniformLocation(h,"sizeAttenuation"),c.screenPosition=t.getUniformLocation(h,"screenPosition"),c.modelViewMatrix=t.getUniformLocation(h,"modelViewMatrix"),c.projectionMatrix=t.getUniformLocation(h,"projectionMatrix"),c.fogType=t.getUniformLocation(h,"fogType"),c.fogDensity=t.getUniformLocation(h,"fogDensity"),c.fogNear=t.getUniformLocation(h,"fogNear"),c.fogFar=t.getUniformLocation(h,"fogFar"),c.fogColor=t.getUniformLocation(h,"fogColor"),c.alphaTest=t.getUniformLocation(h,"alphaTest")},this.render=function(r,n,o,p){var u=r.__webglSprites,f=u.length;if(f){var d=l,E=c,m=p/o,o=.5*o,g=.5*p;t.useProgram(h),t.enableVertexAttribArray(d.position),t.enableVertexAttribArray(d.uv),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.bindBuffer(t.ARRAY_BUFFER,a),t.vertexAttribPointer(d.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(d.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.uniformMatrix4fv(E.projectionMatrix,!1,n.projectionMatrix.elements),t.activeTexture(t.TEXTURE0),t.uniform1i(E.map,0);var v=d=0,T=r.fog;T?(t.uniform3f(E.fogColor,T.color.r,T.color.g,T.color.b),T instanceof THREE.Fog?(t.uniform1f(E.fogNear,T.near),t.uniform1f(E.fogFar,T.far),t.uniform1i(E.fogType,1),v=d=1):T instanceof THREE.FogExp2&&(t.uniform1f(E.fogDensity,T.density),t.uniform1i(E.fogType,2),v=d=2)):(t.uniform1i(E.fogType,0),v=d=0);for(var y,R,x=[],T=0;f>T;T++)y=u[T],R=y.material,y.visible&&0!==R.opacity&&(R.useScreenCoordinates?y.z=-y.position.z:(y._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]));for(u.sort(e),T=0;f>T;T++)y=u[T],R=y.material,y.visible&&0!==R.opacity&&R.map&&R.map.image&&R.map.image.width&&(t.uniform1f(E.alphaTest,R.alphaTest),!0===R.useScreenCoordinates?(t.uniform1i(E.useScreenCoordinates,1),t.uniform3f(E.screenPosition,(y.position.x*i.devicePixelRatio-o)/o,(g-y.position.y*i.devicePixelRatio)/g,Math.max(0,Math.min(1,y.position.z))),x[0]=i.devicePixelRatio,x[1]=i.devicePixelRatio):(t.uniform1i(E.useScreenCoordinates,0),t.uniform1i(E.sizeAttenuation,R.sizeAttenuation?1:0),t.uniformMatrix4fv(E.modelViewMatrix,!1,y._modelViewMatrix.elements),x[0]=1,x[1]=1),n=r.fog&&R.fog?v:0,d!==n&&(t.uniform1i(E.fogType,n),d=n),n=1/(R.scaleByViewport?p:1),x[0]*=n*m*y.scale.x,x[1]*=n*y.scale.y,t.uniform2f(E.uvScale,R.uvScale.x,R.uvScale.y),t.uniform2f(E.uvOffset,R.uvOffset.x,R.uvOffset.y),t.uniform2f(E.alignment,R.alignment.x,R.alignment.y),t.uniform1f(E.opacity,R.opacity),t.uniform3f(E.color,R.color.r,R.color.g,R.color.b),t.uniform1f(E.rotation,y.rotation),t.uniform2fv(E.scale,x),i.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),i.setDepthTest(R.depthTest),i.setDepthWrite(R.depthWrite),i.setTexture(R.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,i,r,n,o,a=new THREE.Frustum,s=new THREE.Matrix4;this.init=function(a){e=a.context,t=a;var a=THREE.ShaderLib.depthRGBA,s=THREE.UniformsUtils.clone(a.uniforms);i=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s}),r=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0}),n=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:s,morphTargets:!0,skinning:!0}),i._shadowPass=!0,r._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,l){var c,p,u,f,d,E;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&h.updateMatrixWorld(),l.matrixWorldInverse.getInverse(l.matrixWorld),s.multiplyMatrices(l.projectionMatrix,l.matrixWorldInverse),a.setFromMatrix(s),t.setRenderTarget(this.renderTarget),t.clear(),E=h.__webglObjects,c=0,p=E.length;p>c;c++)u=E[c],d=u.object,u.render=!1,!d.visible||(d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem)&&d.frustumCulled&&!a.intersectsObject(d)||(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),u.render=!0);var m;for(c=0,p=E.length;p>c;c++)u=E[c],!u.render||(d=u.object,u=u.buffer,d instanceof THREE.ParticleSystem&&!d.customDepthMaterial)||((m=d.material instanceof THREE.MeshFaceMaterial?d.material.materials[0]:d.material)&&t.setMaterialFaces(d.material),f=d.geometry.morphTargets.length>0&&m.morphTargets,m=d instanceof THREE.SkinnedMesh&&m.skinning,f=d.customDepthMaterial?d.customDepthMaterial:m?f?o:n:f?r:i,u instanceof THREE.BufferGeometry?t.renderBufferDirect(l,h.__lights,null,f,u,d):t.renderBuffer(l,h.__lights,null,f,u,d));for(E=h.__webglObjectsImmediate,c=0,p=E.length;p>c;c++)u=E[c],d=u.object,d.visible&&(d._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,d.matrixWorld),t.renderImmediateObject(l,h.__lights,null,i,d));c=t.getClearColor(),p=t.getClearAlpha(),e.clearColor(c.r,c.g,c.b,p),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};